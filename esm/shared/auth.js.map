{"version":3,"file":"auth.js","sources":["../../../src/shared/auth.ts"],"sourcesContent":["import { z } from 'zod';\n\n/**\n * Reusable URL validation that disallows javascript: scheme\n */\nexport const SafeUrlSchema = z\n    .string()\n    .url()\n    .superRefine((val, ctx) => {\n        if (!URL.canParse(val)) {\n            ctx.addIssue({\n                code: z.ZodIssueCode.custom,\n                message: 'URL must be parseable',\n                fatal: true\n            });\n\n            return z.NEVER;\n        }\n    })\n    .refine(\n        url => {\n            const u = new URL(url);\n            return u.protocol !== 'javascript:' && u.protocol !== 'data:' && u.protocol !== 'vbscript:';\n        },\n        { message: 'URL cannot use javascript:, data:, or vbscript: scheme' }\n    );\n\n/**\n * RFC 9728 OAuth Protected Resource Metadata\n */\nexport const OAuthProtectedResourceMetadataSchema = z\n    .object({\n        resource: z.string().url(),\n        authorization_servers: z.array(SafeUrlSchema).optional(),\n        jwks_uri: z.string().url().optional(),\n        scopes_supported: z.array(z.string()).optional(),\n        bearer_methods_supported: z.array(z.string()).optional(),\n        resource_signing_alg_values_supported: z.array(z.string()).optional(),\n        resource_name: z.string().optional(),\n        resource_documentation: z.string().optional(),\n        resource_policy_uri: z.string().url().optional(),\n        resource_tos_uri: z.string().url().optional(),\n        tls_client_certificate_bound_access_tokens: z.boolean().optional(),\n        authorization_details_types_supported: z.array(z.string()).optional(),\n        dpop_signing_alg_values_supported: z.array(z.string()).optional(),\n        dpop_bound_access_tokens_required: z.boolean().optional()\n    })\n    .passthrough();\n\n/**\n * RFC 8414 OAuth 2.0 Authorization Server Metadata\n */\nexport const OAuthMetadataSchema = z\n    .object({\n        issuer: z.string(),\n        authorization_endpoint: SafeUrlSchema,\n        token_endpoint: SafeUrlSchema,\n        registration_endpoint: SafeUrlSchema.optional(),\n        scopes_supported: z.array(z.string()).optional(),\n        response_types_supported: z.array(z.string()),\n        response_modes_supported: z.array(z.string()).optional(),\n        grant_types_supported: z.array(z.string()).optional(),\n        token_endpoint_auth_methods_supported: z.array(z.string()).optional(),\n        token_endpoint_auth_signing_alg_values_supported: z.array(z.string()).optional(),\n        service_documentation: SafeUrlSchema.optional(),\n        revocation_endpoint: SafeUrlSchema.optional(),\n        revocation_endpoint_auth_methods_supported: z.array(z.string()).optional(),\n        revocation_endpoint_auth_signing_alg_values_supported: z.array(z.string()).optional(),\n        introspection_endpoint: z.string().optional(),\n        introspection_endpoint_auth_methods_supported: z.array(z.string()).optional(),\n        introspection_endpoint_auth_signing_alg_values_supported: z.array(z.string()).optional(),\n        code_challenge_methods_supported: z.array(z.string()).optional()\n    })\n    .passthrough();\n\n/**\n * OpenID Connect Discovery 1.0 Provider Metadata\n * see: https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata\n */\nexport const OpenIdProviderMetadataSchema = z\n    .object({\n        issuer: z.string(),\n        authorization_endpoint: SafeUrlSchema,\n        token_endpoint: SafeUrlSchema,\n        userinfo_endpoint: SafeUrlSchema.optional(),\n        jwks_uri: SafeUrlSchema,\n        registration_endpoint: SafeUrlSchema.optional(),\n        scopes_supported: z.array(z.string()).optional(),\n        response_types_supported: z.array(z.string()),\n        response_modes_supported: z.array(z.string()).optional(),\n        grant_types_supported: z.array(z.string()).optional(),\n        acr_values_supported: z.array(z.string()).optional(),\n        subject_types_supported: z.array(z.string()),\n        id_token_signing_alg_values_supported: z.array(z.string()),\n        id_token_encryption_alg_values_supported: z.array(z.string()).optional(),\n        id_token_encryption_enc_values_supported: z.array(z.string()).optional(),\n        userinfo_signing_alg_values_supported: z.array(z.string()).optional(),\n        userinfo_encryption_alg_values_supported: z.array(z.string()).optional(),\n        userinfo_encryption_enc_values_supported: z.array(z.string()).optional(),\n        request_object_signing_alg_values_supported: z.array(z.string()).optional(),\n        request_object_encryption_alg_values_supported: z.array(z.string()).optional(),\n        request_object_encryption_enc_values_supported: z.array(z.string()).optional(),\n        token_endpoint_auth_methods_supported: z.array(z.string()).optional(),\n        token_endpoint_auth_signing_alg_values_supported: z.array(z.string()).optional(),\n        display_values_supported: z.array(z.string()).optional(),\n        claim_types_supported: z.array(z.string()).optional(),\n        claims_supported: z.array(z.string()).optional(),\n        service_documentation: z.string().optional(),\n        claims_locales_supported: z.array(z.string()).optional(),\n        ui_locales_supported: z.array(z.string()).optional(),\n        claims_parameter_supported: z.boolean().optional(),\n        request_parameter_supported: z.boolean().optional(),\n        request_uri_parameter_supported: z.boolean().optional(),\n        require_request_uri_registration: z.boolean().optional(),\n        op_policy_uri: SafeUrlSchema.optional(),\n        op_tos_uri: SafeUrlSchema.optional()\n    })\n    .passthrough();\n\n/**\n * OpenID Connect Discovery metadata that may include OAuth 2.0 fields\n * This schema represents the real-world scenario where OIDC providers\n * return a mix of OpenID Connect and OAuth 2.0 metadata fields\n */\nexport const OpenIdProviderDiscoveryMetadataSchema = OpenIdProviderMetadataSchema.merge(\n    OAuthMetadataSchema.pick({\n        code_challenge_methods_supported: true\n    })\n);\n\n/**\n * OAuth 2.1 token response\n */\nexport const OAuthTokensSchema = z\n    .object({\n        access_token: z.string(),\n        id_token: z.string().optional(), // Optional for OAuth 2.1, but necessary in OpenID Connect\n        token_type: z.string(),\n        expires_in: z.number().optional(),\n        scope: z.string().optional(),\n        refresh_token: z.string().optional()\n    })\n    .strip();\n\n/**\n * OAuth 2.1 error response\n */\nexport const OAuthErrorResponseSchema = z.object({\n    error: z.string(),\n    error_description: z.string().optional(),\n    error_uri: z.string().optional()\n});\n\n/**\n * RFC 7591 OAuth 2.0 Dynamic Client Registration metadata\n */\nexport const OAuthClientMetadataSchema = z\n    .object({\n        redirect_uris: z.array(SafeUrlSchema),\n        token_endpoint_auth_method: z.string().optional(),\n        grant_types: z.array(z.string()).optional(),\n        response_types: z.array(z.string()).optional(),\n        client_name: z.string().optional(),\n        client_uri: SafeUrlSchema.optional(),\n        logo_uri: SafeUrlSchema.optional(),\n        scope: z.string().optional(),\n        contacts: z.array(z.string()).optional(),\n        tos_uri: SafeUrlSchema.optional(),\n        policy_uri: z.string().optional(),\n        jwks_uri: SafeUrlSchema.optional(),\n        jwks: z.any().optional(),\n        software_id: z.string().optional(),\n        software_version: z.string().optional(),\n        software_statement: z.string().optional()\n    })\n    .strip();\n\n/**\n * RFC 7591 OAuth 2.0 Dynamic Client Registration client information\n */\nexport const OAuthClientInformationSchema = z\n    .object({\n        client_id: z.string(),\n        client_secret: z.string().optional(),\n        client_id_issued_at: z.number().optional(),\n        client_secret_expires_at: z.number().optional()\n    })\n    .strip();\n\n/**\n * RFC 7591 OAuth 2.0 Dynamic Client Registration full response (client information plus metadata)\n */\nexport const OAuthClientInformationFullSchema = OAuthClientMetadataSchema.merge(OAuthClientInformationSchema);\n\n/**\n * RFC 7591 OAuth 2.0 Dynamic Client Registration error response\n */\nexport const OAuthClientRegistrationErrorSchema = z\n    .object({\n        error: z.string(),\n        error_description: z.string().optional()\n    })\n    .strip();\n\n/**\n * RFC 7009 OAuth 2.0 Token Revocation request\n */\nexport const OAuthTokenRevocationRequestSchema = z\n    .object({\n        token: z.string(),\n        token_type_hint: z.string().optional()\n    })\n    .strip();\n\nexport type OAuthMetadata = z.infer<typeof OAuthMetadataSchema>;\nexport type OpenIdProviderMetadata = z.infer<typeof OpenIdProviderMetadataSchema>;\nexport type OpenIdProviderDiscoveryMetadata = z.infer<typeof OpenIdProviderDiscoveryMetadataSchema>;\n\nexport type OAuthTokens = z.infer<typeof OAuthTokensSchema>;\nexport type OAuthErrorResponse = z.infer<typeof OAuthErrorResponseSchema>;\nexport type OAuthClientMetadata = z.infer<typeof OAuthClientMetadataSchema>;\nexport type OAuthClientInformation = z.infer<typeof OAuthClientInformationSchema>;\nexport type OAuthClientInformationFull = z.infer<typeof OAuthClientInformationFullSchema>;\nexport type OAuthClientRegistrationError = z.infer<typeof OAuthClientRegistrationErrorSchema>;\nexport type OAuthTokenRevocationRequest = z.infer<typeof OAuthTokenRevocationRequestSchema>;\nexport type OAuthProtectedResourceMetadata = z.infer<typeof OAuthProtectedResourceMetadataSchema>;\n\n// Unified type for authorization server metadata\nexport type AuthorizationServerMetadata = OAuthMetadata | OpenIdProviderDiscoveryMetadata;\n"],"names":[],"mappings":"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"}