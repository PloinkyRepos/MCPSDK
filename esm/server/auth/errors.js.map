{"version":3,"file":"errors.js","sources":["../../../../src/server/auth/errors.ts"],"sourcesContent":["import { OAuthErrorResponse } from '../../shared/auth.js';\n\n/**\n * Base class for all OAuth errors\n */\nexport class OAuthError extends Error {\n    static errorCode: string;\n\n    constructor(\n        message: string,\n        public readonly errorUri?: string\n    ) {\n        super(message);\n        this.name = this.constructor.name;\n    }\n\n    /**\n     * Converts the error to a standard OAuth error response object\n     */\n    toResponseObject(): OAuthErrorResponse {\n        const response: OAuthErrorResponse = {\n            error: this.errorCode,\n            error_description: this.message\n        };\n\n        if (this.errorUri) {\n            response.error_uri = this.errorUri;\n        }\n\n        return response;\n    }\n\n    get errorCode(): string {\n        return (this.constructor as typeof OAuthError).errorCode;\n    }\n}\n\n/**\n * Invalid request error - The request is missing a required parameter,\n * includes an invalid parameter value, includes a parameter more than once,\n * or is otherwise malformed.\n */\nexport class InvalidRequestError extends OAuthError {\n    static errorCode = 'invalid_request';\n}\n\n/**\n * Invalid client error - Client authentication failed (e.g., unknown client, no client\n * authentication included, or unsupported authentication method).\n */\nexport class InvalidClientError extends OAuthError {\n    static errorCode = 'invalid_client';\n}\n\n/**\n * Invalid grant error - The provided authorization grant or refresh token is\n * invalid, expired, revoked, does not match the redirection URI used in the\n * authorization request, or was issued to another client.\n */\nexport class InvalidGrantError extends OAuthError {\n    static errorCode = 'invalid_grant';\n}\n\n/**\n * Unauthorized client error - The authenticated client is not authorized to use\n * this authorization grant type.\n */\nexport class UnauthorizedClientError extends OAuthError {\n    static errorCode = 'unauthorized_client';\n}\n\n/**\n * Unsupported grant type error - The authorization grant type is not supported\n * by the authorization server.\n */\nexport class UnsupportedGrantTypeError extends OAuthError {\n    static errorCode = 'unsupported_grant_type';\n}\n\n/**\n * Invalid scope error - The requested scope is invalid, unknown, malformed, or\n * exceeds the scope granted by the resource owner.\n */\nexport class InvalidScopeError extends OAuthError {\n    static errorCode = 'invalid_scope';\n}\n\n/**\n * Access denied error - The resource owner or authorization server denied the request.\n */\nexport class AccessDeniedError extends OAuthError {\n    static errorCode = 'access_denied';\n}\n\n/**\n * Server error - The authorization server encountered an unexpected condition\n * that prevented it from fulfilling the request.\n */\nexport class ServerError extends OAuthError {\n    static errorCode = 'server_error';\n}\n\n/**\n * Temporarily unavailable error - The authorization server is currently unable to\n * handle the request due to a temporary overloading or maintenance of the server.\n */\nexport class TemporarilyUnavailableError extends OAuthError {\n    static errorCode = 'temporarily_unavailable';\n}\n\n/**\n * Unsupported response type error - The authorization server does not support\n * obtaining an authorization code using this method.\n */\nexport class UnsupportedResponseTypeError extends OAuthError {\n    static errorCode = 'unsupported_response_type';\n}\n\n/**\n * Unsupported token type error - The authorization server does not support\n * the requested token type.\n */\nexport class UnsupportedTokenTypeError extends OAuthError {\n    static errorCode = 'unsupported_token_type';\n}\n\n/**\n * Invalid token error - The access token provided is expired, revoked, malformed,\n * or invalid for other reasons.\n */\nexport class InvalidTokenError extends OAuthError {\n    static errorCode = 'invalid_token';\n}\n\n/**\n * Method not allowed error - The HTTP method used is not allowed for this endpoint.\n * (Custom, non-standard error)\n */\nexport class MethodNotAllowedError extends OAuthError {\n    static errorCode = 'method_not_allowed';\n}\n\n/**\n * Too many requests error - Rate limit exceeded.\n * (Custom, non-standard error based on RFC 6585)\n */\nexport class TooManyRequestsError extends OAuthError {\n    static errorCode = 'too_many_requests';\n}\n\n/**\n * Invalid client metadata error - The client metadata is invalid.\n * (Custom error for dynamic client registration - RFC 7591)\n */\nexport class InvalidClientMetadataError extends OAuthError {\n    static errorCode = 'invalid_client_metadata';\n}\n\n/**\n * Insufficient scope error - The request requires higher privileges than provided by the access token.\n */\nexport class InsufficientScopeError extends OAuthError {\n    static errorCode = 'insufficient_scope';\n}\n\n/**\n * A utility class for defining one-off error codes\n */\nexport class CustomOAuthError extends OAuthError {\n    constructor(\n        private readonly customErrorCode: string,\n        message: string,\n        errorUri?: string\n    ) {\n        super(message, errorUri);\n    }\n\n    get errorCode(): string {\n        return this.customErrorCode;\n    }\n}\n\n/**\n * A full list of all OAuthErrors, enabling parsing from error responses\n */\nexport const OAUTH_ERRORS = {\n    [InvalidRequestError.errorCode]: InvalidRequestError,\n    [InvalidClientError.errorCode]: InvalidClientError,\n    [InvalidGrantError.errorCode]: InvalidGrantError,\n    [UnauthorizedClientError.errorCode]: UnauthorizedClientError,\n    [UnsupportedGrantTypeError.errorCode]: UnsupportedGrantTypeError,\n    [InvalidScopeError.errorCode]: InvalidScopeError,\n    [AccessDeniedError.errorCode]: AccessDeniedError,\n    [ServerError.errorCode]: ServerError,\n    [TemporarilyUnavailableError.errorCode]: TemporarilyUnavailableError,\n    [UnsupportedResponseTypeError.errorCode]: UnsupportedResponseTypeError,\n    [UnsupportedTokenTypeError.errorCode]: UnsupportedTokenTypeError,\n    [InvalidTokenError.errorCode]: InvalidTokenError,\n    [MethodNotAllowedError.errorCode]: MethodNotAllowedError,\n    [TooManyRequestsError.errorCode]: TooManyRequestsError,\n    [InvalidClientMetadataError.errorCode]: InvalidClientMetadataError,\n    [InsufficientScopeError.errorCode]: InsufficientScopeError\n} as const;\n"],"names":[],"mappings":"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"}