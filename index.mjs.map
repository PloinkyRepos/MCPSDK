{"version":3,"file":"index.mjs","sources":["../node_modules/zod/lib/index.mjs","../src/types.ts","../src/shared/protocol.ts","../node_modules/uri-js/dist/es5/uri.all.js","../node_modules/fast-deep-equal/index.js","../node_modules/ajv/lib/compile/ucs2length.js","../node_modules/ajv/lib/compile/util.js","../node_modules/ajv/lib/compile/schema_obj.js","../node_modules/json-schema-traverse/index.js","../node_modules/ajv/lib/compile/resolve.js","../node_modules/ajv/lib/compile/error_classes.js","../node_modules/fast-json-stable-stringify/index.js","../node_modules/ajv/lib/dotjs/validate.js","../node_modules/ajv/lib/compile/index.js","../node_modules/ajv/lib/cache.js","../node_modules/ajv/lib/compile/formats.js","../node_modules/ajv/lib/dotjs/ref.js","../node_modules/ajv/lib/dotjs/allOf.js","../node_modules/ajv/lib/dotjs/anyOf.js","../node_modules/ajv/lib/dotjs/comment.js","../node_modules/ajv/lib/dotjs/const.js","../node_modules/ajv/lib/dotjs/contains.js","../node_modules/ajv/lib/dotjs/dependencies.js","../node_modules/ajv/lib/dotjs/enum.js","../node_modules/ajv/lib/dotjs/format.js","../node_modules/ajv/lib/dotjs/if.js","../node_modules/ajv/lib/dotjs/items.js","../node_modules/ajv/lib/dotjs/_limit.js","../node_modules/ajv/lib/dotjs/_limitItems.js","../node_modules/ajv/lib/dotjs/_limitLength.js","../node_modules/ajv/lib/dotjs/_limitProperties.js","../node_modules/ajv/lib/dotjs/multipleOf.js","../node_modules/ajv/lib/dotjs/not.js","../node_modules/ajv/lib/dotjs/oneOf.js","../node_modules/ajv/lib/dotjs/pattern.js","../node_modules/ajv/lib/dotjs/properties.js","../node_modules/ajv/lib/dotjs/propertyNames.js","../node_modules/ajv/lib/dotjs/required.js","../node_modules/ajv/lib/dotjs/uniqueItems.js","../node_modules/ajv/lib/dotjs/index.js","../node_modules/ajv/lib/compile/rules.js","../node_modules/ajv/lib/data.js","../node_modules/ajv/lib/compile/async.js","../node_modules/ajv/lib/dotjs/custom.js","../node_modules/ajv/lib/definition_schema.js","../node_modules/ajv/lib/keyword.js","../node_modules/ajv/lib/ajv.js","../src/client/index.ts","../node_modules/pkce-challenge/dist/index.browser.js","../src/shared/auth.ts","../src/shared/auth-utils.ts","../src/server/auth/errors.ts","../src/client/auth.ts","../node_modules/eventsource-parser/dist/index.js","../node_modules/eventsource-parser/dist/stream.js","../src/client/streamableHttp.ts","../src/inMemory.ts","../src/server/index.ts","../node_modules/zod-to-json-schema/dist/esm/Options.js","../node_modules/zod-to-json-schema/dist/esm/Refs.js","../node_modules/zod-to-json-schema/dist/esm/errorMessages.js","../node_modules/zod-to-json-schema/dist/esm/parsers/any.js","../node_modules/zod-to-json-schema/dist/esm/parsers/array.js","../node_modules/zod-to-json-schema/dist/esm/parsers/bigint.js","../node_modules/zod-to-json-schema/dist/esm/parsers/boolean.js","../node_modules/zod-to-json-schema/dist/esm/parsers/branded.js","../node_modules/zod-to-json-schema/dist/esm/parsers/catch.js","../node_modules/zod-to-json-schema/dist/esm/parsers/date.js","../node_modules/zod-to-json-schema/dist/esm/parsers/default.js","../node_modules/zod-to-json-schema/dist/esm/parsers/effects.js","../node_modules/zod-to-json-schema/dist/esm/parsers/enum.js","../node_modules/zod-to-json-schema/dist/esm/parsers/intersection.js","../node_modules/zod-to-json-schema/dist/esm/parsers/literal.js","../node_modules/zod-to-json-schema/dist/esm/parsers/string.js","../node_modules/zod-to-json-schema/dist/esm/parsers/record.js","../node_modules/zod-to-json-schema/dist/esm/parsers/map.js","../node_modules/zod-to-json-schema/dist/esm/parsers/nativeEnum.js","../node_modules/zod-to-json-schema/dist/esm/parsers/never.js","../node_modules/zod-to-json-schema/dist/esm/parsers/null.js","../node_modules/zod-to-json-schema/dist/esm/parsers/union.js","../node_modules/zod-to-json-schema/dist/esm/parsers/nullable.js","../node_modules/zod-to-json-schema/dist/esm/parsers/number.js","../node_modules/zod-to-json-schema/dist/esm/parsers/object.js","../node_modules/zod-to-json-schema/dist/esm/parsers/optional.js","../node_modules/zod-to-json-schema/dist/esm/parsers/pipeline.js","../node_modules/zod-to-json-schema/dist/esm/parsers/promise.js","../node_modules/zod-to-json-schema/dist/esm/parsers/set.js","../node_modules/zod-to-json-schema/dist/esm/parsers/tuple.js","../node_modules/zod-to-json-schema/dist/esm/parsers/undefined.js","../node_modules/zod-to-json-schema/dist/esm/parsers/unknown.js","../node_modules/zod-to-json-schema/dist/esm/parsers/readonly.js","../node_modules/zod-to-json-schema/dist/esm/parseDef.js","../node_modules/zod-to-json-schema/dist/esm/zodToJsonSchema.js","../src/server/completable.ts","../src/shared/uriTemplate.ts","../src/server/mcp.ts","../node_modules/bytes/index.js","../node_modules/depd/lib/browser/index.js","../node_modules/setprototypeof/index.js","../node_modules/statuses/index.js","../node_modules/inherits/inherits_browser.js","../node_modules/toidentifier/index.js","../node_modules/http-errors/index.js","../node_modules/safer-buffer/safer.js","../node_modules/raw-body/node_modules/iconv-lite/lib/bom-handling.js","../node_modules/raw-body/node_modules/iconv-lite/encodings/internal.js","../node_modules/raw-body/node_modules/iconv-lite/encodings/utf32.js","../node_modules/raw-body/node_modules/iconv-lite/encodings/utf16.js","../node_modules/raw-body/node_modules/iconv-lite/encodings/utf7.js","../node_modules/raw-body/node_modules/iconv-lite/encodings/sbcs-codec.js","../node_modules/raw-body/node_modules/iconv-lite/encodings/sbcs-data.js","../node_modules/raw-body/node_modules/iconv-lite/encodings/sbcs-data-generated.js","../node_modules/raw-body/node_modules/iconv-lite/encodings/dbcs-codec.js","../node_modules/raw-body/node_modules/iconv-lite/encodings/dbcs-data.js","../node_modules/raw-body/node_modules/iconv-lite/encodings/index.js","../node_modules/raw-body/node_modules/iconv-lite/lib/streams.js","../node_modules/raw-body/node_modules/iconv-lite/lib/index.js","../node_modules/unpipe/index.js","../node_modules/raw-body/index.js","../node_modules/content-type/index.js","../src/server/streamableHttp.ts"],"sourcesContent":["var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === errorMap ? undefined : errorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" &&\n                (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nvar _ZodEnum_cache, _ZodNativeEnum_cache;\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        var _a, _b;\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message !== null && message !== void 0 ? message : ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: (_a = message !== null && message !== void 0 ? message : required_error) !== null && _a !== void 0 ? _a : ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: (_b = message !== null && message !== void 0 ? message : invalid_type_error) !== null && _b !== void 0 ? _b : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        var _a, _b;\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if ((_b = (_a = err === null || err === void 0 ? void 0 : err.message) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === null || _b === void 0 ? void 0 : _b.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    // let regex = `\\\\d{2}:\\\\d{2}:\\\\d{2}`;\n    let regex = `([01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d`;\n    if (args.precision) {\n        regex = `${regex}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        regex = `${regex}(\\\\.\\\\d+)?`;\n    }\n    return regex;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nfunction datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (!decoded.typ || !decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a, _b;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            local: (_b = options === null || options === void 0 ? void 0 : options.local) !== null && _b !== void 0 ? _b : false,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch (_a) {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodEnum_cache, new Set(this._def.values), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\").has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\n_ZodEnum_cache = new WeakMap();\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodNativeEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodNativeEnum_cache, new Set(util.getValidEnumValues(this._def.values)), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\").has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\n_ZodNativeEnum_cache = new WeakMap();\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nclass ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result)\n            ? result.then((data) => freeze(data))\n            : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\nfunction custom(check, params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            if (!check(data)) {\n                const p = typeof params === \"function\"\n                    ? params(data)\n                    : typeof params === \"string\"\n                        ? { message: params }\n                        : params;\n                const _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal: _fatal });\n            }\n        });\n    return ZodAny.create();\n}\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nconst NEVER = INVALID;\n\nvar z = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    get util () { return util; },\n    get objectUtil () { return objectUtil; },\n    ZodParsedType: ZodParsedType,\n    getParsedType: getParsedType,\n    ZodType: ZodType,\n    datetimeRegex: datetimeRegex,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodSymbol: ZodSymbol,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodCatch: ZodCatch,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    ZodPipeline: ZodPipeline,\n    ZodReadonly: ZodReadonly,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    coerce: coerce,\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    pipeline: pipelineType,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    symbol: symbolType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodReadonly, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodSymbol, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, coerce, custom, dateType as date, datetimeRegex, z as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, util, voidType as void, z };\n","import { z, ZodTypeAny } from 'zod';\nimport { AuthInfo } from './server/auth/types.js';\n\nexport const LATEST_PROTOCOL_VERSION = '2025-06-18';\nexport const DEFAULT_NEGOTIATED_PROTOCOL_VERSION = '2025-03-26';\nexport const SUPPORTED_PROTOCOL_VERSIONS = [LATEST_PROTOCOL_VERSION, '2025-03-26', '2024-11-05', '2024-10-07'];\n\n/* JSON-RPC types */\nexport const JSONRPC_VERSION = '2.0';\n\n/**\n * A progress token, used to associate progress notifications with the original request.\n */\nexport const ProgressTokenSchema = z.union([z.string(), z.number().int()]);\n\n/**\n * An opaque token used to represent a cursor for pagination.\n */\nexport const CursorSchema = z.string();\n\nconst RequestMetaSchema = z\n    .object({\n        /**\n         * If specified, the caller is requesting out-of-band progress notifications for this request (as represented by notifications/progress). The value of this parameter is an opaque token that will be attached to any subsequent notifications. The receiver is not obligated to provide these notifications.\n         */\n        progressToken: z.optional(ProgressTokenSchema)\n    })\n    .passthrough();\n\nconst BaseRequestParamsSchema = z\n    .object({\n        _meta: z.optional(RequestMetaSchema)\n    })\n    .passthrough();\n\nexport const RequestSchema = z.object({\n    method: z.string(),\n    params: z.optional(BaseRequestParamsSchema)\n});\n\nconst BaseNotificationParamsSchema = z\n    .object({\n        /**\n         * See [MCP specification](https://github.com/modelcontextprotocol/modelcontextprotocol/blob/47339c03c143bb4ec01a26e721a1b8fe66634ebe/docs/specification/draft/basic/index.mdx#general-fields)\n         * for notes on _meta usage.\n         */\n        _meta: z.optional(z.object({}).passthrough())\n    })\n    .passthrough();\n\nexport const NotificationSchema = z.object({\n    method: z.string(),\n    params: z.optional(BaseNotificationParamsSchema)\n});\n\nexport const ResultSchema = z\n    .object({\n        /**\n         * See [MCP specification](https://github.com/modelcontextprotocol/modelcontextprotocol/blob/47339c03c143bb4ec01a26e721a1b8fe66634ebe/docs/specification/draft/basic/index.mdx#general-fields)\n         * for notes on _meta usage.\n         */\n        _meta: z.optional(z.object({}).passthrough())\n    })\n    .passthrough();\n\n/**\n * A uniquely identifying ID for a request in JSON-RPC.\n */\nexport const RequestIdSchema = z.union([z.string(), z.number().int()]);\n\n/**\n * A request that expects a response.\n */\nexport const JSONRPCRequestSchema = z\n    .object({\n        jsonrpc: z.literal(JSONRPC_VERSION),\n        id: RequestIdSchema\n    })\n    .merge(RequestSchema)\n    .strict();\n\nexport const isJSONRPCRequest = (value: unknown): value is JSONRPCRequest => JSONRPCRequestSchema.safeParse(value).success;\n\n/**\n * A notification which does not expect a response.\n */\nexport const JSONRPCNotificationSchema = z\n    .object({\n        jsonrpc: z.literal(JSONRPC_VERSION)\n    })\n    .merge(NotificationSchema)\n    .strict();\n\nexport const isJSONRPCNotification = (value: unknown): value is JSONRPCNotification => JSONRPCNotificationSchema.safeParse(value).success;\n\n/**\n * A successful (non-error) response to a request.\n */\nexport const JSONRPCResponseSchema = z\n    .object({\n        jsonrpc: z.literal(JSONRPC_VERSION),\n        id: RequestIdSchema,\n        result: ResultSchema\n    })\n    .strict();\n\nexport const isJSONRPCResponse = (value: unknown): value is JSONRPCResponse => JSONRPCResponseSchema.safeParse(value).success;\n\n/**\n * Error codes defined by the JSON-RPC specification.\n */\nexport enum ErrorCode {\n    // SDK error codes\n    ConnectionClosed = -32000,\n    RequestTimeout = -32001,\n\n    // Standard JSON-RPC error codes\n    ParseError = -32700,\n    InvalidRequest = -32600,\n    MethodNotFound = -32601,\n    InvalidParams = -32602,\n    InternalError = -32603\n}\n\n/**\n * A response to a request that indicates an error occurred.\n */\nexport const JSONRPCErrorSchema = z\n    .object({\n        jsonrpc: z.literal(JSONRPC_VERSION),\n        id: RequestIdSchema,\n        error: z.object({\n            /**\n             * The error type that occurred.\n             */\n            code: z.number().int(),\n            /**\n             * A short description of the error. The message SHOULD be limited to a concise single sentence.\n             */\n            message: z.string(),\n            /**\n             * Additional information about the error. The value of this member is defined by the sender (e.g. detailed error information, nested errors etc.).\n             */\n            data: z.optional(z.unknown())\n        })\n    })\n    .strict();\n\nexport const isJSONRPCError = (value: unknown): value is JSONRPCError => JSONRPCErrorSchema.safeParse(value).success;\n\nexport const JSONRPCMessageSchema = z.union([JSONRPCRequestSchema, JSONRPCNotificationSchema, JSONRPCResponseSchema, JSONRPCErrorSchema]);\n\n/* Empty result */\n/**\n * A response that indicates success but carries no data.\n */\nexport const EmptyResultSchema = ResultSchema.strict();\n\n/* Cancellation */\n/**\n * This notification can be sent by either side to indicate that it is cancelling a previously-issued request.\n *\n * The request SHOULD still be in-flight, but due to communication latency, it is always possible that this notification MAY arrive after the request has already finished.\n *\n * This notification indicates that the result will be unused, so any associated processing SHOULD cease.\n *\n * A client MUST NOT attempt to cancel its `initialize` request.\n */\nexport const CancelledNotificationSchema = NotificationSchema.extend({\n    method: z.literal('notifications/cancelled'),\n    params: BaseNotificationParamsSchema.extend({\n        /**\n         * The ID of the request to cancel.\n         *\n         * This MUST correspond to the ID of a request previously issued in the same direction.\n         */\n        requestId: RequestIdSchema,\n\n        /**\n         * An optional string describing the reason for the cancellation. This MAY be logged or presented to the user.\n         */\n        reason: z.string().optional()\n    })\n});\n\n/* Base Metadata */\n/**\n * Icon schema for use in tools, prompts, resources, and implementations.\n */\nexport const IconSchema = z\n    .object({\n        /**\n         * URL or data URI for the icon.\n         */\n        src: z.string(),\n        /**\n         * Optional MIME type for the icon.\n         */\n        mimeType: z.optional(z.string()),\n        /**\n         * Optional array of strings that specify sizes at which the icon can be used.\n         * Each string should be in WxH format (e.g., `\"48x48\"`, `\"96x96\"`) or `\"any\"` for scalable formats like SVG.\n         *\n         * If not provided, the client should assume that the icon can be used at any size.\n         */\n        sizes: z.optional(z.array(z.string()))\n    })\n    .passthrough();\n\n/**\n * Base schema to add `icons` property.\n *\n */\nexport const IconsSchema = z\n    .object({\n        /**\n         * Optional set of sized icons that the client can display in a user interface.\n         *\n         * Clients that support rendering icons MUST support at least the following MIME types:\n         * - `image/png` - PNG images (safe, universal compatibility)\n         * - `image/jpeg` (and `image/jpg`) - JPEG images (safe, universal compatibility)\n         *\n         * Clients that support rendering icons SHOULD also support:\n         * - `image/svg+xml` - SVG images (scalable but requires security precautions)\n         * - `image/webp` - WebP images (modern, efficient format)\n         */\n        icons: z.array(IconSchema).optional()\n    })\n    .passthrough();\n\n/**\n * Base metadata interface for common properties across resources, tools, prompts, and implementations.\n */\nexport const BaseMetadataSchema = z\n    .object({\n        /** Intended for programmatic or logical use, but used as a display name in past specs or fallback */\n        name: z.string(),\n        /**\n         * Intended for UI and end-user contexts — optimized to be human-readable and easily understood,\n         * even by those unfamiliar with domain-specific terminology.\n         *\n         * If not provided, the name should be used for display (except for Tool,\n         * where `annotations.title` should be given precedence over using `name`,\n         * if present).\n         */\n        title: z.optional(z.string())\n    })\n    .passthrough();\n\n/* Initialization */\n/**\n * Describes the name and version of an MCP implementation.\n */\nexport const ImplementationSchema = BaseMetadataSchema.extend({\n    version: z.string(),\n    /**\n     * An optional URL of the website for this implementation.\n     */\n    websiteUrl: z.optional(z.string())\n}).merge(IconsSchema);\n\n/**\n * Capabilities a client may support. Known capabilities are defined here, in this schema, but this is not a closed set: any client can define its own, additional capabilities.\n */\nexport const ClientCapabilitiesSchema = z\n    .object({\n        /**\n         * Experimental, non-standard capabilities that the client supports.\n         */\n        experimental: z.optional(z.object({}).passthrough()),\n        /**\n         * Present if the client supports sampling from an LLM.\n         */\n        sampling: z.optional(z.object({}).passthrough()),\n        /**\n         * Present if the client supports eliciting user input.\n         */\n        elicitation: z.optional(z.object({}).passthrough()),\n        /**\n         * Present if the client supports listing roots.\n         */\n        roots: z.optional(\n            z\n                .object({\n                    /**\n                     * Whether the client supports issuing notifications for changes to the roots list.\n                     */\n                    listChanged: z.optional(z.boolean())\n                })\n                .passthrough()\n        )\n    })\n    .passthrough();\n\n/**\n * This request is sent from the client to the server when it first connects, asking it to begin initialization.\n */\nexport const InitializeRequestSchema = RequestSchema.extend({\n    method: z.literal('initialize'),\n    params: BaseRequestParamsSchema.extend({\n        /**\n         * The latest version of the Model Context Protocol that the client supports. The client MAY decide to support older versions as well.\n         */\n        protocolVersion: z.string(),\n        capabilities: ClientCapabilitiesSchema,\n        clientInfo: ImplementationSchema\n    })\n});\n\nexport const isInitializeRequest = (value: unknown): value is InitializeRequest => InitializeRequestSchema.safeParse(value).success;\n\n/**\n * Capabilities that a server may support. Known capabilities are defined here, in this schema, but this is not a closed set: any server can define its own, additional capabilities.\n */\nexport const ServerCapabilitiesSchema = z\n    .object({\n        /**\n         * Experimental, non-standard capabilities that the server supports.\n         */\n        experimental: z.optional(z.object({}).passthrough()),\n        /**\n         * Present if the server supports sending log messages to the client.\n         */\n        logging: z.optional(z.object({}).passthrough()),\n        /**\n         * Present if the server supports sending completions to the client.\n         */\n        completions: z.optional(z.object({}).passthrough()),\n        /**\n         * Present if the server offers any prompt templates.\n         */\n        prompts: z.optional(\n            z\n                .object({\n                    /**\n                     * Whether this server supports issuing notifications for changes to the prompt list.\n                     */\n                    listChanged: z.optional(z.boolean())\n                })\n                .passthrough()\n        ),\n        /**\n         * Present if the server offers any resources to read.\n         */\n        resources: z.optional(\n            z\n                .object({\n                    /**\n                     * Whether this server supports clients subscribing to resource updates.\n                     */\n                    subscribe: z.optional(z.boolean()),\n\n                    /**\n                     * Whether this server supports issuing notifications for changes to the resource list.\n                     */\n                    listChanged: z.optional(z.boolean())\n                })\n                .passthrough()\n        ),\n        /**\n         * Present if the server offers any tools to call.\n         */\n        tools: z.optional(\n            z\n                .object({\n                    /**\n                     * Whether this server supports issuing notifications for changes to the tool list.\n                     */\n                    listChanged: z.optional(z.boolean())\n                })\n                .passthrough()\n        )\n    })\n    .passthrough();\n\n/**\n * After receiving an initialize request from the client, the server sends this response.\n */\nexport const InitializeResultSchema = ResultSchema.extend({\n    /**\n     * The version of the Model Context Protocol that the server wants to use. This may not match the version that the client requested. If the client cannot support this version, it MUST disconnect.\n     */\n    protocolVersion: z.string(),\n    capabilities: ServerCapabilitiesSchema,\n    serverInfo: ImplementationSchema,\n    /**\n     * Instructions describing how to use the server and its features.\n     *\n     * This can be used by clients to improve the LLM's understanding of available tools, resources, etc. It can be thought of like a \"hint\" to the model. For example, this information MAY be added to the system prompt.\n     */\n    instructions: z.optional(z.string())\n});\n\n/**\n * This notification is sent from the client to the server after initialization has finished.\n */\nexport const InitializedNotificationSchema = NotificationSchema.extend({\n    method: z.literal('notifications/initialized')\n});\n\nexport const isInitializedNotification = (value: unknown): value is InitializedNotification =>\n    InitializedNotificationSchema.safeParse(value).success;\n\n/* Ping */\n/**\n * A ping, issued by either the server or the client, to check that the other party is still alive. The receiver must promptly respond, or else may be disconnected.\n */\nexport const PingRequestSchema = RequestSchema.extend({\n    method: z.literal('ping')\n});\n\n/* Progress notifications */\nexport const ProgressSchema = z\n    .object({\n        /**\n         * The progress thus far. This should increase every time progress is made, even if the total is unknown.\n         */\n        progress: z.number(),\n        /**\n         * Total number of items to process (or total progress required), if known.\n         */\n        total: z.optional(z.number()),\n        /**\n         * An optional message describing the current progress.\n         */\n        message: z.optional(z.string())\n    })\n    .passthrough();\n\n/**\n * An out-of-band notification used to inform the receiver of a progress update for a long-running request.\n */\nexport const ProgressNotificationSchema = NotificationSchema.extend({\n    method: z.literal('notifications/progress'),\n    params: BaseNotificationParamsSchema.merge(ProgressSchema).extend({\n        /**\n         * The progress token which was given in the initial request, used to associate this notification with the request that is proceeding.\n         */\n        progressToken: ProgressTokenSchema\n    })\n});\n\n/* Pagination */\nexport const PaginatedRequestSchema = RequestSchema.extend({\n    params: BaseRequestParamsSchema.extend({\n        /**\n         * An opaque token representing the current pagination position.\n         * If provided, the server should return results starting after this cursor.\n         */\n        cursor: z.optional(CursorSchema)\n    }).optional()\n});\n\nexport const PaginatedResultSchema = ResultSchema.extend({\n    /**\n     * An opaque token representing the pagination position after the last returned result.\n     * If present, there may be more results available.\n     */\n    nextCursor: z.optional(CursorSchema)\n});\n\n/* Resources */\n/**\n * The contents of a specific resource or sub-resource.\n */\nexport const ResourceContentsSchema = z\n    .object({\n        /**\n         * The URI of this resource.\n         */\n        uri: z.string(),\n        /**\n         * The MIME type of this resource, if known.\n         */\n        mimeType: z.optional(z.string()),\n        /**\n         * See [MCP specification](https://github.com/modelcontextprotocol/modelcontextprotocol/blob/47339c03c143bb4ec01a26e721a1b8fe66634ebe/docs/specification/draft/basic/index.mdx#general-fields)\n         * for notes on _meta usage.\n         */\n        _meta: z.optional(z.object({}).passthrough())\n    })\n    .passthrough();\n\nexport const TextResourceContentsSchema = ResourceContentsSchema.extend({\n    /**\n     * The text of the item. This must only be set if the item can actually be represented as text (not binary data).\n     */\n    text: z.string()\n});\n\n/**\n * A Zod schema for validating Base64 strings that is more performant and\n * robust for very large inputs than the default regex-based check. It avoids\n * stack overflows by using the native `atob` function for validation.\n */\nconst Base64Schema = z.string().refine(\n    val => {\n        try {\n            // atob throws a DOMException if the string contains characters\n            // that are not part of the Base64 character set.\n            atob(val);\n            return true;\n        } catch {\n            return false;\n        }\n    },\n    { message: 'Invalid Base64 string' }\n);\n\nexport const BlobResourceContentsSchema = ResourceContentsSchema.extend({\n    /**\n     * A base64-encoded string representing the binary data of the item.\n     */\n    blob: Base64Schema\n});\n\n/**\n * A known resource that the server is capable of reading.\n */\nexport const ResourceSchema = BaseMetadataSchema.extend({\n    /**\n     * The URI of this resource.\n     */\n    uri: z.string(),\n\n    /**\n     * A description of what this resource represents.\n     *\n     * This can be used by clients to improve the LLM's understanding of available resources. It can be thought of like a \"hint\" to the model.\n     */\n    description: z.optional(z.string()),\n\n    /**\n     * The MIME type of this resource, if known.\n     */\n    mimeType: z.optional(z.string()),\n\n    /**\n     * See [MCP specification](https://github.com/modelcontextprotocol/modelcontextprotocol/blob/47339c03c143bb4ec01a26e721a1b8fe66634ebe/docs/specification/draft/basic/index.mdx#general-fields)\n     * for notes on _meta usage.\n     */\n    _meta: z.optional(z.object({}).passthrough())\n}).merge(IconsSchema);\n\n/**\n * A template description for resources available on the server.\n */\nexport const ResourceTemplateSchema = BaseMetadataSchema.extend({\n    /**\n     * A URI template (according to RFC 6570) that can be used to construct resource URIs.\n     */\n    uriTemplate: z.string(),\n\n    /**\n     * A description of what this template is for.\n     *\n     * This can be used by clients to improve the LLM's understanding of available resources. It can be thought of like a \"hint\" to the model.\n     */\n    description: z.optional(z.string()),\n\n    /**\n     * The MIME type for all resources that match this template. This should only be included if all resources matching this template have the same type.\n     */\n    mimeType: z.optional(z.string()),\n\n    /**\n     * See [MCP specification](https://github.com/modelcontextprotocol/modelcontextprotocol/blob/47339c03c143bb4ec01a26e721a1b8fe66634ebe/docs/specification/draft/basic/index.mdx#general-fields)\n     * for notes on _meta usage.\n     */\n    _meta: z.optional(z.object({}).passthrough())\n}).merge(IconsSchema);\n\n/**\n * Sent from the client to request a list of resources the server has.\n */\nexport const ListResourcesRequestSchema = PaginatedRequestSchema.extend({\n    method: z.literal('resources/list')\n});\n\n/**\n * The server's response to a resources/list request from the client.\n */\nexport const ListResourcesResultSchema = PaginatedResultSchema.extend({\n    resources: z.array(ResourceSchema)\n});\n\n/**\n * Sent from the client to request a list of resource templates the server has.\n */\nexport const ListResourceTemplatesRequestSchema = PaginatedRequestSchema.extend({\n    method: z.literal('resources/templates/list')\n});\n\n/**\n * The server's response to a resources/templates/list request from the client.\n */\nexport const ListResourceTemplatesResultSchema = PaginatedResultSchema.extend({\n    resourceTemplates: z.array(ResourceTemplateSchema)\n});\n\n/**\n * Sent from the client to the server, to read a specific resource URI.\n */\nexport const ReadResourceRequestSchema = RequestSchema.extend({\n    method: z.literal('resources/read'),\n    params: BaseRequestParamsSchema.extend({\n        /**\n         * The URI of the resource to read. The URI can use any protocol; it is up to the server how to interpret it.\n         */\n        uri: z.string()\n    })\n});\n\n/**\n * The server's response to a resources/read request from the client.\n */\nexport const ReadResourceResultSchema = ResultSchema.extend({\n    contents: z.array(z.union([TextResourceContentsSchema, BlobResourceContentsSchema]))\n});\n\n/**\n * An optional notification from the server to the client, informing it that the list of resources it can read from has changed. This may be issued by servers without any previous subscription from the client.\n */\nexport const ResourceListChangedNotificationSchema = NotificationSchema.extend({\n    method: z.literal('notifications/resources/list_changed')\n});\n\n/**\n * Sent from the client to request resources/updated notifications from the server whenever a particular resource changes.\n */\nexport const SubscribeRequestSchema = RequestSchema.extend({\n    method: z.literal('resources/subscribe'),\n    params: BaseRequestParamsSchema.extend({\n        /**\n         * The URI of the resource to subscribe to. The URI can use any protocol; it is up to the server how to interpret it.\n         */\n        uri: z.string()\n    })\n});\n\n/**\n * Sent from the client to request cancellation of resources/updated notifications from the server. This should follow a previous resources/subscribe request.\n */\nexport const UnsubscribeRequestSchema = RequestSchema.extend({\n    method: z.literal('resources/unsubscribe'),\n    params: BaseRequestParamsSchema.extend({\n        /**\n         * The URI of the resource to unsubscribe from.\n         */\n        uri: z.string()\n    })\n});\n\n/**\n * A notification from the server to the client, informing it that a resource has changed and may need to be read again. This should only be sent if the client previously sent a resources/subscribe request.\n */\nexport const ResourceUpdatedNotificationSchema = NotificationSchema.extend({\n    method: z.literal('notifications/resources/updated'),\n    params: BaseNotificationParamsSchema.extend({\n        /**\n         * The URI of the resource that has been updated. This might be a sub-resource of the one that the client actually subscribed to.\n         */\n        uri: z.string()\n    })\n});\n\n/* Prompts */\n/**\n * Describes an argument that a prompt can accept.\n */\nexport const PromptArgumentSchema = z\n    .object({\n        /**\n         * The name of the argument.\n         */\n        name: z.string(),\n        /**\n         * A human-readable description of the argument.\n         */\n        description: z.optional(z.string()),\n        /**\n         * Whether this argument must be provided.\n         */\n        required: z.optional(z.boolean())\n    })\n    .passthrough();\n\n/**\n * A prompt or prompt template that the server offers.\n */\nexport const PromptSchema = BaseMetadataSchema.extend({\n    /**\n     * An optional description of what this prompt provides\n     */\n    description: z.optional(z.string()),\n    /**\n     * A list of arguments to use for templating the prompt.\n     */\n    arguments: z.optional(z.array(PromptArgumentSchema)),\n    /**\n     * See [MCP specification](https://github.com/modelcontextprotocol/modelcontextprotocol/blob/47339c03c143bb4ec01a26e721a1b8fe66634ebe/docs/specification/draft/basic/index.mdx#general-fields)\n     * for notes on _meta usage.\n     */\n    _meta: z.optional(z.object({}).passthrough())\n}).merge(IconsSchema);\n\n/**\n * Sent from the client to request a list of prompts and prompt templates the server has.\n */\nexport const ListPromptsRequestSchema = PaginatedRequestSchema.extend({\n    method: z.literal('prompts/list')\n});\n\n/**\n * The server's response to a prompts/list request from the client.\n */\nexport const ListPromptsResultSchema = PaginatedResultSchema.extend({\n    prompts: z.array(PromptSchema)\n});\n\n/**\n * Used by the client to get a prompt provided by the server.\n */\nexport const GetPromptRequestSchema = RequestSchema.extend({\n    method: z.literal('prompts/get'),\n    params: BaseRequestParamsSchema.extend({\n        /**\n         * The name of the prompt or prompt template.\n         */\n        name: z.string(),\n        /**\n         * Arguments to use for templating the prompt.\n         */\n        arguments: z.optional(z.record(z.string()))\n    })\n});\n\n/**\n * Text provided to or from an LLM.\n */\nexport const TextContentSchema = z\n    .object({\n        type: z.literal('text'),\n        /**\n         * The text content of the message.\n         */\n        text: z.string(),\n\n        /**\n         * See [MCP specification](https://github.com/modelcontextprotocol/modelcontextprotocol/blob/47339c03c143bb4ec01a26e721a1b8fe66634ebe/docs/specification/draft/basic/index.mdx#general-fields)\n         * for notes on _meta usage.\n         */\n        _meta: z.optional(z.object({}).passthrough())\n    })\n    .passthrough();\n\n/**\n * An image provided to or from an LLM.\n */\nexport const ImageContentSchema = z\n    .object({\n        type: z.literal('image'),\n        /**\n         * The base64-encoded image data.\n         */\n        data: Base64Schema,\n        /**\n         * The MIME type of the image. Different providers may support different image types.\n         */\n        mimeType: z.string(),\n\n        /**\n         * See [MCP specification](https://github.com/modelcontextprotocol/modelcontextprotocol/blob/47339c03c143bb4ec01a26e721a1b8fe66634ebe/docs/specification/draft/basic/index.mdx#general-fields)\n         * for notes on _meta usage.\n         */\n        _meta: z.optional(z.object({}).passthrough())\n    })\n    .passthrough();\n\n/**\n * An Audio provided to or from an LLM.\n */\nexport const AudioContentSchema = z\n    .object({\n        type: z.literal('audio'),\n        /**\n         * The base64-encoded audio data.\n         */\n        data: Base64Schema,\n        /**\n         * The MIME type of the audio. Different providers may support different audio types.\n         */\n        mimeType: z.string(),\n\n        /**\n         * See [MCP specification](https://github.com/modelcontextprotocol/modelcontextprotocol/blob/47339c03c143bb4ec01a26e721a1b8fe66634ebe/docs/specification/draft/basic/index.mdx#general-fields)\n         * for notes on _meta usage.\n         */\n        _meta: z.optional(z.object({}).passthrough())\n    })\n    .passthrough();\n\n/**\n * The contents of a resource, embedded into a prompt or tool call result.\n */\nexport const EmbeddedResourceSchema = z\n    .object({\n        type: z.literal('resource'),\n        resource: z.union([TextResourceContentsSchema, BlobResourceContentsSchema]),\n        /**\n         * See [MCP specification](https://github.com/modelcontextprotocol/modelcontextprotocol/blob/47339c03c143bb4ec01a26e721a1b8fe66634ebe/docs/specification/draft/basic/index.mdx#general-fields)\n         * for notes on _meta usage.\n         */\n        _meta: z.optional(z.object({}).passthrough())\n    })\n    .passthrough();\n\n/**\n * A resource that the server is capable of reading, included in a prompt or tool call result.\n *\n * Note: resource links returned by tools are not guaranteed to appear in the results of `resources/list` requests.\n */\nexport const ResourceLinkSchema = ResourceSchema.extend({\n    type: z.literal('resource_link')\n});\n\n/**\n * A content block that can be used in prompts and tool results.\n */\nexport const ContentBlockSchema = z.union([\n    TextContentSchema,\n    ImageContentSchema,\n    AudioContentSchema,\n    ResourceLinkSchema,\n    EmbeddedResourceSchema\n]);\n\n/**\n * Describes a message returned as part of a prompt.\n */\nexport const PromptMessageSchema = z\n    .object({\n        role: z.enum(['user', 'assistant']),\n        content: ContentBlockSchema\n    })\n    .passthrough();\n\n/**\n * The server's response to a prompts/get request from the client.\n */\nexport const GetPromptResultSchema = ResultSchema.extend({\n    /**\n     * An optional description for the prompt.\n     */\n    description: z.optional(z.string()),\n    messages: z.array(PromptMessageSchema)\n});\n\n/**\n * An optional notification from the server to the client, informing it that the list of prompts it offers has changed. This may be issued by servers without any previous subscription from the client.\n */\nexport const PromptListChangedNotificationSchema = NotificationSchema.extend({\n    method: z.literal('notifications/prompts/list_changed')\n});\n\n/* Tools */\n/**\n * Additional properties describing a Tool to clients.\n *\n * NOTE: all properties in ToolAnnotations are **hints**.\n * They are not guaranteed to provide a faithful description of\n * tool behavior (including descriptive properties like `title`).\n *\n * Clients should never make tool use decisions based on ToolAnnotations\n * received from untrusted servers.\n */\nexport const ToolAnnotationsSchema = z\n    .object({\n        /**\n         * A human-readable title for the tool.\n         */\n        title: z.optional(z.string()),\n\n        /**\n         * If true, the tool does not modify its environment.\n         *\n         * Default: false\n         */\n        readOnlyHint: z.optional(z.boolean()),\n\n        /**\n         * If true, the tool may perform destructive updates to its environment.\n         * If false, the tool performs only additive updates.\n         *\n         * (This property is meaningful only when `readOnlyHint == false`)\n         *\n         * Default: true\n         */\n        destructiveHint: z.optional(z.boolean()),\n\n        /**\n         * If true, calling the tool repeatedly with the same arguments\n         * will have no additional effect on the its environment.\n         *\n         * (This property is meaningful only when `readOnlyHint == false`)\n         *\n         * Default: false\n         */\n        idempotentHint: z.optional(z.boolean()),\n\n        /**\n         * If true, this tool may interact with an \"open world\" of external\n         * entities. If false, the tool's domain of interaction is closed.\n         * For example, the world of a web search tool is open, whereas that\n         * of a memory tool is not.\n         *\n         * Default: true\n         */\n        openWorldHint: z.optional(z.boolean())\n    })\n    .passthrough();\n\n/**\n * Definition for a tool the client can call.\n */\nexport const ToolSchema = BaseMetadataSchema.extend({\n    /**\n     * A human-readable description of the tool.\n     */\n    description: z.optional(z.string()),\n    /**\n     * A JSON Schema object defining the expected parameters for the tool.\n     */\n    inputSchema: z\n        .object({\n            type: z.literal('object'),\n            properties: z.optional(z.object({}).passthrough()),\n            required: z.optional(z.array(z.string()))\n        })\n        .passthrough(),\n    /**\n     * An optional JSON Schema object defining the structure of the tool's output returned in\n     * the structuredContent field of a CallToolResult.\n     */\n    outputSchema: z.optional(\n        z\n            .object({\n                type: z.literal('object'),\n                properties: z.optional(z.object({}).passthrough()),\n                required: z.optional(z.array(z.string()))\n            })\n            .passthrough()\n    ),\n    /**\n     * Optional additional tool information.\n     */\n    annotations: z.optional(ToolAnnotationsSchema),\n\n    /**\n     * See [MCP specification](https://github.com/modelcontextprotocol/modelcontextprotocol/blob/47339c03c143bb4ec01a26e721a1b8fe66634ebe/docs/specification/draft/basic/index.mdx#general-fields)\n     * for notes on _meta usage.\n     */\n    _meta: z.optional(z.object({}).passthrough())\n}).merge(IconsSchema);\n\n/**\n * Sent from the client to request a list of tools the server has.\n */\nexport const ListToolsRequestSchema = PaginatedRequestSchema.extend({\n    method: z.literal('tools/list')\n});\n\n/**\n * The server's response to a tools/list request from the client.\n */\nexport const ListToolsResultSchema = PaginatedResultSchema.extend({\n    tools: z.array(ToolSchema)\n});\n\n/**\n * The server's response to a tool call.\n */\nexport const CallToolResultSchema = ResultSchema.extend({\n    /**\n     * A list of content objects that represent the result of the tool call.\n     *\n     * If the Tool does not define an outputSchema, this field MUST be present in the result.\n     * For backwards compatibility, this field is always present, but it may be empty.\n     */\n    content: z.array(ContentBlockSchema).default([]),\n\n    /**\n     * An object containing structured tool output.\n     *\n     * If the Tool defines an outputSchema, this field MUST be present in the result, and contain a JSON object that matches the schema.\n     */\n    structuredContent: z.object({}).passthrough().optional(),\n\n    /**\n     * Whether the tool call ended in an error.\n     *\n     * If not set, this is assumed to be false (the call was successful).\n     *\n     * Any errors that originate from the tool SHOULD be reported inside the result\n     * object, with `isError` set to true, _not_ as an MCP protocol-level error\n     * response. Otherwise, the LLM would not be able to see that an error occurred\n     * and self-correct.\n     *\n     * However, any errors in _finding_ the tool, an error indicating that the\n     * server does not support tool calls, or any other exceptional conditions,\n     * should be reported as an MCP error response.\n     */\n    isError: z.optional(z.boolean())\n});\n\n/**\n * CallToolResultSchema extended with backwards compatibility to protocol version 2024-10-07.\n */\nexport const CompatibilityCallToolResultSchema = CallToolResultSchema.or(\n    ResultSchema.extend({\n        toolResult: z.unknown()\n    })\n);\n\n/**\n * Used by the client to invoke a tool provided by the server.\n */\nexport const CallToolRequestSchema = RequestSchema.extend({\n    method: z.literal('tools/call'),\n    params: BaseRequestParamsSchema.extend({\n        name: z.string(),\n        arguments: z.optional(z.record(z.unknown()))\n    })\n});\n\n/**\n * An optional notification from the server to the client, informing it that the list of tools it offers has changed. This may be issued by servers without any previous subscription from the client.\n */\nexport const ToolListChangedNotificationSchema = NotificationSchema.extend({\n    method: z.literal('notifications/tools/list_changed')\n});\n\n/* Logging */\n/**\n * The severity of a log message.\n */\nexport const LoggingLevelSchema = z.enum(['debug', 'info', 'notice', 'warning', 'error', 'critical', 'alert', 'emergency']);\n\n/**\n * A request from the client to the server, to enable or adjust logging.\n */\nexport const SetLevelRequestSchema = RequestSchema.extend({\n    method: z.literal('logging/setLevel'),\n    params: BaseRequestParamsSchema.extend({\n        /**\n         * The level of logging that the client wants to receive from the server. The server should send all logs at this level and higher (i.e., more severe) to the client as notifications/logging/message.\n         */\n        level: LoggingLevelSchema\n    })\n});\n\n/**\n * Notification of a log message passed from server to client. If no logging/setLevel request has been sent from the client, the server MAY decide which messages to send automatically.\n */\nexport const LoggingMessageNotificationSchema = NotificationSchema.extend({\n    method: z.literal('notifications/message'),\n    params: BaseNotificationParamsSchema.extend({\n        /**\n         * The severity of this log message.\n         */\n        level: LoggingLevelSchema,\n        /**\n         * An optional name of the logger issuing this message.\n         */\n        logger: z.optional(z.string()),\n        /**\n         * The data to be logged, such as a string message or an object. Any JSON serializable type is allowed here.\n         */\n        data: z.unknown()\n    })\n});\n\n/* Sampling */\n/**\n * Hints to use for model selection.\n */\nexport const ModelHintSchema = z\n    .object({\n        /**\n         * A hint for a model name.\n         */\n        name: z.string().optional()\n    })\n    .passthrough();\n\n/**\n * The server's preferences for model selection, requested of the client during sampling.\n */\nexport const ModelPreferencesSchema = z\n    .object({\n        /**\n         * Optional hints to use for model selection.\n         */\n        hints: z.optional(z.array(ModelHintSchema)),\n        /**\n         * How much to prioritize cost when selecting a model.\n         */\n        costPriority: z.optional(z.number().min(0).max(1)),\n        /**\n         * How much to prioritize sampling speed (latency) when selecting a model.\n         */\n        speedPriority: z.optional(z.number().min(0).max(1)),\n        /**\n         * How much to prioritize intelligence and capabilities when selecting a model.\n         */\n        intelligencePriority: z.optional(z.number().min(0).max(1))\n    })\n    .passthrough();\n\n/**\n * Describes a message issued to or received from an LLM API.\n */\nexport const SamplingMessageSchema = z\n    .object({\n        role: z.enum(['user', 'assistant']),\n        content: z.union([TextContentSchema, ImageContentSchema, AudioContentSchema])\n    })\n    .passthrough();\n\n/**\n * A request from the server to sample an LLM via the client. The client has full discretion over which model to select. The client should also inform the user before beginning sampling, to allow them to inspect the request (human in the loop) and decide whether to approve it.\n */\nexport const CreateMessageRequestSchema = RequestSchema.extend({\n    method: z.literal('sampling/createMessage'),\n    params: BaseRequestParamsSchema.extend({\n        messages: z.array(SamplingMessageSchema),\n        /**\n         * An optional system prompt the server wants to use for sampling. The client MAY modify or omit this prompt.\n         */\n        systemPrompt: z.optional(z.string()),\n        /**\n         * A request to include context from one or more MCP servers (including the caller), to be attached to the prompt. The client MAY ignore this request.\n         */\n        includeContext: z.optional(z.enum(['none', 'thisServer', 'allServers'])),\n        temperature: z.optional(z.number()),\n        /**\n         * The maximum number of tokens to sample, as requested by the server. The client MAY choose to sample fewer tokens than requested.\n         */\n        maxTokens: z.number().int(),\n        stopSequences: z.optional(z.array(z.string())),\n        /**\n         * Optional metadata to pass through to the LLM provider. The format of this metadata is provider-specific.\n         */\n        metadata: z.optional(z.object({}).passthrough()),\n        /**\n         * The server's preferences for which model to select.\n         */\n        modelPreferences: z.optional(ModelPreferencesSchema)\n    })\n});\n\n/**\n * The client's response to a sampling/create_message request from the server. The client should inform the user before returning the sampled message, to allow them to inspect the response (human in the loop) and decide whether to allow the server to see it.\n */\nexport const CreateMessageResultSchema = ResultSchema.extend({\n    /**\n     * The name of the model that generated the message.\n     */\n    model: z.string(),\n    /**\n     * The reason why sampling stopped.\n     */\n    stopReason: z.optional(z.enum(['endTurn', 'stopSequence', 'maxTokens']).or(z.string())),\n    role: z.enum(['user', 'assistant']),\n    content: z.discriminatedUnion('type', [TextContentSchema, ImageContentSchema, AudioContentSchema])\n});\n\n/* Elicitation */\n/**\n * Primitive schema definition for boolean fields.\n */\nexport const BooleanSchemaSchema = z\n    .object({\n        type: z.literal('boolean'),\n        title: z.optional(z.string()),\n        description: z.optional(z.string()),\n        default: z.optional(z.boolean())\n    })\n    .passthrough();\n\n/**\n * Primitive schema definition for string fields.\n */\nexport const StringSchemaSchema = z\n    .object({\n        type: z.literal('string'),\n        title: z.optional(z.string()),\n        description: z.optional(z.string()),\n        minLength: z.optional(z.number()),\n        maxLength: z.optional(z.number()),\n        format: z.optional(z.enum(['email', 'uri', 'date', 'date-time']))\n    })\n    .passthrough();\n\n/**\n * Primitive schema definition for number fields.\n */\nexport const NumberSchemaSchema = z\n    .object({\n        type: z.enum(['number', 'integer']),\n        title: z.optional(z.string()),\n        description: z.optional(z.string()),\n        minimum: z.optional(z.number()),\n        maximum: z.optional(z.number())\n    })\n    .passthrough();\n\n/**\n * Primitive schema definition for enum fields.\n */\nexport const EnumSchemaSchema = z\n    .object({\n        type: z.literal('string'),\n        title: z.optional(z.string()),\n        description: z.optional(z.string()),\n        enum: z.array(z.string()),\n        enumNames: z.optional(z.array(z.string()))\n    })\n    .passthrough();\n\n/**\n * Union of all primitive schema definitions.\n */\nexport const PrimitiveSchemaDefinitionSchema = z.union([BooleanSchemaSchema, StringSchemaSchema, NumberSchemaSchema, EnumSchemaSchema]);\n\n/**\n * A request from the server to elicit user input via the client.\n * The client should present the message and form fields to the user.\n */\nexport const ElicitRequestSchema = RequestSchema.extend({\n    method: z.literal('elicitation/create'),\n    params: BaseRequestParamsSchema.extend({\n        /**\n         * The message to present to the user.\n         */\n        message: z.string(),\n        /**\n         * The schema for the requested user input.\n         */\n        requestedSchema: z\n            .object({\n                type: z.literal('object'),\n                properties: z.record(z.string(), PrimitiveSchemaDefinitionSchema),\n                required: z.optional(z.array(z.string()))\n            })\n            .passthrough()\n    })\n});\n\n/**\n * The client's response to an elicitation/create request from the server.\n */\nexport const ElicitResultSchema = ResultSchema.extend({\n    /**\n     * The user's response action.\n     */\n    action: z.enum(['accept', 'decline', 'cancel']),\n    /**\n     * The collected user input content (only present if action is \"accept\").\n     */\n    content: z.optional(z.record(z.string(), z.unknown()))\n});\n\n/* Autocomplete */\n/**\n * A reference to a resource or resource template definition.\n */\nexport const ResourceTemplateReferenceSchema = z\n    .object({\n        type: z.literal('ref/resource'),\n        /**\n         * The URI or URI template of the resource.\n         */\n        uri: z.string()\n    })\n    .passthrough();\n\n/**\n * @deprecated Use ResourceTemplateReferenceSchema instead\n */\nexport const ResourceReferenceSchema = ResourceTemplateReferenceSchema;\n\n/**\n * Identifies a prompt.\n */\nexport const PromptReferenceSchema = z\n    .object({\n        type: z.literal('ref/prompt'),\n        /**\n         * The name of the prompt or prompt template\n         */\n        name: z.string()\n    })\n    .passthrough();\n\n/**\n * A request from the client to the server, to ask for completion options.\n */\nexport const CompleteRequestSchema = RequestSchema.extend({\n    method: z.literal('completion/complete'),\n    params: BaseRequestParamsSchema.extend({\n        ref: z.union([PromptReferenceSchema, ResourceTemplateReferenceSchema]),\n        /**\n         * The argument's information\n         */\n        argument: z\n            .object({\n                /**\n                 * The name of the argument\n                 */\n                name: z.string(),\n                /**\n                 * The value of the argument to use for completion matching.\n                 */\n                value: z.string()\n            })\n            .passthrough(),\n        context: z.optional(\n            z.object({\n                /**\n                 * Previously-resolved variables in a URI template or prompt.\n                 */\n                arguments: z.optional(z.record(z.string(), z.string()))\n            })\n        )\n    })\n});\n\n/**\n * The server's response to a completion/complete request\n */\nexport const CompleteResultSchema = ResultSchema.extend({\n    completion: z\n        .object({\n            /**\n             * An array of completion values. Must not exceed 100 items.\n             */\n            values: z.array(z.string()).max(100),\n            /**\n             * The total number of completion options available. This can exceed the number of values actually sent in the response.\n             */\n            total: z.optional(z.number().int()),\n            /**\n             * Indicates whether there are additional completion options beyond those provided in the current response, even if the exact total is unknown.\n             */\n            hasMore: z.optional(z.boolean())\n        })\n        .passthrough()\n});\n\n/* Roots */\n/**\n * Represents a root directory or file that the server can operate on.\n */\nexport const RootSchema = z\n    .object({\n        /**\n         * The URI identifying the root. This *must* start with file:// for now.\n         */\n        uri: z.string().startsWith('file://'),\n        /**\n         * An optional name for the root.\n         */\n        name: z.optional(z.string()),\n\n        /**\n         * See [MCP specification](https://github.com/modelcontextprotocol/modelcontextprotocol/blob/47339c03c143bb4ec01a26e721a1b8fe66634ebe/docs/specification/draft/basic/index.mdx#general-fields)\n         * for notes on _meta usage.\n         */\n        _meta: z.optional(z.object({}).passthrough())\n    })\n    .passthrough();\n\n/**\n * Sent from the server to request a list of root URIs from the client.\n */\nexport const ListRootsRequestSchema = RequestSchema.extend({\n    method: z.literal('roots/list')\n});\n\n/**\n * The client's response to a roots/list request from the server.\n */\nexport const ListRootsResultSchema = ResultSchema.extend({\n    roots: z.array(RootSchema)\n});\n\n/**\n * A notification from the client to the server, informing it that the list of roots has changed.\n */\nexport const RootsListChangedNotificationSchema = NotificationSchema.extend({\n    method: z.literal('notifications/roots/list_changed')\n});\n\n/* Client messages */\nexport const ClientRequestSchema = z.union([\n    PingRequestSchema,\n    InitializeRequestSchema,\n    CompleteRequestSchema,\n    SetLevelRequestSchema,\n    GetPromptRequestSchema,\n    ListPromptsRequestSchema,\n    ListResourcesRequestSchema,\n    ListResourceTemplatesRequestSchema,\n    ReadResourceRequestSchema,\n    SubscribeRequestSchema,\n    UnsubscribeRequestSchema,\n    CallToolRequestSchema,\n    ListToolsRequestSchema\n]);\n\nexport const ClientNotificationSchema = z.union([\n    CancelledNotificationSchema,\n    ProgressNotificationSchema,\n    InitializedNotificationSchema,\n    RootsListChangedNotificationSchema\n]);\n\nexport const ClientResultSchema = z.union([EmptyResultSchema, CreateMessageResultSchema, ElicitResultSchema, ListRootsResultSchema]);\n\n/* Server messages */\nexport const ServerRequestSchema = z.union([PingRequestSchema, CreateMessageRequestSchema, ElicitRequestSchema, ListRootsRequestSchema]);\n\nexport const ServerNotificationSchema = z.union([\n    CancelledNotificationSchema,\n    ProgressNotificationSchema,\n    LoggingMessageNotificationSchema,\n    ResourceUpdatedNotificationSchema,\n    ResourceListChangedNotificationSchema,\n    ToolListChangedNotificationSchema,\n    PromptListChangedNotificationSchema\n]);\n\nexport const ServerResultSchema = z.union([\n    EmptyResultSchema,\n    InitializeResultSchema,\n    CompleteResultSchema,\n    GetPromptResultSchema,\n    ListPromptsResultSchema,\n    ListResourcesResultSchema,\n    ListResourceTemplatesResultSchema,\n    ReadResourceResultSchema,\n    CallToolResultSchema,\n    ListToolsResultSchema\n]);\n\nexport class McpError extends Error {\n    constructor(\n        public readonly code: number,\n        message: string,\n        public readonly data?: unknown\n    ) {\n        super(`MCP error ${code}: ${message}`);\n        this.name = 'McpError';\n    }\n}\n\ntype Primitive = string | number | boolean | bigint | null | undefined;\ntype Flatten<T> = T extends Primitive\n    ? T\n    : T extends Array<infer U>\n      ? Array<Flatten<U>>\n      : T extends Set<infer U>\n        ? Set<Flatten<U>>\n        : T extends Map<infer K, infer V>\n          ? Map<Flatten<K>, Flatten<V>>\n          : T extends object\n            ? { [K in keyof T]: Flatten<T[K]> }\n            : T;\n\ntype Infer<Schema extends ZodTypeAny> = Flatten<z.infer<Schema>>;\n\n/**\n * Headers that are compatible with both Node.js and the browser.\n */\nexport type IsomorphicHeaders = Record<string, string | string[] | undefined>;\n\n/**\n * Information about the incoming request.\n */\nexport interface RequestInfo {\n    /**\n     * The headers of the request.\n     */\n    headers: IsomorphicHeaders;\n}\n\n/**\n * Extra information about a message.\n */\nexport interface MessageExtraInfo {\n    /**\n     * The request information.\n     */\n    requestInfo?: RequestInfo;\n\n    /**\n     * The authentication information.\n     */\n    authInfo?: AuthInfo;\n}\n\n/* JSON-RPC types */\nexport type ProgressToken = Infer<typeof ProgressTokenSchema>;\nexport type Cursor = Infer<typeof CursorSchema>;\nexport type Request = Infer<typeof RequestSchema>;\nexport type RequestMeta = Infer<typeof RequestMetaSchema>;\nexport type Notification = Infer<typeof NotificationSchema>;\nexport type Result = Infer<typeof ResultSchema>;\nexport type RequestId = Infer<typeof RequestIdSchema>;\nexport type JSONRPCRequest = Infer<typeof JSONRPCRequestSchema>;\nexport type JSONRPCNotification = Infer<typeof JSONRPCNotificationSchema>;\nexport type JSONRPCResponse = Infer<typeof JSONRPCResponseSchema>;\nexport type JSONRPCError = Infer<typeof JSONRPCErrorSchema>;\nexport type JSONRPCMessage = Infer<typeof JSONRPCMessageSchema>;\n\n/* Empty result */\nexport type EmptyResult = Infer<typeof EmptyResultSchema>;\n\n/* Cancellation */\nexport type CancelledNotification = Infer<typeof CancelledNotificationSchema>;\n\n/* Base Metadata */\nexport type Icon = Infer<typeof IconSchema>;\nexport type Icons = Infer<typeof IconsSchema>;\nexport type BaseMetadata = Infer<typeof BaseMetadataSchema>;\n\n/* Initialization */\nexport type Implementation = Infer<typeof ImplementationSchema>;\nexport type ClientCapabilities = Infer<typeof ClientCapabilitiesSchema>;\nexport type InitializeRequest = Infer<typeof InitializeRequestSchema>;\nexport type ServerCapabilities = Infer<typeof ServerCapabilitiesSchema>;\nexport type InitializeResult = Infer<typeof InitializeResultSchema>;\nexport type InitializedNotification = Infer<typeof InitializedNotificationSchema>;\n\n/* Ping */\nexport type PingRequest = Infer<typeof PingRequestSchema>;\n\n/* Progress notifications */\nexport type Progress = Infer<typeof ProgressSchema>;\nexport type ProgressNotification = Infer<typeof ProgressNotificationSchema>;\n\n/* Pagination */\nexport type PaginatedRequest = Infer<typeof PaginatedRequestSchema>;\nexport type PaginatedResult = Infer<typeof PaginatedResultSchema>;\n\n/* Resources */\nexport type ResourceContents = Infer<typeof ResourceContentsSchema>;\nexport type TextResourceContents = Infer<typeof TextResourceContentsSchema>;\nexport type BlobResourceContents = Infer<typeof BlobResourceContentsSchema>;\nexport type Resource = Infer<typeof ResourceSchema>;\nexport type ResourceTemplate = Infer<typeof ResourceTemplateSchema>;\nexport type ListResourcesRequest = Infer<typeof ListResourcesRequestSchema>;\nexport type ListResourcesResult = Infer<typeof ListResourcesResultSchema>;\nexport type ListResourceTemplatesRequest = Infer<typeof ListResourceTemplatesRequestSchema>;\nexport type ListResourceTemplatesResult = Infer<typeof ListResourceTemplatesResultSchema>;\nexport type ReadResourceRequest = Infer<typeof ReadResourceRequestSchema>;\nexport type ReadResourceResult = Infer<typeof ReadResourceResultSchema>;\nexport type ResourceListChangedNotification = Infer<typeof ResourceListChangedNotificationSchema>;\nexport type SubscribeRequest = Infer<typeof SubscribeRequestSchema>;\nexport type UnsubscribeRequest = Infer<typeof UnsubscribeRequestSchema>;\nexport type ResourceUpdatedNotification = Infer<typeof ResourceUpdatedNotificationSchema>;\n\n/* Prompts */\nexport type PromptArgument = Infer<typeof PromptArgumentSchema>;\nexport type Prompt = Infer<typeof PromptSchema>;\nexport type ListPromptsRequest = Infer<typeof ListPromptsRequestSchema>;\nexport type ListPromptsResult = Infer<typeof ListPromptsResultSchema>;\nexport type GetPromptRequest = Infer<typeof GetPromptRequestSchema>;\nexport type TextContent = Infer<typeof TextContentSchema>;\nexport type ImageContent = Infer<typeof ImageContentSchema>;\nexport type AudioContent = Infer<typeof AudioContentSchema>;\nexport type EmbeddedResource = Infer<typeof EmbeddedResourceSchema>;\nexport type ResourceLink = Infer<typeof ResourceLinkSchema>;\nexport type ContentBlock = Infer<typeof ContentBlockSchema>;\nexport type PromptMessage = Infer<typeof PromptMessageSchema>;\nexport type GetPromptResult = Infer<typeof GetPromptResultSchema>;\nexport type PromptListChangedNotification = Infer<typeof PromptListChangedNotificationSchema>;\n\n/* Tools */\nexport type ToolAnnotations = Infer<typeof ToolAnnotationsSchema>;\nexport type Tool = Infer<typeof ToolSchema>;\nexport type ListToolsRequest = Infer<typeof ListToolsRequestSchema>;\nexport type ListToolsResult = Infer<typeof ListToolsResultSchema>;\nexport type CallToolResult = Infer<typeof CallToolResultSchema>;\nexport type CompatibilityCallToolResult = Infer<typeof CompatibilityCallToolResultSchema>;\nexport type CallToolRequest = Infer<typeof CallToolRequestSchema>;\nexport type ToolListChangedNotification = Infer<typeof ToolListChangedNotificationSchema>;\n\n/* Logging */\nexport type LoggingLevel = Infer<typeof LoggingLevelSchema>;\nexport type SetLevelRequest = Infer<typeof SetLevelRequestSchema>;\nexport type LoggingMessageNotification = Infer<typeof LoggingMessageNotificationSchema>;\n\n/* Sampling */\nexport type SamplingMessage = Infer<typeof SamplingMessageSchema>;\nexport type CreateMessageRequest = Infer<typeof CreateMessageRequestSchema>;\nexport type CreateMessageResult = Infer<typeof CreateMessageResultSchema>;\n\n/* Elicitation */\nexport type BooleanSchema = Infer<typeof BooleanSchemaSchema>;\nexport type StringSchema = Infer<typeof StringSchemaSchema>;\nexport type NumberSchema = Infer<typeof NumberSchemaSchema>;\nexport type EnumSchema = Infer<typeof EnumSchemaSchema>;\nexport type PrimitiveSchemaDefinition = Infer<typeof PrimitiveSchemaDefinitionSchema>;\nexport type ElicitRequest = Infer<typeof ElicitRequestSchema>;\nexport type ElicitResult = Infer<typeof ElicitResultSchema>;\n\n/* Autocomplete */\nexport type ResourceTemplateReference = Infer<typeof ResourceTemplateReferenceSchema>;\n/**\n * @deprecated Use ResourceTemplateReference instead\n */\nexport type ResourceReference = ResourceTemplateReference;\nexport type PromptReference = Infer<typeof PromptReferenceSchema>;\nexport type CompleteRequest = Infer<typeof CompleteRequestSchema>;\nexport type CompleteResult = Infer<typeof CompleteResultSchema>;\n\n/* Roots */\nexport type Root = Infer<typeof RootSchema>;\nexport type ListRootsRequest = Infer<typeof ListRootsRequestSchema>;\nexport type ListRootsResult = Infer<typeof ListRootsResultSchema>;\nexport type RootsListChangedNotification = Infer<typeof RootsListChangedNotificationSchema>;\n\n/* Client messages */\nexport type ClientRequest = Infer<typeof ClientRequestSchema>;\nexport type ClientNotification = Infer<typeof ClientNotificationSchema>;\nexport type ClientResult = Infer<typeof ClientResultSchema>;\n\n/* Server messages */\nexport type ServerRequest = Infer<typeof ServerRequestSchema>;\nexport type ServerNotification = Infer<typeof ServerNotificationSchema>;\nexport type ServerResult = Infer<typeof ServerResultSchema>;\n","import { ZodLiteral, ZodObject, ZodType, z } from 'zod';\nimport {\n    CancelledNotificationSchema,\n    ClientCapabilities,\n    ErrorCode,\n    isJSONRPCError,\n    isJSONRPCRequest,\n    isJSONRPCResponse,\n    isJSONRPCNotification,\n    JSONRPCError,\n    JSONRPCNotification,\n    JSONRPCRequest,\n    JSONRPCResponse,\n    McpError,\n    Notification,\n    PingRequestSchema,\n    Progress,\n    ProgressNotification,\n    ProgressNotificationSchema,\n    Request,\n    RequestId,\n    Result,\n    ServerCapabilities,\n    RequestMeta,\n    MessageExtraInfo,\n    RequestInfo\n} from '../types.js';\nimport { Transport, TransportSendOptions } from './transport.js';\nimport { AuthInfo } from '../server/auth/types.js';\n\n/**\n * Callback for progress notifications.\n */\nexport type ProgressCallback = (progress: Progress) => void;\n\n/**\n * Additional initialization options.\n */\nexport type ProtocolOptions = {\n    /**\n     * Whether to restrict emitted requests to only those that the remote side has indicated that they can handle, through their advertised capabilities.\n     *\n     * Note that this DOES NOT affect checking of _local_ side capabilities, as it is considered a logic error to mis-specify those.\n     *\n     * Currently this defaults to false, for backwards compatibility with SDK versions that did not advertise capabilities correctly. In future, this will default to true.\n     */\n    enforceStrictCapabilities?: boolean;\n    /**\n     * An array of notification method names that should be automatically debounced.\n     * Any notifications with a method in this list will be coalesced if they\n     * occur in the same tick of the event loop.\n     * e.g., ['notifications/tools/list_changed']\n     */\n    debouncedNotificationMethods?: string[];\n};\n\n/**\n * The default request timeout, in miliseconds.\n */\nexport const DEFAULT_REQUEST_TIMEOUT_MSEC = 60000;\n\n/**\n * Options that can be given per request.\n */\nexport type RequestOptions = {\n    /**\n     * If set, requests progress notifications from the remote end (if supported). When progress notifications are received, this callback will be invoked.\n     */\n    onprogress?: ProgressCallback;\n\n    /**\n     * Can be used to cancel an in-flight request. This will cause an AbortError to be raised from request().\n     */\n    signal?: AbortSignal;\n\n    /**\n     * A timeout (in milliseconds) for this request. If exceeded, an McpError with code `RequestTimeout` will be raised from request().\n     *\n     * If not specified, `DEFAULT_REQUEST_TIMEOUT_MSEC` will be used as the timeout.\n     */\n    timeout?: number;\n\n    /**\n     * If true, receiving a progress notification will reset the request timeout.\n     * This is useful for long-running operations that send periodic progress updates.\n     * Default: false\n     */\n    resetTimeoutOnProgress?: boolean;\n\n    /**\n     * Maximum total time (in milliseconds) to wait for a response.\n     * If exceeded, an McpError with code `RequestTimeout` will be raised, regardless of progress notifications.\n     * If not specified, there is no maximum total timeout.\n     */\n    maxTotalTimeout?: number;\n} & TransportSendOptions;\n\n/**\n * Options that can be given per notification.\n */\nexport type NotificationOptions = {\n    /**\n     * May be used to indicate to the transport which incoming request to associate this outgoing notification with.\n     */\n    relatedRequestId?: RequestId;\n};\n\n/**\n * Extra data given to request handlers.\n */\nexport type RequestHandlerExtra<SendRequestT extends Request, SendNotificationT extends Notification> = {\n    /**\n     * An abort signal used to communicate if the request was cancelled from the sender's side.\n     */\n    signal: AbortSignal;\n\n    /**\n     * Information about a validated access token, provided to request handlers.\n     */\n    authInfo?: AuthInfo;\n\n    /**\n     * The session ID from the transport, if available.\n     */\n    sessionId?: string;\n\n    /**\n     * Metadata from the original request.\n     */\n    _meta?: RequestMeta;\n\n    /**\n     * The JSON-RPC ID of the request being handled.\n     * This can be useful for tracking or logging purposes.\n     */\n    requestId: RequestId;\n\n    /**\n     * The original HTTP request.\n     */\n    requestInfo?: RequestInfo;\n\n    /**\n     * Sends a notification that relates to the current request being handled.\n     *\n     * This is used by certain transports to correctly associate related messages.\n     */\n    sendNotification: (notification: SendNotificationT) => Promise<void>;\n\n    /**\n     * Sends a request that relates to the current request being handled.\n     *\n     * This is used by certain transports to correctly associate related messages.\n     */\n    sendRequest: <U extends ZodType<object>>(request: SendRequestT, resultSchema: U, options?: RequestOptions) => Promise<z.infer<U>>;\n};\n\n/**\n * Information about a request's timeout state\n */\ntype TimeoutInfo = {\n    timeoutId: ReturnType<typeof setTimeout>;\n    startTime: number;\n    timeout: number;\n    maxTotalTimeout?: number;\n    resetTimeoutOnProgress: boolean;\n    onTimeout: () => void;\n};\n\n/**\n * Implements MCP protocol framing on top of a pluggable transport, including\n * features like request/response linking, notifications, and progress.\n */\nexport abstract class Protocol<SendRequestT extends Request, SendNotificationT extends Notification, SendResultT extends Result> {\n    private _transport?: Transport;\n    private _requestMessageId = 0;\n    private _requestHandlers: Map<\n        string,\n        (request: JSONRPCRequest, extra: RequestHandlerExtra<SendRequestT, SendNotificationT>) => Promise<SendResultT>\n    > = new Map();\n    private _requestHandlerAbortControllers: Map<RequestId, AbortController> = new Map();\n    private _notificationHandlers: Map<string, (notification: JSONRPCNotification) => Promise<void>> = new Map();\n    private _responseHandlers: Map<number, (response: JSONRPCResponse | Error) => void> = new Map();\n    private _progressHandlers: Map<number, ProgressCallback> = new Map();\n    private _timeoutInfo: Map<number, TimeoutInfo> = new Map();\n    private _pendingDebouncedNotifications = new Set<string>();\n\n    /**\n     * Callback for when the connection is closed for any reason.\n     *\n     * This is invoked when close() is called as well.\n     */\n    onclose?: () => void;\n\n    /**\n     * Callback for when an error occurs.\n     *\n     * Note that errors are not necessarily fatal; they are used for reporting any kind of exceptional condition out of band.\n     */\n    onerror?: (error: Error) => void;\n\n    /**\n     * A handler to invoke for any request types that do not have their own handler installed.\n     */\n    fallbackRequestHandler?: (request: JSONRPCRequest, extra: RequestHandlerExtra<SendRequestT, SendNotificationT>) => Promise<SendResultT>;\n\n    /**\n     * A handler to invoke for any notification types that do not have their own handler installed.\n     */\n    fallbackNotificationHandler?: (notification: Notification) => Promise<void>;\n\n    constructor(private _options?: ProtocolOptions) {\n        this.setNotificationHandler(CancelledNotificationSchema, notification => {\n            const controller = this._requestHandlerAbortControllers.get(notification.params.requestId);\n            controller?.abort(notification.params.reason);\n        });\n\n        this.setNotificationHandler(ProgressNotificationSchema, notification => {\n            this._onprogress(notification as unknown as ProgressNotification);\n        });\n\n        this.setRequestHandler(\n            PingRequestSchema,\n            // Automatic pong by default.\n            _request => ({}) as SendResultT\n        );\n    }\n\n    private _setupTimeout(\n        messageId: number,\n        timeout: number,\n        maxTotalTimeout: number | undefined,\n        onTimeout: () => void,\n        resetTimeoutOnProgress: boolean = false\n    ) {\n        this._timeoutInfo.set(messageId, {\n            timeoutId: setTimeout(onTimeout, timeout),\n            startTime: Date.now(),\n            timeout,\n            maxTotalTimeout,\n            resetTimeoutOnProgress,\n            onTimeout\n        });\n    }\n\n    private _resetTimeout(messageId: number): boolean {\n        const info = this._timeoutInfo.get(messageId);\n        if (!info) return false;\n\n        const totalElapsed = Date.now() - info.startTime;\n        if (info.maxTotalTimeout && totalElapsed >= info.maxTotalTimeout) {\n            this._timeoutInfo.delete(messageId);\n            throw new McpError(ErrorCode.RequestTimeout, 'Maximum total timeout exceeded', {\n                maxTotalTimeout: info.maxTotalTimeout,\n                totalElapsed\n            });\n        }\n\n        clearTimeout(info.timeoutId);\n        info.timeoutId = setTimeout(info.onTimeout, info.timeout);\n        return true;\n    }\n\n    private _cleanupTimeout(messageId: number) {\n        const info = this._timeoutInfo.get(messageId);\n        if (info) {\n            clearTimeout(info.timeoutId);\n            this._timeoutInfo.delete(messageId);\n        }\n    }\n\n    /**\n     * Attaches to the given transport, starts it, and starts listening for messages.\n     *\n     * The Protocol object assumes ownership of the Transport, replacing any callbacks that have already been set, and expects that it is the only user of the Transport instance going forward.\n     */\n    async connect(transport: Transport): Promise<void> {\n        this._transport = transport;\n        const _onclose = this.transport?.onclose;\n        this._transport.onclose = () => {\n            _onclose?.();\n            this._onclose();\n        };\n\n        const _onerror = this.transport?.onerror;\n        this._transport.onerror = (error: Error) => {\n            _onerror?.(error);\n            this._onerror(error);\n        };\n\n        const _onmessage = this._transport?.onmessage;\n        this._transport.onmessage = (message, extra) => {\n            _onmessage?.(message, extra);\n            if (isJSONRPCResponse(message) || isJSONRPCError(message)) {\n                this._onresponse(message);\n            } else if (isJSONRPCRequest(message)) {\n                this._onrequest(message, extra);\n            } else if (isJSONRPCNotification(message)) {\n                this._onnotification(message);\n            } else {\n                this._onerror(new Error(`Unknown message type: ${JSON.stringify(message)}`));\n            }\n        };\n\n        await this._transport.start();\n    }\n\n    private _onclose(): void {\n        const responseHandlers = this._responseHandlers;\n        this._responseHandlers = new Map();\n        this._progressHandlers.clear();\n        this._pendingDebouncedNotifications.clear();\n        this._transport = undefined;\n        this.onclose?.();\n\n        const error = new McpError(ErrorCode.ConnectionClosed, 'Connection closed');\n        for (const handler of responseHandlers.values()) {\n            handler(error);\n        }\n    }\n\n    private _onerror(error: Error): void {\n        this.onerror?.(error);\n    }\n\n    private _onnotification(notification: JSONRPCNotification): void {\n        const handler = this._notificationHandlers.get(notification.method) ?? this.fallbackNotificationHandler;\n\n        // Ignore notifications not being subscribed to.\n        if (handler === undefined) {\n            return;\n        }\n\n        // Starting with Promise.resolve() puts any synchronous errors into the monad as well.\n        Promise.resolve()\n            .then(() => handler(notification))\n            .catch(error => this._onerror(new Error(`Uncaught error in notification handler: ${error}`)));\n    }\n\n    private _onrequest(request: JSONRPCRequest, extra?: MessageExtraInfo): void {\n        const handler = this._requestHandlers.get(request.method) ?? this.fallbackRequestHandler;\n\n        // Capture the current transport at request time to ensure responses go to the correct client\n        const capturedTransport = this._transport;\n\n        if (handler === undefined) {\n            capturedTransport\n                ?.send({\n                    jsonrpc: '2.0',\n                    id: request.id,\n                    error: {\n                        code: ErrorCode.MethodNotFound,\n                        message: 'Method not found'\n                    }\n                })\n                .catch(error => this._onerror(new Error(`Failed to send an error response: ${error}`)));\n            return;\n        }\n\n        const abortController = new AbortController();\n        this._requestHandlerAbortControllers.set(request.id, abortController);\n\n        const fullExtra: RequestHandlerExtra<SendRequestT, SendNotificationT> = {\n            signal: abortController.signal,\n            sessionId: capturedTransport?.sessionId,\n            _meta: request.params?._meta,\n            sendNotification: notification => this.notification(notification, { relatedRequestId: request.id }),\n            sendRequest: (r, resultSchema, options?) => this.request(r, resultSchema, { ...options, relatedRequestId: request.id }),\n            authInfo: extra?.authInfo,\n            requestId: request.id,\n            requestInfo: extra?.requestInfo\n        };\n\n        // Starting with Promise.resolve() puts any synchronous errors into the monad as well.\n        Promise.resolve()\n            .then(() => handler(request, fullExtra))\n            .then(\n                result => {\n                    if (abortController.signal.aborted) {\n                        return;\n                    }\n\n                    return capturedTransport?.send({\n                        result,\n                        jsonrpc: '2.0',\n                        id: request.id\n                    });\n                },\n                error => {\n                    if (abortController.signal.aborted) {\n                        return;\n                    }\n\n                    return capturedTransport?.send({\n                        jsonrpc: '2.0',\n                        id: request.id,\n                        error: {\n                            code: Number.isSafeInteger(error['code']) ? error['code'] : ErrorCode.InternalError,\n                            message: error.message ?? 'Internal error'\n                        }\n                    });\n                }\n            )\n            .catch(error => this._onerror(new Error(`Failed to send response: ${error}`)))\n            .finally(() => {\n                this._requestHandlerAbortControllers.delete(request.id);\n            });\n    }\n\n    private _onprogress(notification: ProgressNotification): void {\n        const { progressToken, ...params } = notification.params;\n        const messageId = Number(progressToken);\n\n        const handler = this._progressHandlers.get(messageId);\n        if (!handler) {\n            this._onerror(new Error(`Received a progress notification for an unknown token: ${JSON.stringify(notification)}`));\n            return;\n        }\n\n        const responseHandler = this._responseHandlers.get(messageId);\n        const timeoutInfo = this._timeoutInfo.get(messageId);\n\n        if (timeoutInfo && responseHandler && timeoutInfo.resetTimeoutOnProgress) {\n            try {\n                this._resetTimeout(messageId);\n            } catch (error) {\n                responseHandler(error as Error);\n                return;\n            }\n        }\n\n        handler(params);\n    }\n\n    private _onresponse(response: JSONRPCResponse | JSONRPCError): void {\n        const messageId = Number(response.id);\n        const handler = this._responseHandlers.get(messageId);\n        if (handler === undefined) {\n            this._onerror(new Error(`Received a response for an unknown message ID: ${JSON.stringify(response)}`));\n            return;\n        }\n\n        this._responseHandlers.delete(messageId);\n        this._progressHandlers.delete(messageId);\n        this._cleanupTimeout(messageId);\n\n        if (isJSONRPCResponse(response)) {\n            handler(response);\n        } else {\n            const error = new McpError(response.error.code, response.error.message, response.error.data);\n            handler(error);\n        }\n    }\n\n    get transport(): Transport | undefined {\n        return this._transport;\n    }\n\n    /**\n     * Closes the connection.\n     */\n    async close(): Promise<void> {\n        await this._transport?.close();\n    }\n\n    /**\n     * A method to check if a capability is supported by the remote side, for the given method to be called.\n     *\n     * This should be implemented by subclasses.\n     */\n    protected abstract assertCapabilityForMethod(method: SendRequestT['method']): void;\n\n    /**\n     * A method to check if a notification is supported by the local side, for the given method to be sent.\n     *\n     * This should be implemented by subclasses.\n     */\n    protected abstract assertNotificationCapability(method: SendNotificationT['method']): void;\n\n    /**\n     * A method to check if a request handler is supported by the local side, for the given method to be handled.\n     *\n     * This should be implemented by subclasses.\n     */\n    protected abstract assertRequestHandlerCapability(method: string): void;\n\n    /**\n     * Sends a request and wait for a response.\n     *\n     * Do not use this method to emit notifications! Use notification() instead.\n     */\n    request<T extends ZodType<object>>(request: SendRequestT, resultSchema: T, options?: RequestOptions): Promise<z.infer<T>> {\n        const { relatedRequestId, resumptionToken, onresumptiontoken } = options ?? {};\n\n        return new Promise((resolve, reject) => {\n            if (!this._transport) {\n                reject(new Error('Not connected'));\n                return;\n            }\n\n            if (this._options?.enforceStrictCapabilities === true) {\n                this.assertCapabilityForMethod(request.method);\n            }\n\n            options?.signal?.throwIfAborted();\n\n            const messageId = this._requestMessageId++;\n            const jsonrpcRequest: JSONRPCRequest = {\n                ...request,\n                jsonrpc: '2.0',\n                id: messageId\n            };\n\n            if (options?.onprogress) {\n                this._progressHandlers.set(messageId, options.onprogress);\n                jsonrpcRequest.params = {\n                    ...request.params,\n                    _meta: {\n                        ...(request.params?._meta || {}),\n                        progressToken: messageId\n                    }\n                };\n            }\n\n            const cancel = (reason: unknown) => {\n                this._responseHandlers.delete(messageId);\n                this._progressHandlers.delete(messageId);\n                this._cleanupTimeout(messageId);\n\n                this._transport\n                    ?.send(\n                        {\n                            jsonrpc: '2.0',\n                            method: 'notifications/cancelled',\n                            params: {\n                                requestId: messageId,\n                                reason: String(reason)\n                            }\n                        },\n                        { relatedRequestId, resumptionToken, onresumptiontoken }\n                    )\n                    .catch(error => this._onerror(new Error(`Failed to send cancellation: ${error}`)));\n\n                reject(reason);\n            };\n\n            this._responseHandlers.set(messageId, response => {\n                if (options?.signal?.aborted) {\n                    return;\n                }\n\n                if (response instanceof Error) {\n                    return reject(response);\n                }\n\n                try {\n                    const result = resultSchema.parse(response.result);\n                    resolve(result);\n                } catch (error) {\n                    reject(error);\n                }\n            });\n\n            options?.signal?.addEventListener('abort', () => {\n                cancel(options?.signal?.reason);\n            });\n\n            const timeout = options?.timeout ?? DEFAULT_REQUEST_TIMEOUT_MSEC;\n            const timeoutHandler = () => cancel(new McpError(ErrorCode.RequestTimeout, 'Request timed out', { timeout }));\n\n            this._setupTimeout(messageId, timeout, options?.maxTotalTimeout, timeoutHandler, options?.resetTimeoutOnProgress ?? false);\n\n            this._transport.send(jsonrpcRequest, { relatedRequestId, resumptionToken, onresumptiontoken }).catch(error => {\n                this._cleanupTimeout(messageId);\n                reject(error);\n            });\n        });\n    }\n\n    /**\n     * Emits a notification, which is a one-way message that does not expect a response.\n     */\n    async notification(notification: SendNotificationT, options?: NotificationOptions): Promise<void> {\n        if (!this._transport) {\n            throw new Error('Not connected');\n        }\n\n        this.assertNotificationCapability(notification.method);\n\n        const debouncedMethods = this._options?.debouncedNotificationMethods ?? [];\n        // A notification can only be debounced if it's in the list AND it's \"simple\"\n        // (i.e., has no parameters and no related request ID that could be lost).\n        const canDebounce = debouncedMethods.includes(notification.method) && !notification.params && !options?.relatedRequestId;\n\n        if (canDebounce) {\n            // If a notification of this type is already scheduled, do nothing.\n            if (this._pendingDebouncedNotifications.has(notification.method)) {\n                return;\n            }\n\n            // Mark this notification type as pending.\n            this._pendingDebouncedNotifications.add(notification.method);\n\n            // Schedule the actual send to happen in the next microtask.\n            // This allows all synchronous calls in the current event loop tick to be coalesced.\n            Promise.resolve().then(() => {\n                // Un-mark the notification so the next one can be scheduled.\n                this._pendingDebouncedNotifications.delete(notification.method);\n\n                // SAFETY CHECK: If the connection was closed while this was pending, abort.\n                if (!this._transport) {\n                    return;\n                }\n\n                const jsonrpcNotification: JSONRPCNotification = {\n                    ...notification,\n                    jsonrpc: '2.0'\n                };\n                // Send the notification, but don't await it here to avoid blocking.\n                // Handle potential errors with a .catch().\n                this._transport?.send(jsonrpcNotification, options).catch(error => this._onerror(error));\n            });\n\n            // Return immediately.\n            return;\n        }\n\n        const jsonrpcNotification: JSONRPCNotification = {\n            ...notification,\n            jsonrpc: '2.0'\n        };\n\n        await this._transport.send(jsonrpcNotification, options);\n    }\n\n    /**\n     * Registers a handler to invoke when this protocol object receives a request with the given method.\n     *\n     * Note that this will replace any previous request handler for the same method.\n     */\n    setRequestHandler<\n        T extends ZodObject<{\n            method: ZodLiteral<string>;\n        }>\n    >(\n        requestSchema: T,\n        handler: (request: z.infer<T>, extra: RequestHandlerExtra<SendRequestT, SendNotificationT>) => SendResultT | Promise<SendResultT>\n    ): void {\n        const method = requestSchema.shape.method.value;\n        this.assertRequestHandlerCapability(method);\n\n        this._requestHandlers.set(method, (request, extra) => {\n            return Promise.resolve(handler(requestSchema.parse(request), extra));\n        });\n    }\n\n    /**\n     * Removes the request handler for the given method.\n     */\n    removeRequestHandler(method: string): void {\n        this._requestHandlers.delete(method);\n    }\n\n    /**\n     * Asserts that a request handler has not already been set for the given method, in preparation for a new one being automatically installed.\n     */\n    assertCanSetRequestHandler(method: string): void {\n        if (this._requestHandlers.has(method)) {\n            throw new Error(`A request handler for ${method} already exists, which would be overridden`);\n        }\n    }\n\n    /**\n     * Registers a handler to invoke when this protocol object receives a notification with the given method.\n     *\n     * Note that this will replace any previous notification handler for the same method.\n     */\n    setNotificationHandler<\n        T extends ZodObject<{\n            method: ZodLiteral<string>;\n        }>\n    >(notificationSchema: T, handler: (notification: z.infer<T>) => void | Promise<void>): void {\n        this._notificationHandlers.set(notificationSchema.shape.method.value, notification =>\n            Promise.resolve(handler(notificationSchema.parse(notification)))\n        );\n    }\n\n    /**\n     * Removes the notification handler for the given method.\n     */\n    removeNotificationHandler(method: string): void {\n        this._notificationHandlers.delete(method);\n    }\n}\n\nexport function mergeCapabilities<T extends ServerCapabilities | ClientCapabilities>(base: T, additional: T): T {\n    return Object.entries(additional).reduce(\n        (acc, [key, value]) => {\n            if (value && typeof value === 'object') {\n                acc[key] = acc[key] ? { ...acc[key], ...value } : value;\n            } else {\n                acc[key] = value;\n            }\n            return acc;\n        },\n        { ...base }\n    );\n}\n","/** @license URI.js v4.4.1 (c) 2011 Gary Court. License: http://github.com/garycourt/uri-js */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.URI = global.URI || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction merge() {\n    for (var _len = arguments.length, sets = Array(_len), _key = 0; _key < _len; _key++) {\n        sets[_key] = arguments[_key];\n    }\n\n    if (sets.length > 1) {\n        sets[0] = sets[0].slice(0, -1);\n        var xl = sets.length - 1;\n        for (var x = 1; x < xl; ++x) {\n            sets[x] = sets[x].slice(1, -1);\n        }\n        sets[xl] = sets[xl].slice(1);\n        return sets.join('');\n    } else {\n        return sets[0];\n    }\n}\nfunction subexp(str) {\n    return \"(?:\" + str + \")\";\n}\nfunction typeOf(o) {\n    return o === undefined ? \"undefined\" : o === null ? \"null\" : Object.prototype.toString.call(o).split(\" \").pop().split(\"]\").shift().toLowerCase();\n}\nfunction toUpperCase(str) {\n    return str.toUpperCase();\n}\nfunction toArray(obj) {\n    return obj !== undefined && obj !== null ? obj instanceof Array ? obj : typeof obj.length !== \"number\" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj) : [];\n}\nfunction assign(target, source) {\n    var obj = target;\n    if (source) {\n        for (var key in source) {\n            obj[key] = source[key];\n        }\n    }\n    return obj;\n}\n\nfunction buildExps(isIRI) {\n    var ALPHA$$ = \"[A-Za-z]\",\n        CR$ = \"[\\\\x0D]\",\n        DIGIT$$ = \"[0-9]\",\n        DQUOTE$$ = \"[\\\\x22]\",\n        HEXDIG$$ = merge(DIGIT$$, \"[A-Fa-f]\"),\n        //case-insensitive\n    LF$$ = \"[\\\\x0A]\",\n        SP$$ = \"[\\\\x20]\",\n        PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)),\n        //expanded\n    GEN_DELIMS$$ = \"[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]\",\n        SUB_DELIMS$$ = \"[\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]\",\n        RESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$),\n        UCSCHAR$$ = isIRI ? \"[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\" : \"[]\",\n        //subset, excludes bidi control characters\n    IPRIVATE$$ = isIRI ? \"[\\\\uE000-\\\\uF8FF]\" : \"[]\",\n        //subset\n    UNRESERVED$$ = merge(ALPHA$$, DIGIT$$, \"[\\\\-\\\\.\\\\_\\\\~]\", UCSCHAR$$),\n        SCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\") + \"*\"),\n        USERINFO$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\")) + \"*\"),\n        DEC_OCTET$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"[1-9]\" + DIGIT$$) + \"|\" + DIGIT$$),\n        DEC_OCTET_RELAXED$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"0?[1-9]\" + DIGIT$$) + \"|0?0?\" + DIGIT$$),\n        //relaxed parsing rules\n    IPV4ADDRESS$ = subexp(DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$),\n        H16$ = subexp(HEXDIG$$ + \"{1,4}\"),\n        LS32$ = subexp(subexp(H16$ + \"\\\\:\" + H16$) + \"|\" + IPV4ADDRESS$),\n        IPV6ADDRESS1$ = subexp(subexp(H16$ + \"\\\\:\") + \"{6}\" + LS32$),\n        //                           6( h16 \":\" ) ls32\n    IPV6ADDRESS2$ = subexp(\"\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{5}\" + LS32$),\n        //                      \"::\" 5( h16 \":\" ) ls32\n    IPV6ADDRESS3$ = subexp(subexp(H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{4}\" + LS32$),\n        //[               h16 ] \"::\" 4( h16 \":\" ) ls32\n    IPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,1}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{3}\" + LS32$),\n        //[ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n    IPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,2}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{2}\" + LS32$),\n        //[ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n    IPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,3}\" + H16$) + \"?\\\\:\\\\:\" + H16$ + \"\\\\:\" + LS32$),\n        //[ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n    IPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,4}\" + H16$) + \"?\\\\:\\\\:\" + LS32$),\n        //[ *4( h16 \":\" ) h16 ] \"::\"              ls32\n    IPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,5}\" + H16$) + \"?\\\\:\\\\:\" + H16$),\n        //[ *5( h16 \":\" ) h16 ] \"::\"              h16\n    IPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,6}\" + H16$) + \"?\\\\:\\\\:\"),\n        //[ *6( h16 \":\" ) h16 ] \"::\"\n    IPV6ADDRESS$ = subexp([IPV6ADDRESS1$, IPV6ADDRESS2$, IPV6ADDRESS3$, IPV6ADDRESS4$, IPV6ADDRESS5$, IPV6ADDRESS6$, IPV6ADDRESS7$, IPV6ADDRESS8$, IPV6ADDRESS9$].join(\"|\")),\n        ZONEID$ = subexp(subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$) + \"+\"),\n        //RFC 6874\n    IPV6ADDRZ$ = subexp(IPV6ADDRESS$ + \"\\\\%25\" + ZONEID$),\n        //RFC 6874\n    IPV6ADDRZ_RELAXED$ = subexp(IPV6ADDRESS$ + subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + ZONEID$),\n        //RFC 6874, with relaxed parsing rules\n    IPVFUTURE$ = subexp(\"[vV]\" + HEXDIG$$ + \"+\\\\.\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\") + \"+\"),\n        IP_LITERAL$ = subexp(\"\\\\[\" + subexp(IPV6ADDRZ_RELAXED$ + \"|\" + IPV6ADDRESS$ + \"|\" + IPVFUTURE$) + \"\\\\]\"),\n        //RFC 6874\n    REG_NAME$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$)) + \"*\"),\n        HOST$ = subexp(IP_LITERAL$ + \"|\" + IPV4ADDRESS$ + \"(?!\" + REG_NAME$ + \")\" + \"|\" + REG_NAME$),\n        PORT$ = subexp(DIGIT$$ + \"*\"),\n        AUTHORITY$ = subexp(subexp(USERINFO$ + \"@\") + \"?\" + HOST$ + subexp(\"\\\\:\" + PORT$) + \"?\"),\n        PCHAR$ = subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@]\")),\n        SEGMENT$ = subexp(PCHAR$ + \"*\"),\n        SEGMENT_NZ$ = subexp(PCHAR$ + \"+\"),\n        SEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\@]\")) + \"+\"),\n        PATH_ABEMPTY$ = subexp(subexp(\"\\\\/\" + SEGMENT$) + \"*\"),\n        PATH_ABSOLUTE$ = subexp(\"\\\\/\" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + \"?\"),\n        //simplified\n    PATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$),\n        //simplified\n    PATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$),\n        //simplified\n    PATH_EMPTY$ = \"(?!\" + PCHAR$ + \")\",\n        PATH$ = subexp(PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n        QUERY$ = subexp(subexp(PCHAR$ + \"|\" + merge(\"[\\\\/\\\\?]\", IPRIVATE$$)) + \"*\"),\n        FRAGMENT$ = subexp(subexp(PCHAR$ + \"|[\\\\/\\\\?]\") + \"*\"),\n        HIER_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n        URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n        RELATIVE_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$),\n        RELATIVE$ = subexp(RELATIVE_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n        URI_REFERENCE$ = subexp(URI$ + \"|\" + RELATIVE$),\n        ABSOLUTE_URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\"),\n        GENERIC_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n        RELATIVE_REF$ = \"^(){0}\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n        ABSOLUTE_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?$\",\n        SAMEDOC_REF$ = \"^\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n        AUTHORITY_REF$ = \"^\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?$\";\n    return {\n        NOT_SCHEME: new RegExp(merge(\"[^]\", ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\"), \"g\"),\n        NOT_USERINFO: new RegExp(merge(\"[^\\\\%\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n        NOT_HOST: new RegExp(merge(\"[^\\\\%\\\\[\\\\]\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n        NOT_PATH: new RegExp(merge(\"[^\\\\%\\\\/\\\\:\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n        NOT_PATH_NOSCHEME: new RegExp(merge(\"[^\\\\%\\\\/\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n        NOT_QUERY: new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\", IPRIVATE$$), \"g\"),\n        NOT_FRAGMENT: new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\"), \"g\"),\n        ESCAPE: new RegExp(merge(\"[^]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n        UNRESERVED: new RegExp(UNRESERVED$$, \"g\"),\n        OTHER_CHARS: new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, RESERVED$$), \"g\"),\n        PCT_ENCODED: new RegExp(PCT_ENCODED$, \"g\"),\n        IPV4ADDRESS: new RegExp(\"^(\" + IPV4ADDRESS$ + \")$\"),\n        IPV6ADDRESS: new RegExp(\"^\\\\[?(\" + IPV6ADDRESS$ + \")\" + subexp(subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + \"(\" + ZONEID$ + \")\") + \"?\\\\]?$\") //RFC 6874, with relaxed parsing rules\n    };\n}\nvar URI_PROTOCOL = buildExps(false);\n\nvar IRI_PROTOCOL = buildExps(true);\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\n/** Highest positive signed 32-bit float value */\n\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nvar base = 36;\nvar tMin = 1;\nvar tMax = 26;\nvar skew = 38;\nvar damp = 700;\nvar initialBias = 72;\nvar initialN = 128; // 0x80\nvar delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nvar regexPunycode = /^xn--/;\nvar regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nvar regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nvar errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nvar baseMinusTMin = base - tMin;\nvar floor = Math.floor;\nvar stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error$1(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tvar result = [];\n\tvar length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tvar parts = string.split('@');\n\tvar result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tvar labels = string.split('.');\n\tvar encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tvar output = [];\n\tvar counter = 0;\n\tvar length = string.length;\n\twhile (counter < length) {\n\t\tvar value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tvar extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) {\n\t\t\t\t// Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nvar ucs2encode = function ucs2encode(array) {\n\treturn String.fromCodePoint.apply(String, toConsumableArray(array));\n};\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nvar basicToDigit = function basicToDigit(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nvar digitToBasic = function digitToBasic(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nvar adapt = function adapt(delta, numPoints, firstTime) {\n\tvar k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (; /* no initialization */delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nvar decode = function decode(input) {\n\t// Don't use UCS-2.\n\tvar output = [];\n\tvar inputLength = input.length;\n\tvar i = 0;\n\tvar n = initialN;\n\tvar bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tvar basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (var j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror$1('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (var index = basic > 0 ? basic + 1 : 0; index < inputLength;) /* no final expression */{\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tvar oldi = i;\n\t\tfor (var w = 1, k = base;; /* no condition */k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror$1('invalid-input');\n\t\t\t}\n\n\t\t\tvar digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror$1('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tvar t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tvar baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror$1('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\t\t}\n\n\t\tvar out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror$1('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\t}\n\n\treturn String.fromCodePoint.apply(String, output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nvar encode = function encode(input) {\n\tvar output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tvar inputLength = input.length;\n\n\t// Initialize the state.\n\tvar n = initialN;\n\tvar delta = 0;\n\tvar bias = initialBias;\n\n\t// Handle the basic code points.\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = input[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar _currentValue2 = _step.value;\n\n\t\t\tif (_currentValue2 < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(_currentValue2));\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar basicLength = output.length;\n\tvar handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tvar m = maxInt;\n\t\tvar _iteratorNormalCompletion2 = true;\n\t\tvar _didIteratorError2 = false;\n\t\tvar _iteratorError2 = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator2 = input[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\tvar currentValue = _step2.value;\n\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow.\n\t\t} catch (err) {\n\t\t\t_didIteratorError2 = true;\n\t\t\t_iteratorError2 = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t_iterator2.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror$1('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tvar _iteratorNormalCompletion3 = true;\n\t\tvar _didIteratorError3 = false;\n\t\tvar _iteratorError3 = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator3 = input[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\tvar _currentValue = _step3.value;\n\n\t\t\t\tif (_currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror$1('overflow');\n\t\t\t\t}\n\t\t\t\tif (_currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\t\tvar q = delta;\n\t\t\t\t\tfor (var k = base;; /* no condition */k += base) {\n\t\t\t\t\t\tvar t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar qMinusT = q - t;\n\t\t\t\t\t\tvar baseMinusT = base - t;\n\t\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError3 = true;\n\t\t\t_iteratorError3 = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t_iterator3.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nvar toUnicode = function toUnicode(input) {\n\treturn mapDomain(input, function (string) {\n\t\treturn regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nvar toASCII = function toASCII(input) {\n\treturn mapDomain(input, function (string) {\n\t\treturn regexNonASCII.test(string) ? 'xn--' + encode(string) : string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nvar punycode = {\n\t/**\n  * A string representing the current Punycode.js version number.\n  * @memberOf punycode\n  * @type String\n  */\n\t'version': '2.1.0',\n\t/**\n  * An object of methods to convert from JavaScript's internal character\n  * representation (UCS-2) to Unicode code points, and back.\n  * @see <https://mathiasbynens.be/notes/javascript-encoding>\n  * @memberOf punycode\n  * @type Object\n  */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\n/**\n * URI.js\n *\n * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/uri-js\n */\n/**\n * Copyright 2011 Gary Court. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification, are\n * permitted provided that the following conditions are met:\n *\n *    1. Redistributions of source code must retain the above copyright notice, this list of\n *       conditions and the following disclaimer.\n *\n *    2. Redistributions in binary form must reproduce the above copyright notice, this list\n *       of conditions and the following disclaimer in the documentation and/or other materials\n *       provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS'' AND ANY EXPRESS OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those of the\n * authors and should not be interpreted as representing official policies, either expressed\n * or implied, of Gary Court.\n */\nvar SCHEMES = {};\nfunction pctEncChar(chr) {\n    var c = chr.charCodeAt(0);\n    var e = void 0;\n    if (c < 16) e = \"%0\" + c.toString(16).toUpperCase();else if (c < 128) e = \"%\" + c.toString(16).toUpperCase();else if (c < 2048) e = \"%\" + (c >> 6 | 192).toString(16).toUpperCase() + \"%\" + (c & 63 | 128).toString(16).toUpperCase();else e = \"%\" + (c >> 12 | 224).toString(16).toUpperCase() + \"%\" + (c >> 6 & 63 | 128).toString(16).toUpperCase() + \"%\" + (c & 63 | 128).toString(16).toUpperCase();\n    return e;\n}\nfunction pctDecChars(str) {\n    var newStr = \"\";\n    var i = 0;\n    var il = str.length;\n    while (i < il) {\n        var c = parseInt(str.substr(i + 1, 2), 16);\n        if (c < 128) {\n            newStr += String.fromCharCode(c);\n            i += 3;\n        } else if (c >= 194 && c < 224) {\n            if (il - i >= 6) {\n                var c2 = parseInt(str.substr(i + 4, 2), 16);\n                newStr += String.fromCharCode((c & 31) << 6 | c2 & 63);\n            } else {\n                newStr += str.substr(i, 6);\n            }\n            i += 6;\n        } else if (c >= 224) {\n            if (il - i >= 9) {\n                var _c = parseInt(str.substr(i + 4, 2), 16);\n                var c3 = parseInt(str.substr(i + 7, 2), 16);\n                newStr += String.fromCharCode((c & 15) << 12 | (_c & 63) << 6 | c3 & 63);\n            } else {\n                newStr += str.substr(i, 9);\n            }\n            i += 9;\n        } else {\n            newStr += str.substr(i, 3);\n            i += 3;\n        }\n    }\n    return newStr;\n}\nfunction _normalizeComponentEncoding(components, protocol) {\n    function decodeUnreserved(str) {\n        var decStr = pctDecChars(str);\n        return !decStr.match(protocol.UNRESERVED) ? str : decStr;\n    }\n    if (components.scheme) components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, \"\");\n    if (components.userinfo !== undefined) components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    if (components.host !== undefined) components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    if (components.path !== undefined) components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    if (components.query !== undefined) components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    if (components.fragment !== undefined) components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    return components;\n}\n\nfunction _stripLeadingZeros(str) {\n    return str.replace(/^0*(.*)/, \"$1\") || \"0\";\n}\nfunction _normalizeIPv4(host, protocol) {\n    var matches = host.match(protocol.IPV4ADDRESS) || [];\n\n    var _matches = slicedToArray(matches, 2),\n        address = _matches[1];\n\n    if (address) {\n        return address.split(\".\").map(_stripLeadingZeros).join(\".\");\n    } else {\n        return host;\n    }\n}\nfunction _normalizeIPv6(host, protocol) {\n    var matches = host.match(protocol.IPV6ADDRESS) || [];\n\n    var _matches2 = slicedToArray(matches, 3),\n        address = _matches2[1],\n        zone = _matches2[2];\n\n    if (address) {\n        var _address$toLowerCase$ = address.toLowerCase().split('::').reverse(),\n            _address$toLowerCase$2 = slicedToArray(_address$toLowerCase$, 2),\n            last = _address$toLowerCase$2[0],\n            first = _address$toLowerCase$2[1];\n\n        var firstFields = first ? first.split(\":\").map(_stripLeadingZeros) : [];\n        var lastFields = last.split(\":\").map(_stripLeadingZeros);\n        var isLastFieldIPv4Address = protocol.IPV4ADDRESS.test(lastFields[lastFields.length - 1]);\n        var fieldCount = isLastFieldIPv4Address ? 7 : 8;\n        var lastFieldsStart = lastFields.length - fieldCount;\n        var fields = Array(fieldCount);\n        for (var x = 0; x < fieldCount; ++x) {\n            fields[x] = firstFields[x] || lastFields[lastFieldsStart + x] || '';\n        }\n        if (isLastFieldIPv4Address) {\n            fields[fieldCount - 1] = _normalizeIPv4(fields[fieldCount - 1], protocol);\n        }\n        var allZeroFields = fields.reduce(function (acc, field, index) {\n            if (!field || field === \"0\") {\n                var lastLongest = acc[acc.length - 1];\n                if (lastLongest && lastLongest.index + lastLongest.length === index) {\n                    lastLongest.length++;\n                } else {\n                    acc.push({ index: index, length: 1 });\n                }\n            }\n            return acc;\n        }, []);\n        var longestZeroFields = allZeroFields.sort(function (a, b) {\n            return b.length - a.length;\n        })[0];\n        var newHost = void 0;\n        if (longestZeroFields && longestZeroFields.length > 1) {\n            var newFirst = fields.slice(0, longestZeroFields.index);\n            var newLast = fields.slice(longestZeroFields.index + longestZeroFields.length);\n            newHost = newFirst.join(\":\") + \"::\" + newLast.join(\":\");\n        } else {\n            newHost = fields.join(\":\");\n        }\n        if (zone) {\n            newHost += \"%\" + zone;\n        }\n        return newHost;\n    } else {\n        return host;\n    }\n}\nvar URI_PARSE = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i;\nvar NO_MATCH_IS_UNDEFINED = \"\".match(/(){0}/)[1] === undefined;\nfunction parse(uriString) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var components = {};\n    var protocol = options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL;\n    if (options.reference === \"suffix\") uriString = (options.scheme ? options.scheme + \":\" : \"\") + \"//\" + uriString;\n    var matches = uriString.match(URI_PARSE);\n    if (matches) {\n        if (NO_MATCH_IS_UNDEFINED) {\n            //store each component\n            components.scheme = matches[1];\n            components.userinfo = matches[3];\n            components.host = matches[4];\n            components.port = parseInt(matches[5], 10);\n            components.path = matches[6] || \"\";\n            components.query = matches[7];\n            components.fragment = matches[8];\n            //fix port number\n            if (isNaN(components.port)) {\n                components.port = matches[5];\n            }\n        } else {\n            //IE FIX for improper RegExp matching\n            //store each component\n            components.scheme = matches[1] || undefined;\n            components.userinfo = uriString.indexOf(\"@\") !== -1 ? matches[3] : undefined;\n            components.host = uriString.indexOf(\"//\") !== -1 ? matches[4] : undefined;\n            components.port = parseInt(matches[5], 10);\n            components.path = matches[6] || \"\";\n            components.query = uriString.indexOf(\"?\") !== -1 ? matches[7] : undefined;\n            components.fragment = uriString.indexOf(\"#\") !== -1 ? matches[8] : undefined;\n            //fix port number\n            if (isNaN(components.port)) {\n                components.port = uriString.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/) ? matches[4] : undefined;\n            }\n        }\n        if (components.host) {\n            //normalize IP hosts\n            components.host = _normalizeIPv6(_normalizeIPv4(components.host, protocol), protocol);\n        }\n        //determine reference type\n        if (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {\n            components.reference = \"same-document\";\n        } else if (components.scheme === undefined) {\n            components.reference = \"relative\";\n        } else if (components.fragment === undefined) {\n            components.reference = \"absolute\";\n        } else {\n            components.reference = \"uri\";\n        }\n        //check for reference errors\n        if (options.reference && options.reference !== \"suffix\" && options.reference !== components.reference) {\n            components.error = components.error || \"URI is not a \" + options.reference + \" reference.\";\n        }\n        //find scheme handler\n        var schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n        //check if scheme can't handle IRIs\n        if (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n            //if host component is a domain name\n            if (components.host && (options.domainHost || schemeHandler && schemeHandler.domainHost)) {\n                //convert Unicode IDN -> ASCII IDN\n                try {\n                    components.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());\n                } catch (e) {\n                    components.error = components.error || \"Host's domain name can not be converted to ASCII via punycode: \" + e;\n                }\n            }\n            //convert IRI -> URI\n            _normalizeComponentEncoding(components, URI_PROTOCOL);\n        } else {\n            //normalize encodings\n            _normalizeComponentEncoding(components, protocol);\n        }\n        //perform scheme specific parsing\n        if (schemeHandler && schemeHandler.parse) {\n            schemeHandler.parse(components, options);\n        }\n    } else {\n        components.error = components.error || \"URI can not be parsed.\";\n    }\n    return components;\n}\n\nfunction _recomposeAuthority(components, options) {\n    var protocol = options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL;\n    var uriTokens = [];\n    if (components.userinfo !== undefined) {\n        uriTokens.push(components.userinfo);\n        uriTokens.push(\"@\");\n    }\n    if (components.host !== undefined) {\n        //normalize IP hosts, add brackets and escape zone separator for IPv6\n        uriTokens.push(_normalizeIPv6(_normalizeIPv4(String(components.host), protocol), protocol).replace(protocol.IPV6ADDRESS, function (_, $1, $2) {\n            return \"[\" + $1 + ($2 ? \"%25\" + $2 : \"\") + \"]\";\n        }));\n    }\n    if (typeof components.port === \"number\" || typeof components.port === \"string\") {\n        uriTokens.push(\":\");\n        uriTokens.push(String(components.port));\n    }\n    return uriTokens.length ? uriTokens.join(\"\") : undefined;\n}\n\nvar RDS1 = /^\\.\\.?\\//;\nvar RDS2 = /^\\/\\.(\\/|$)/;\nvar RDS3 = /^\\/\\.\\.(\\/|$)/;\nvar RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/;\nfunction removeDotSegments(input) {\n    var output = [];\n    while (input.length) {\n        if (input.match(RDS1)) {\n            input = input.replace(RDS1, \"\");\n        } else if (input.match(RDS2)) {\n            input = input.replace(RDS2, \"/\");\n        } else if (input.match(RDS3)) {\n            input = input.replace(RDS3, \"/\");\n            output.pop();\n        } else if (input === \".\" || input === \"..\") {\n            input = \"\";\n        } else {\n            var im = input.match(RDS5);\n            if (im) {\n                var s = im[0];\n                input = input.slice(s.length);\n                output.push(s);\n            } else {\n                throw new Error(\"Unexpected dot segment condition\");\n            }\n        }\n    }\n    return output.join(\"\");\n}\n\nfunction serialize(components) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var protocol = options.iri ? IRI_PROTOCOL : URI_PROTOCOL;\n    var uriTokens = [];\n    //find scheme handler\n    var schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n    //perform scheme specific serialization\n    if (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options);\n    if (components.host) {\n        //if host component is an IPv6 address\n        if (protocol.IPV6ADDRESS.test(components.host)) {}\n        //TODO: normalize IPv6 address as per RFC 5952\n\n        //if host component is a domain name\n        else if (options.domainHost || schemeHandler && schemeHandler.domainHost) {\n                //convert IDN via punycode\n                try {\n                    components.host = !options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host);\n                } catch (e) {\n                    components.error = components.error || \"Host's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n                }\n            }\n    }\n    //normalize encoding\n    _normalizeComponentEncoding(components, protocol);\n    if (options.reference !== \"suffix\" && components.scheme) {\n        uriTokens.push(components.scheme);\n        uriTokens.push(\":\");\n    }\n    var authority = _recomposeAuthority(components, options);\n    if (authority !== undefined) {\n        if (options.reference !== \"suffix\") {\n            uriTokens.push(\"//\");\n        }\n        uriTokens.push(authority);\n        if (components.path && components.path.charAt(0) !== \"/\") {\n            uriTokens.push(\"/\");\n        }\n    }\n    if (components.path !== undefined) {\n        var s = components.path;\n        if (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n            s = removeDotSegments(s);\n        }\n        if (authority === undefined) {\n            s = s.replace(/^\\/\\//, \"/%2F\"); //don't allow the path to start with \"//\"\n        }\n        uriTokens.push(s);\n    }\n    if (components.query !== undefined) {\n        uriTokens.push(\"?\");\n        uriTokens.push(components.query);\n    }\n    if (components.fragment !== undefined) {\n        uriTokens.push(\"#\");\n        uriTokens.push(components.fragment);\n    }\n    return uriTokens.join(\"\"); //merge tokens into a string\n}\n\nfunction resolveComponents(base, relative) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var skipNormalization = arguments[3];\n\n    var target = {};\n    if (!skipNormalization) {\n        base = parse(serialize(base, options), options); //normalize base components\n        relative = parse(serialize(relative, options), options); //normalize relative components\n    }\n    options = options || {};\n    if (!options.tolerant && relative.scheme) {\n        target.scheme = relative.scheme;\n        //target.authority = relative.authority;\n        target.userinfo = relative.userinfo;\n        target.host = relative.host;\n        target.port = relative.port;\n        target.path = removeDotSegments(relative.path || \"\");\n        target.query = relative.query;\n    } else {\n        if (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n            //target.authority = relative.authority;\n            target.userinfo = relative.userinfo;\n            target.host = relative.host;\n            target.port = relative.port;\n            target.path = removeDotSegments(relative.path || \"\");\n            target.query = relative.query;\n        } else {\n            if (!relative.path) {\n                target.path = base.path;\n                if (relative.query !== undefined) {\n                    target.query = relative.query;\n                } else {\n                    target.query = base.query;\n                }\n            } else {\n                if (relative.path.charAt(0) === \"/\") {\n                    target.path = removeDotSegments(relative.path);\n                } else {\n                    if ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n                        target.path = \"/\" + relative.path;\n                    } else if (!base.path) {\n                        target.path = relative.path;\n                    } else {\n                        target.path = base.path.slice(0, base.path.lastIndexOf(\"/\") + 1) + relative.path;\n                    }\n                    target.path = removeDotSegments(target.path);\n                }\n                target.query = relative.query;\n            }\n            //target.authority = base.authority;\n            target.userinfo = base.userinfo;\n            target.host = base.host;\n            target.port = base.port;\n        }\n        target.scheme = base.scheme;\n    }\n    target.fragment = relative.fragment;\n    return target;\n}\n\nfunction resolve(baseURI, relativeURI, options) {\n    var schemelessOptions = assign({ scheme: 'null' }, options);\n    return serialize(resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true), schemelessOptions);\n}\n\nfunction normalize(uri, options) {\n    if (typeof uri === \"string\") {\n        uri = serialize(parse(uri, options), options);\n    } else if (typeOf(uri) === \"object\") {\n        uri = parse(serialize(uri, options), options);\n    }\n    return uri;\n}\n\nfunction equal(uriA, uriB, options) {\n    if (typeof uriA === \"string\") {\n        uriA = serialize(parse(uriA, options), options);\n    } else if (typeOf(uriA) === \"object\") {\n        uriA = serialize(uriA, options);\n    }\n    if (typeof uriB === \"string\") {\n        uriB = serialize(parse(uriB, options), options);\n    } else if (typeOf(uriB) === \"object\") {\n        uriB = serialize(uriB, options);\n    }\n    return uriA === uriB;\n}\n\nfunction escapeComponent(str, options) {\n    return str && str.toString().replace(!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE, pctEncChar);\n}\n\nfunction unescapeComponent(str, options) {\n    return str && str.toString().replace(!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED, pctDecChars);\n}\n\nvar handler = {\n    scheme: \"http\",\n    domainHost: true,\n    parse: function parse(components, options) {\n        //report missing host\n        if (!components.host) {\n            components.error = components.error || \"HTTP URIs must have a host.\";\n        }\n        return components;\n    },\n    serialize: function serialize(components, options) {\n        var secure = String(components.scheme).toLowerCase() === \"https\";\n        //normalize the default port\n        if (components.port === (secure ? 443 : 80) || components.port === \"\") {\n            components.port = undefined;\n        }\n        //normalize the empty path\n        if (!components.path) {\n            components.path = \"/\";\n        }\n        //NOTE: We do not parse query strings for HTTP URIs\n        //as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n        //and not the HTTP spec.\n        return components;\n    }\n};\n\nvar handler$1 = {\n    scheme: \"https\",\n    domainHost: handler.domainHost,\n    parse: handler.parse,\n    serialize: handler.serialize\n};\n\nfunction isSecure(wsComponents) {\n    return typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === \"wss\";\n}\n//RFC 6455\nvar handler$2 = {\n    scheme: \"ws\",\n    domainHost: true,\n    parse: function parse(components, options) {\n        var wsComponents = components;\n        //indicate if the secure flag is set\n        wsComponents.secure = isSecure(wsComponents);\n        //construct resouce name\n        wsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '');\n        wsComponents.path = undefined;\n        wsComponents.query = undefined;\n        return wsComponents;\n    },\n    serialize: function serialize(wsComponents, options) {\n        //normalize the default port\n        if (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === \"\") {\n            wsComponents.port = undefined;\n        }\n        //ensure scheme matches secure flag\n        if (typeof wsComponents.secure === 'boolean') {\n            wsComponents.scheme = wsComponents.secure ? 'wss' : 'ws';\n            wsComponents.secure = undefined;\n        }\n        //reconstruct path from resource name\n        if (wsComponents.resourceName) {\n            var _wsComponents$resourc = wsComponents.resourceName.split('?'),\n                _wsComponents$resourc2 = slicedToArray(_wsComponents$resourc, 2),\n                path = _wsComponents$resourc2[0],\n                query = _wsComponents$resourc2[1];\n\n            wsComponents.path = path && path !== '/' ? path : undefined;\n            wsComponents.query = query;\n            wsComponents.resourceName = undefined;\n        }\n        //forbid fragment component\n        wsComponents.fragment = undefined;\n        return wsComponents;\n    }\n};\n\nvar handler$3 = {\n    scheme: \"wss\",\n    domainHost: handler$2.domainHost,\n    parse: handler$2.parse,\n    serialize: handler$2.serialize\n};\n\nvar O = {};\nvar isIRI = true;\n//RFC 3986\nvar UNRESERVED$$ = \"[A-Za-z0-9\\\\-\\\\.\\\\_\\\\~\" + (isIRI ? \"\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF\" : \"\") + \"]\";\nvar HEXDIG$$ = \"[0-9A-Fa-f]\"; //case-insensitive\nvar PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)); //expanded\n//RFC 5322, except these symbols as per RFC 6068: @ : / ? # [ ] & ; =\n//const ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\#\\\\$\\\\%\\\\&\\\\'\\\\*\\\\+\\\\-\\\\/\\\\=\\\\?\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QTEXT$$ = \"[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F]\";  //(%d1-8 / %d11-12 / %d14-31 / %d127)\n//const QTEXT$$ = merge(\"[\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]\", OBS_QTEXT$$);  //%d33 / %d35-91 / %d93-126 / obs-qtext\n//const VCHAR$$ = \"[\\\\x21-\\\\x7E]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QP$ = subexp(\"\\\\\\\\\" + merge(\"[\\\\x00\\\\x0D\\\\x0A]\", OBS_QTEXT$$));  //%d0 / CR / LF / obs-qtext\n//const FWS$ = subexp(subexp(WSP$$ + \"*\" + \"\\\\x0D\\\\x0A\") + \"?\" + WSP$$ + \"+\");\n//const QUOTED_PAIR$ = subexp(subexp(\"\\\\\\\\\" + subexp(VCHAR$$ + \"|\" + WSP$$)) + \"|\" + OBS_QP$);\n//const QUOTED_STRING$ = subexp('\\\\\"' + subexp(FWS$ + \"?\" + QCONTENT$) + \"*\" + FWS$ + \"?\" + '\\\\\"');\nvar ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\$\\\\%\\\\'\\\\*\\\\+\\\\-\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\nvar QTEXT$$ = \"[\\\\!\\\\$\\\\%\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\-\\\\.0-9\\\\<\\\\>A-Z\\\\x5E-\\\\x7E]\";\nvar VCHAR$$ = merge(QTEXT$$, \"[\\\\\\\"\\\\\\\\]\");\nvar SOME_DELIMS$$ = \"[\\\\!\\\\$\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\:\\\\@]\";\nvar UNRESERVED = new RegExp(UNRESERVED$$, \"g\");\nvar PCT_ENCODED = new RegExp(PCT_ENCODED$, \"g\");\nvar NOT_LOCAL_PART = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", '[\\\\\"]', VCHAR$$), \"g\");\nvar NOT_HFNAME = new RegExp(merge(\"[^]\", UNRESERVED$$, SOME_DELIMS$$), \"g\");\nvar NOT_HFVALUE = NOT_HFNAME;\nfunction decodeUnreserved(str) {\n    var decStr = pctDecChars(str);\n    return !decStr.match(UNRESERVED) ? str : decStr;\n}\nvar handler$4 = {\n    scheme: \"mailto\",\n    parse: function parse$$1(components, options) {\n        var mailtoComponents = components;\n        var to = mailtoComponents.to = mailtoComponents.path ? mailtoComponents.path.split(\",\") : [];\n        mailtoComponents.path = undefined;\n        if (mailtoComponents.query) {\n            var unknownHeaders = false;\n            var headers = {};\n            var hfields = mailtoComponents.query.split(\"&\");\n            for (var x = 0, xl = hfields.length; x < xl; ++x) {\n                var hfield = hfields[x].split(\"=\");\n                switch (hfield[0]) {\n                    case \"to\":\n                        var toAddrs = hfield[1].split(\",\");\n                        for (var _x = 0, _xl = toAddrs.length; _x < _xl; ++_x) {\n                            to.push(toAddrs[_x]);\n                        }\n                        break;\n                    case \"subject\":\n                        mailtoComponents.subject = unescapeComponent(hfield[1], options);\n                        break;\n                    case \"body\":\n                        mailtoComponents.body = unescapeComponent(hfield[1], options);\n                        break;\n                    default:\n                        unknownHeaders = true;\n                        headers[unescapeComponent(hfield[0], options)] = unescapeComponent(hfield[1], options);\n                        break;\n                }\n            }\n            if (unknownHeaders) mailtoComponents.headers = headers;\n        }\n        mailtoComponents.query = undefined;\n        for (var _x2 = 0, _xl2 = to.length; _x2 < _xl2; ++_x2) {\n            var addr = to[_x2].split(\"@\");\n            addr[0] = unescapeComponent(addr[0]);\n            if (!options.unicodeSupport) {\n                //convert Unicode IDN -> ASCII IDN\n                try {\n                    addr[1] = punycode.toASCII(unescapeComponent(addr[1], options).toLowerCase());\n                } catch (e) {\n                    mailtoComponents.error = mailtoComponents.error || \"Email address's domain name can not be converted to ASCII via punycode: \" + e;\n                }\n            } else {\n                addr[1] = unescapeComponent(addr[1], options).toLowerCase();\n            }\n            to[_x2] = addr.join(\"@\");\n        }\n        return mailtoComponents;\n    },\n    serialize: function serialize$$1(mailtoComponents, options) {\n        var components = mailtoComponents;\n        var to = toArray(mailtoComponents.to);\n        if (to) {\n            for (var x = 0, xl = to.length; x < xl; ++x) {\n                var toAddr = String(to[x]);\n                var atIdx = toAddr.lastIndexOf(\"@\");\n                var localPart = toAddr.slice(0, atIdx).replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_LOCAL_PART, pctEncChar);\n                var domain = toAddr.slice(atIdx + 1);\n                //convert IDN via punycode\n                try {\n                    domain = !options.iri ? punycode.toASCII(unescapeComponent(domain, options).toLowerCase()) : punycode.toUnicode(domain);\n                } catch (e) {\n                    components.error = components.error || \"Email address's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n                }\n                to[x] = localPart + \"@\" + domain;\n            }\n            components.path = to.join(\",\");\n        }\n        var headers = mailtoComponents.headers = mailtoComponents.headers || {};\n        if (mailtoComponents.subject) headers[\"subject\"] = mailtoComponents.subject;\n        if (mailtoComponents.body) headers[\"body\"] = mailtoComponents.body;\n        var fields = [];\n        for (var name in headers) {\n            if (headers[name] !== O[name]) {\n                fields.push(name.replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFNAME, pctEncChar) + \"=\" + headers[name].replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFVALUE, pctEncChar));\n            }\n        }\n        if (fields.length) {\n            components.query = fields.join(\"&\");\n        }\n        return components;\n    }\n};\n\nvar URN_PARSE = /^([^\\:]+)\\:(.*)/;\n//RFC 2141\nvar handler$5 = {\n    scheme: \"urn\",\n    parse: function parse$$1(components, options) {\n        var matches = components.path && components.path.match(URN_PARSE);\n        var urnComponents = components;\n        if (matches) {\n            var scheme = options.scheme || urnComponents.scheme || \"urn\";\n            var nid = matches[1].toLowerCase();\n            var nss = matches[2];\n            var urnScheme = scheme + \":\" + (options.nid || nid);\n            var schemeHandler = SCHEMES[urnScheme];\n            urnComponents.nid = nid;\n            urnComponents.nss = nss;\n            urnComponents.path = undefined;\n            if (schemeHandler) {\n                urnComponents = schemeHandler.parse(urnComponents, options);\n            }\n        } else {\n            urnComponents.error = urnComponents.error || \"URN can not be parsed.\";\n        }\n        return urnComponents;\n    },\n    serialize: function serialize$$1(urnComponents, options) {\n        var scheme = options.scheme || urnComponents.scheme || \"urn\";\n        var nid = urnComponents.nid;\n        var urnScheme = scheme + \":\" + (options.nid || nid);\n        var schemeHandler = SCHEMES[urnScheme];\n        if (schemeHandler) {\n            urnComponents = schemeHandler.serialize(urnComponents, options);\n        }\n        var uriComponents = urnComponents;\n        var nss = urnComponents.nss;\n        uriComponents.path = (nid || options.nid) + \":\" + nss;\n        return uriComponents;\n    }\n};\n\nvar UUID = /^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/;\n//RFC 4122\nvar handler$6 = {\n    scheme: \"urn:uuid\",\n    parse: function parse(urnComponents, options) {\n        var uuidComponents = urnComponents;\n        uuidComponents.uuid = uuidComponents.nss;\n        uuidComponents.nss = undefined;\n        if (!options.tolerant && (!uuidComponents.uuid || !uuidComponents.uuid.match(UUID))) {\n            uuidComponents.error = uuidComponents.error || \"UUID is not valid.\";\n        }\n        return uuidComponents;\n    },\n    serialize: function serialize(uuidComponents, options) {\n        var urnComponents = uuidComponents;\n        //normalize UUID\n        urnComponents.nss = (uuidComponents.uuid || \"\").toLowerCase();\n        return urnComponents;\n    }\n};\n\nSCHEMES[handler.scheme] = handler;\nSCHEMES[handler$1.scheme] = handler$1;\nSCHEMES[handler$2.scheme] = handler$2;\nSCHEMES[handler$3.scheme] = handler$3;\nSCHEMES[handler$4.scheme] = handler$4;\nSCHEMES[handler$5.scheme] = handler$5;\nSCHEMES[handler$6.scheme] = handler$6;\n\nexports.SCHEMES = SCHEMES;\nexports.pctEncChar = pctEncChar;\nexports.pctDecChars = pctDecChars;\nexports.parse = parse;\nexports.removeDotSegments = removeDotSegments;\nexports.serialize = serialize;\nexports.resolveComponents = resolveComponents;\nexports.resolve = resolve;\nexports.normalize = normalize;\nexports.equal = equal;\nexports.escapeComponent = escapeComponent;\nexports.unescapeComponent = unescapeComponent;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=uri.all.js.map\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","'use strict';\n\n// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nmodule.exports = function ucs2length(str) {\n  var length = 0\n    , len = str.length\n    , pos = 0\n    , value;\n  while (pos < len) {\n    length++;\n    value = str.charCodeAt(pos++);\n    if (value >= 0xD800 && value <= 0xDBFF && pos < len) {\n      // high surrogate, and there is a next character\n      value = str.charCodeAt(pos);\n      if ((value & 0xFC00) == 0xDC00) pos++; // low surrogate\n    }\n  }\n  return length;\n};\n","'use strict';\n\n\nmodule.exports = {\n  copy: copy,\n  checkDataType: checkDataType,\n  checkDataTypes: checkDataTypes,\n  coerceToTypes: coerceToTypes,\n  toHash: toHash,\n  getProperty: getProperty,\n  escapeQuotes: escapeQuotes,\n  equal: require('fast-deep-equal'),\n  ucs2length: require('./ucs2length'),\n  varOccurences: varOccurences,\n  varReplace: varReplace,\n  schemaHasRules: schemaHasRules,\n  schemaHasRulesExcept: schemaHasRulesExcept,\n  schemaUnknownRules: schemaUnknownRules,\n  toQuotedString: toQuotedString,\n  getPathExpr: getPathExpr,\n  getPath: getPath,\n  getData: getData,\n  unescapeFragment: unescapeFragment,\n  unescapeJsonPointer: unescapeJsonPointer,\n  escapeFragment: escapeFragment,\n  escapeJsonPointer: escapeJsonPointer\n};\n\n\nfunction copy(o, to) {\n  to = to || {};\n  for (var key in o) to[key] = o[key];\n  return to;\n}\n\n\nfunction checkDataType(dataType, data, strictNumbers, negate) {\n  var EQUAL = negate ? ' !== ' : ' === '\n    , AND = negate ? ' || ' : ' && '\n    , OK = negate ? '!' : ''\n    , NOT = negate ? '' : '!';\n  switch (dataType) {\n    case 'null': return data + EQUAL + 'null';\n    case 'array': return OK + 'Array.isArray(' + data + ')';\n    case 'object': return '(' + OK + data + AND +\n                          'typeof ' + data + EQUAL + '\"object\"' + AND +\n                          NOT + 'Array.isArray(' + data + '))';\n    case 'integer': return '(typeof ' + data + EQUAL + '\"number\"' + AND +\n                           NOT + '(' + data + ' % 1)' +\n                           AND + data + EQUAL + data +\n                           (strictNumbers ? (AND + OK + 'isFinite(' + data + ')') : '') + ')';\n    case 'number': return '(typeof ' + data + EQUAL + '\"' + dataType + '\"' +\n                          (strictNumbers ? (AND + OK + 'isFinite(' + data + ')') : '') + ')';\n    default: return 'typeof ' + data + EQUAL + '\"' + dataType + '\"';\n  }\n}\n\n\nfunction checkDataTypes(dataTypes, data, strictNumbers) {\n  switch (dataTypes.length) {\n    case 1: return checkDataType(dataTypes[0], data, strictNumbers, true);\n    default:\n      var code = '';\n      var types = toHash(dataTypes);\n      if (types.array && types.object) {\n        code = types.null ? '(': '(!' + data + ' || ';\n        code += 'typeof ' + data + ' !== \"object\")';\n        delete types.null;\n        delete types.array;\n        delete types.object;\n      }\n      if (types.number) delete types.integer;\n      for (var t in types)\n        code += (code ? ' && ' : '' ) + checkDataType(t, data, strictNumbers, true);\n\n      return code;\n  }\n}\n\n\nvar COERCE_TO_TYPES = toHash([ 'string', 'number', 'integer', 'boolean', 'null' ]);\nfunction coerceToTypes(optionCoerceTypes, dataTypes) {\n  if (Array.isArray(dataTypes)) {\n    var types = [];\n    for (var i=0; i<dataTypes.length; i++) {\n      var t = dataTypes[i];\n      if (COERCE_TO_TYPES[t]) types[types.length] = t;\n      else if (optionCoerceTypes === 'array' && t === 'array') types[types.length] = t;\n    }\n    if (types.length) return types;\n  } else if (COERCE_TO_TYPES[dataTypes]) {\n    return [dataTypes];\n  } else if (optionCoerceTypes === 'array' && dataTypes === 'array') {\n    return ['array'];\n  }\n}\n\n\nfunction toHash(arr) {\n  var hash = {};\n  for (var i=0; i<arr.length; i++) hash[arr[i]] = true;\n  return hash;\n}\n\n\nvar IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;\nvar SINGLE_QUOTE = /'|\\\\/g;\nfunction getProperty(key) {\n  return typeof key == 'number'\n          ? '[' + key + ']'\n          : IDENTIFIER.test(key)\n            ? '.' + key\n            : \"['\" + escapeQuotes(key) + \"']\";\n}\n\n\nfunction escapeQuotes(str) {\n  return str.replace(SINGLE_QUOTE, '\\\\$&')\n            .replace(/\\n/g, '\\\\n')\n            .replace(/\\r/g, '\\\\r')\n            .replace(/\\f/g, '\\\\f')\n            .replace(/\\t/g, '\\\\t');\n}\n\n\nfunction varOccurences(str, dataVar) {\n  dataVar += '[^0-9]';\n  var matches = str.match(new RegExp(dataVar, 'g'));\n  return matches ? matches.length : 0;\n}\n\n\nfunction varReplace(str, dataVar, expr) {\n  dataVar += '([^0-9])';\n  expr = expr.replace(/\\$/g, '$$$$');\n  return str.replace(new RegExp(dataVar, 'g'), expr + '$1');\n}\n\n\nfunction schemaHasRules(schema, rules) {\n  if (typeof schema == 'boolean') return !schema;\n  for (var key in schema) if (rules[key]) return true;\n}\n\n\nfunction schemaHasRulesExcept(schema, rules, exceptKeyword) {\n  if (typeof schema == 'boolean') return !schema && exceptKeyword != 'not';\n  for (var key in schema) if (key != exceptKeyword && rules[key]) return true;\n}\n\n\nfunction schemaUnknownRules(schema, rules) {\n  if (typeof schema == 'boolean') return;\n  for (var key in schema) if (!rules[key]) return key;\n}\n\n\nfunction toQuotedString(str) {\n  return '\\'' + escapeQuotes(str) + '\\'';\n}\n\n\nfunction getPathExpr(currentPath, expr, jsonPointers, isNumber) {\n  var path = jsonPointers // false by default\n              ? '\\'/\\' + ' + expr + (isNumber ? '' : '.replace(/~/g, \\'~0\\').replace(/\\\\//g, \\'~1\\')')\n              : (isNumber ? '\\'[\\' + ' + expr + ' + \\']\\'' : '\\'[\\\\\\'\\' + ' + expr + ' + \\'\\\\\\']\\'');\n  return joinPaths(currentPath, path);\n}\n\n\nfunction getPath(currentPath, prop, jsonPointers) {\n  var path = jsonPointers // false by default\n              ? toQuotedString('/' + escapeJsonPointer(prop))\n              : toQuotedString(getProperty(prop));\n  return joinPaths(currentPath, path);\n}\n\n\nvar JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/;\nvar RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/;\nfunction getData($data, lvl, paths) {\n  var up, jsonPointer, data, matches;\n  if ($data === '') return 'rootData';\n  if ($data[0] == '/') {\n    if (!JSON_POINTER.test($data)) throw new Error('Invalid JSON-pointer: ' + $data);\n    jsonPointer = $data;\n    data = 'rootData';\n  } else {\n    matches = $data.match(RELATIVE_JSON_POINTER);\n    if (!matches) throw new Error('Invalid JSON-pointer: ' + $data);\n    up = +matches[1];\n    jsonPointer = matches[2];\n    if (jsonPointer == '#') {\n      if (up >= lvl) throw new Error('Cannot access property/index ' + up + ' levels up, current level is ' + lvl);\n      return paths[lvl - up];\n    }\n\n    if (up > lvl) throw new Error('Cannot access data ' + up + ' levels up, current level is ' + lvl);\n    data = 'data' + ((lvl - up) || '');\n    if (!jsonPointer) return data;\n  }\n\n  var expr = data;\n  var segments = jsonPointer.split('/');\n  for (var i=0; i<segments.length; i++) {\n    var segment = segments[i];\n    if (segment) {\n      data += getProperty(unescapeJsonPointer(segment));\n      expr += ' && ' + data;\n    }\n  }\n  return expr;\n}\n\n\nfunction joinPaths (a, b) {\n  if (a == '\"\"') return b;\n  return (a + ' + ' + b).replace(/([^\\\\])' \\+ '/g, '$1');\n}\n\n\nfunction unescapeFragment(str) {\n  return unescapeJsonPointer(decodeURIComponent(str));\n}\n\n\nfunction escapeFragment(str) {\n  return encodeURIComponent(escapeJsonPointer(str));\n}\n\n\nfunction escapeJsonPointer(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n\n\nfunction unescapeJsonPointer(str) {\n  return str.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n","'use strict';\n\nvar util = require('./util');\n\nmodule.exports = SchemaObject;\n\nfunction SchemaObject(obj) {\n  util.copy(obj, this);\n}\n","'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n","'use strict';\n\nvar URI = require('uri-js')\n  , equal = require('fast-deep-equal')\n  , util = require('./util')\n  , SchemaObject = require('./schema_obj')\n  , traverse = require('json-schema-traverse');\n\nmodule.exports = resolve;\n\nresolve.normalizeId = normalizeId;\nresolve.fullPath = getFullPath;\nresolve.url = resolveUrl;\nresolve.ids = resolveIds;\nresolve.inlineRef = inlineRef;\nresolve.schema = resolveSchema;\n\n/**\n * [resolve and compile the references ($ref)]\n * @this   Ajv\n * @param  {Function} compile reference to schema compilation funciton (localCompile)\n * @param  {Object} root object with information about the root schema for the current schema\n * @param  {String} ref reference to resolve\n * @return {Object|Function} schema object (if the schema can be inlined) or validation function\n */\nfunction resolve(compile, root, ref) {\n  /* jshint validthis: true */\n  var refVal = this._refs[ref];\n  if (typeof refVal == 'string') {\n    if (this._refs[refVal]) refVal = this._refs[refVal];\n    else return resolve.call(this, compile, root, refVal);\n  }\n\n  refVal = refVal || this._schemas[ref];\n  if (refVal instanceof SchemaObject) {\n    return inlineRef(refVal.schema, this._opts.inlineRefs)\n            ? refVal.schema\n            : refVal.validate || this._compile(refVal);\n  }\n\n  var res = resolveSchema.call(this, root, ref);\n  var schema, v, baseId;\n  if (res) {\n    schema = res.schema;\n    root = res.root;\n    baseId = res.baseId;\n  }\n\n  if (schema instanceof SchemaObject) {\n    v = schema.validate || compile.call(this, schema.schema, root, undefined, baseId);\n  } else if (schema !== undefined) {\n    v = inlineRef(schema, this._opts.inlineRefs)\n        ? schema\n        : compile.call(this, schema, root, undefined, baseId);\n  }\n\n  return v;\n}\n\n\n/**\n * Resolve schema, its root and baseId\n * @this Ajv\n * @param  {Object} root root object with properties schema, refVal, refs\n * @param  {String} ref  reference to resolve\n * @return {Object} object with properties schema, root, baseId\n */\nfunction resolveSchema(root, ref) {\n  /* jshint validthis: true */\n  var p = URI.parse(ref)\n    , refPath = _getFullPath(p)\n    , baseId = getFullPath(this._getId(root.schema));\n  if (Object.keys(root.schema).length === 0 || refPath !== baseId) {\n    var id = normalizeId(refPath);\n    var refVal = this._refs[id];\n    if (typeof refVal == 'string') {\n      return resolveRecursive.call(this, root, refVal, p);\n    } else if (refVal instanceof SchemaObject) {\n      if (!refVal.validate) this._compile(refVal);\n      root = refVal;\n    } else {\n      refVal = this._schemas[id];\n      if (refVal instanceof SchemaObject) {\n        if (!refVal.validate) this._compile(refVal);\n        if (id == normalizeId(ref))\n          return { schema: refVal, root: root, baseId: baseId };\n        root = refVal;\n      } else {\n        return;\n      }\n    }\n    if (!root.schema) return;\n    baseId = getFullPath(this._getId(root.schema));\n  }\n  return getJsonPointer.call(this, p, baseId, root.schema, root);\n}\n\n\n/* @this Ajv */\nfunction resolveRecursive(root, ref, parsedRef) {\n  /* jshint validthis: true */\n  var res = resolveSchema.call(this, root, ref);\n  if (res) {\n    var schema = res.schema;\n    var baseId = res.baseId;\n    root = res.root;\n    var id = this._getId(schema);\n    if (id) baseId = resolveUrl(baseId, id);\n    return getJsonPointer.call(this, parsedRef, baseId, schema, root);\n  }\n}\n\n\nvar PREVENT_SCOPE_CHANGE = util.toHash(['properties', 'patternProperties', 'enum', 'dependencies', 'definitions']);\n/* @this Ajv */\nfunction getJsonPointer(parsedRef, baseId, schema, root) {\n  /* jshint validthis: true */\n  parsedRef.fragment = parsedRef.fragment || '';\n  if (parsedRef.fragment.slice(0,1) != '/') return;\n  var parts = parsedRef.fragment.split('/');\n\n  for (var i = 1; i < parts.length; i++) {\n    var part = parts[i];\n    if (part) {\n      part = util.unescapeFragment(part);\n      schema = schema[part];\n      if (schema === undefined) break;\n      var id;\n      if (!PREVENT_SCOPE_CHANGE[part]) {\n        id = this._getId(schema);\n        if (id) baseId = resolveUrl(baseId, id);\n        if (schema.$ref) {\n          var $ref = resolveUrl(baseId, schema.$ref);\n          var res = resolveSchema.call(this, root, $ref);\n          if (res) {\n            schema = res.schema;\n            root = res.root;\n            baseId = res.baseId;\n          }\n        }\n      }\n    }\n  }\n  if (schema !== undefined && schema !== root.schema)\n    return { schema: schema, root: root, baseId: baseId };\n}\n\n\nvar SIMPLE_INLINED = util.toHash([\n  'type', 'format', 'pattern',\n  'maxLength', 'minLength',\n  'maxProperties', 'minProperties',\n  'maxItems', 'minItems',\n  'maximum', 'minimum',\n  'uniqueItems', 'multipleOf',\n  'required', 'enum'\n]);\nfunction inlineRef(schema, limit) {\n  if (limit === false) return false;\n  if (limit === undefined || limit === true) return checkNoRef(schema);\n  else if (limit) return countKeys(schema) <= limit;\n}\n\n\nfunction checkNoRef(schema) {\n  var item;\n  if (Array.isArray(schema)) {\n    for (var i=0; i<schema.length; i++) {\n      item = schema[i];\n      if (typeof item == 'object' && !checkNoRef(item)) return false;\n    }\n  } else {\n    for (var key in schema) {\n      if (key == '$ref') return false;\n      item = schema[key];\n      if (typeof item == 'object' && !checkNoRef(item)) return false;\n    }\n  }\n  return true;\n}\n\n\nfunction countKeys(schema) {\n  var count = 0, item;\n  if (Array.isArray(schema)) {\n    for (var i=0; i<schema.length; i++) {\n      item = schema[i];\n      if (typeof item == 'object') count += countKeys(item);\n      if (count == Infinity) return Infinity;\n    }\n  } else {\n    for (var key in schema) {\n      if (key == '$ref') return Infinity;\n      if (SIMPLE_INLINED[key]) {\n        count++;\n      } else {\n        item = schema[key];\n        if (typeof item == 'object') count += countKeys(item) + 1;\n        if (count == Infinity) return Infinity;\n      }\n    }\n  }\n  return count;\n}\n\n\nfunction getFullPath(id, normalize) {\n  if (normalize !== false) id = normalizeId(id);\n  var p = URI.parse(id);\n  return _getFullPath(p);\n}\n\n\nfunction _getFullPath(p) {\n  return URI.serialize(p).split('#')[0] + '#';\n}\n\n\nvar TRAILING_SLASH_HASH = /#\\/?$/;\nfunction normalizeId(id) {\n  return id ? id.replace(TRAILING_SLASH_HASH, '') : '';\n}\n\n\nfunction resolveUrl(baseId, id) {\n  id = normalizeId(id);\n  return URI.resolve(baseId, id);\n}\n\n\n/* @this Ajv */\nfunction resolveIds(schema) {\n  var schemaId = normalizeId(this._getId(schema));\n  var baseIds = {'': schemaId};\n  var fullPaths = {'': getFullPath(schemaId, false)};\n  var localRefs = {};\n  var self = this;\n\n  traverse(schema, {allKeys: true}, function(sch, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n    if (jsonPtr === '') return;\n    var id = self._getId(sch);\n    var baseId = baseIds[parentJsonPtr];\n    var fullPath = fullPaths[parentJsonPtr] + '/' + parentKeyword;\n    if (keyIndex !== undefined)\n      fullPath += '/' + (typeof keyIndex == 'number' ? keyIndex : util.escapeFragment(keyIndex));\n\n    if (typeof id == 'string') {\n      id = baseId = normalizeId(baseId ? URI.resolve(baseId, id) : id);\n\n      var refVal = self._refs[id];\n      if (typeof refVal == 'string') refVal = self._refs[refVal];\n      if (refVal && refVal.schema) {\n        if (!equal(sch, refVal.schema))\n          throw new Error('id \"' + id + '\" resolves to more than one schema');\n      } else if (id != normalizeId(fullPath)) {\n        if (id[0] == '#') {\n          if (localRefs[id] && !equal(sch, localRefs[id]))\n            throw new Error('id \"' + id + '\" resolves to more than one schema');\n          localRefs[id] = sch;\n        } else {\n          self._refs[id] = fullPath;\n        }\n      }\n    }\n    baseIds[jsonPtr] = baseId;\n    fullPaths[jsonPtr] = fullPath;\n  });\n\n  return localRefs;\n}\n","'use strict';\n\nvar resolve = require('./resolve');\n\nmodule.exports = {\n  Validation: errorSubclass(ValidationError),\n  MissingRef: errorSubclass(MissingRefError)\n};\n\n\nfunction ValidationError(errors) {\n  this.message = 'validation failed';\n  this.errors = errors;\n  this.ajv = this.validation = true;\n}\n\n\nMissingRefError.message = function (baseId, ref) {\n  return 'can\\'t resolve reference ' + ref + ' from id ' + baseId;\n};\n\n\nfunction MissingRefError(baseId, ref, message) {\n  this.message = message || MissingRefError.message(baseId, ref);\n  this.missingRef = resolve.url(baseId, ref);\n  this.missingSchema = resolve.normalizeId(resolve.fullPath(this.missingRef));\n}\n\n\nfunction errorSubclass(Subclass) {\n  Subclass.prototype = Object.create(Error.prototype);\n  Subclass.prototype.constructor = Subclass;\n  return Subclass;\n}\n","'use strict';\n\nmodule.exports = function (data, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (node) {\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        if (node === undefined) return;\n        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';\n        if (typeof node !== 'object') return JSON.stringify(node);\n\n        var i, out;\n        if (Array.isArray(node)) {\n            out = '[';\n            for (i = 0; i < node.length; i++) {\n                if (i) out += ',';\n                out += stringify(node[i]) || 'null';\n            }\n            return out + ']';\n        }\n\n        if (node === null) return 'null';\n\n        if (seen.indexOf(node) !== -1) {\n            if (cycles) return JSON.stringify('__cycle__');\n            throw new TypeError('Converting circular structure to JSON');\n        }\n\n        var seenIndex = seen.push(node) - 1;\n        var keys = Object.keys(node).sort(cmp && cmp(node));\n        out = '';\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var value = stringify(node[key]);\n\n            if (!value) continue;\n            if (out) out += ',';\n            out += JSON.stringify(key) + ':' + value;\n        }\n        seen.splice(seenIndex, 1);\n        return '{' + out + '}';\n    })(data);\n};\n","'use strict';\nmodule.exports = function generate_validate(it, $keyword, $ruleType) {\n  var out = '';\n  var $async = it.schema.$async === true,\n    $refKeywords = it.util.schemaHasRulesExcept(it.schema, it.RULES.all, '$ref'),\n    $id = it.self._getId(it.schema);\n  if (it.opts.strictKeywords) {\n    var $unknownKwd = it.util.schemaUnknownRules(it.schema, it.RULES.keywords);\n    if ($unknownKwd) {\n      var $keywordsMsg = 'unknown keyword: ' + $unknownKwd;\n      if (it.opts.strictKeywords === 'log') it.logger.warn($keywordsMsg);\n      else throw new Error($keywordsMsg);\n    }\n  }\n  if (it.isTop) {\n    out += ' var validate = ';\n    if ($async) {\n      it.async = true;\n      out += 'async ';\n    }\n    out += 'function(data, dataPath, parentData, parentDataProperty, rootData) { \\'use strict\\'; ';\n    if ($id && (it.opts.sourceCode || it.opts.processCode)) {\n      out += ' ' + ('/\\*# sourceURL=' + $id + ' */') + ' ';\n    }\n  }\n  if (typeof it.schema == 'boolean' || !($refKeywords || it.schema.$ref)) {\n    var $keyword = 'false schema';\n    var $lvl = it.level;\n    var $dataLvl = it.dataLevel;\n    var $schema = it.schema[$keyword];\n    var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n    var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n    var $breakOnError = !it.opts.allErrors;\n    var $errorKeyword;\n    var $data = 'data' + ($dataLvl || '');\n    var $valid = 'valid' + $lvl;\n    if (it.schema === false) {\n      if (it.isTop) {\n        $breakOnError = true;\n      } else {\n        out += ' var ' + ($valid) + ' = false; ';\n      }\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'false schema') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'boolean schema is false\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + (__err) + ']); ';\n        } else {\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n    } else {\n      if (it.isTop) {\n        if ($async) {\n          out += ' return data; ';\n        } else {\n          out += ' validate.errors = null; return true; ';\n        }\n      } else {\n        out += ' var ' + ($valid) + ' = true; ';\n      }\n    }\n    if (it.isTop) {\n      out += ' }; return validate; ';\n    }\n    return out;\n  }\n  if (it.isTop) {\n    var $top = it.isTop,\n      $lvl = it.level = 0,\n      $dataLvl = it.dataLevel = 0,\n      $data = 'data';\n    it.rootId = it.resolve.fullPath(it.self._getId(it.root.schema));\n    it.baseId = it.baseId || it.rootId;\n    delete it.isTop;\n    it.dataPathArr = [\"\"];\n    if (it.schema.default !== undefined && it.opts.useDefaults && it.opts.strictDefaults) {\n      var $defaultMsg = 'default is ignored in the schema root';\n      if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);\n      else throw new Error($defaultMsg);\n    }\n    out += ' var vErrors = null; ';\n    out += ' var errors = 0;     ';\n    out += ' if (rootData === undefined) rootData = data; ';\n  } else {\n    var $lvl = it.level,\n      $dataLvl = it.dataLevel,\n      $data = 'data' + ($dataLvl || '');\n    if ($id) it.baseId = it.resolve.url(it.baseId, $id);\n    if ($async && !it.async) throw new Error('async schema in sync schema');\n    out += ' var errs_' + ($lvl) + ' = errors;';\n  }\n  var $valid = 'valid' + $lvl,\n    $breakOnError = !it.opts.allErrors,\n    $closingBraces1 = '',\n    $closingBraces2 = '';\n  var $errorKeyword;\n  var $typeSchema = it.schema.type,\n    $typeIsArray = Array.isArray($typeSchema);\n  if ($typeSchema && it.opts.nullable && it.schema.nullable === true) {\n    if ($typeIsArray) {\n      if ($typeSchema.indexOf('null') == -1) $typeSchema = $typeSchema.concat('null');\n    } else if ($typeSchema != 'null') {\n      $typeSchema = [$typeSchema, 'null'];\n      $typeIsArray = true;\n    }\n  }\n  if ($typeIsArray && $typeSchema.length == 1) {\n    $typeSchema = $typeSchema[0];\n    $typeIsArray = false;\n  }\n  if (it.schema.$ref && $refKeywords) {\n    if (it.opts.extendRefs == 'fail') {\n      throw new Error('$ref: validation keywords used in schema at path \"' + it.errSchemaPath + '\" (see option extendRefs)');\n    } else if (it.opts.extendRefs !== true) {\n      $refKeywords = false;\n      it.logger.warn('$ref: keywords ignored in schema at path \"' + it.errSchemaPath + '\"');\n    }\n  }\n  if (it.schema.$comment && it.opts.$comment) {\n    out += ' ' + (it.RULES.all.$comment.code(it, '$comment'));\n  }\n  if ($typeSchema) {\n    if (it.opts.coerceTypes) {\n      var $coerceToTypes = it.util.coerceToTypes(it.opts.coerceTypes, $typeSchema);\n    }\n    var $rulesGroup = it.RULES.types[$typeSchema];\n    if ($coerceToTypes || $typeIsArray || $rulesGroup === true || ($rulesGroup && !$shouldUseGroup($rulesGroup))) {\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type';\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type',\n        $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';\n      out += ' if (' + (it.util[$method]($typeSchema, $data, it.opts.strictNumbers, true)) + ') { ';\n      if ($coerceToTypes) {\n        var $dataType = 'dataType' + $lvl,\n          $coerced = 'coerced' + $lvl;\n        out += ' var ' + ($dataType) + ' = typeof ' + ($data) + '; var ' + ($coerced) + ' = undefined; ';\n        if (it.opts.coerceTypes == 'array') {\n          out += ' if (' + ($dataType) + ' == \\'object\\' && Array.isArray(' + ($data) + ') && ' + ($data) + '.length == 1) { ' + ($data) + ' = ' + ($data) + '[0]; ' + ($dataType) + ' = typeof ' + ($data) + '; if (' + (it.util.checkDataType(it.schema.type, $data, it.opts.strictNumbers)) + ') ' + ($coerced) + ' = ' + ($data) + '; } ';\n        }\n        out += ' if (' + ($coerced) + ' !== undefined) ; ';\n        var arr1 = $coerceToTypes;\n        if (arr1) {\n          var $type, $i = -1,\n            l1 = arr1.length - 1;\n          while ($i < l1) {\n            $type = arr1[$i += 1];\n            if ($type == 'string') {\n              out += ' else if (' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\') ' + ($coerced) + ' = \\'\\' + ' + ($data) + '; else if (' + ($data) + ' === null) ' + ($coerced) + ' = \\'\\'; ';\n            } else if ($type == 'number' || $type == 'integer') {\n              out += ' else if (' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' === null || (' + ($dataType) + ' == \\'string\\' && ' + ($data) + ' && ' + ($data) + ' == +' + ($data) + ' ';\n              if ($type == 'integer') {\n                out += ' && !(' + ($data) + ' % 1)';\n              }\n              out += ')) ' + ($coerced) + ' = +' + ($data) + '; ';\n            } else if ($type == 'boolean') {\n              out += ' else if (' + ($data) + ' === \\'false\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === null) ' + ($coerced) + ' = false; else if (' + ($data) + ' === \\'true\\' || ' + ($data) + ' === 1) ' + ($coerced) + ' = true; ';\n            } else if ($type == 'null') {\n              out += ' else if (' + ($data) + ' === \\'\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === false) ' + ($coerced) + ' = null; ';\n            } else if (it.opts.coerceTypes == 'array' && $type == 'array') {\n              out += ' else if (' + ($dataType) + ' == \\'string\\' || ' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' == null) ' + ($coerced) + ' = [' + ($data) + ']; ';\n            }\n          }\n        }\n        out += ' else {   ';\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + ($typeSchema.join(\",\"));\n            } else {\n              out += '' + ($typeSchema);\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } if (' + ($coerced) + ' !== undefined) {  ';\n        var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n          $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n        out += ' ' + ($data) + ' = ' + ($coerced) + '; ';\n        if (!$dataLvl) {\n          out += 'if (' + ($parentData) + ' !== undefined)';\n        }\n        out += ' ' + ($parentData) + '[' + ($parentDataProperty) + '] = ' + ($coerced) + '; } ';\n      } else {\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + ($typeSchema.join(\",\"));\n            } else {\n              out += '' + ($typeSchema);\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n      }\n      out += ' } ';\n    }\n  }\n  if (it.schema.$ref && !$refKeywords) {\n    out += ' ' + (it.RULES.all.$ref.code(it, '$ref')) + ' ';\n    if ($breakOnError) {\n      out += ' } if (errors === ';\n      if ($top) {\n        out += '0';\n      } else {\n        out += 'errs_' + ($lvl);\n      }\n      out += ') { ';\n      $closingBraces2 += '}';\n    }\n  } else {\n    var arr2 = it.RULES;\n    if (arr2) {\n      var $rulesGroup, i2 = -1,\n        l2 = arr2.length - 1;\n      while (i2 < l2) {\n        $rulesGroup = arr2[i2 += 1];\n        if ($shouldUseGroup($rulesGroup)) {\n          if ($rulesGroup.type) {\n            out += ' if (' + (it.util.checkDataType($rulesGroup.type, $data, it.opts.strictNumbers)) + ') { ';\n          }\n          if (it.opts.useDefaults) {\n            if ($rulesGroup.type == 'object' && it.schema.properties) {\n              var $schema = it.schema.properties,\n                $schemaKeys = Object.keys($schema);\n              var arr3 = $schemaKeys;\n              if (arr3) {\n                var $propertyKey, i3 = -1,\n                  l3 = arr3.length - 1;\n                while (i3 < l3) {\n                  $propertyKey = arr3[i3 += 1];\n                  var $sch = $schema[$propertyKey];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + it.util.getProperty($propertyKey);\n                    if (it.compositeRule) {\n                      if (it.opts.strictDefaults) {\n                        var $defaultMsg = 'default is ignored for: ' + $passData;\n                        if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);\n                        else throw new Error($defaultMsg);\n                      }\n                    } else {\n                      out += ' if (' + ($passData) + ' === undefined ';\n                      if (it.opts.useDefaults == 'empty') {\n                        out += ' || ' + ($passData) + ' === null || ' + ($passData) + ' === \\'\\' ';\n                      }\n                      out += ' ) ' + ($passData) + ' = ';\n                      if (it.opts.useDefaults == 'shared') {\n                        out += ' ' + (it.useDefault($sch.default)) + ' ';\n                      } else {\n                        out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                      }\n                      out += '; ';\n                    }\n                  }\n                }\n              }\n            } else if ($rulesGroup.type == 'array' && Array.isArray(it.schema.items)) {\n              var arr4 = it.schema.items;\n              if (arr4) {\n                var $sch, $i = -1,\n                  l4 = arr4.length - 1;\n                while ($i < l4) {\n                  $sch = arr4[$i += 1];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + '[' + $i + ']';\n                    if (it.compositeRule) {\n                      if (it.opts.strictDefaults) {\n                        var $defaultMsg = 'default is ignored for: ' + $passData;\n                        if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);\n                        else throw new Error($defaultMsg);\n                      }\n                    } else {\n                      out += ' if (' + ($passData) + ' === undefined ';\n                      if (it.opts.useDefaults == 'empty') {\n                        out += ' || ' + ($passData) + ' === null || ' + ($passData) + ' === \\'\\' ';\n                      }\n                      out += ' ) ' + ($passData) + ' = ';\n                      if (it.opts.useDefaults == 'shared') {\n                        out += ' ' + (it.useDefault($sch.default)) + ' ';\n                      } else {\n                        out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                      }\n                      out += '; ';\n                    }\n                  }\n                }\n              }\n            }\n          }\n          var arr5 = $rulesGroup.rules;\n          if (arr5) {\n            var $rule, i5 = -1,\n              l5 = arr5.length - 1;\n            while (i5 < l5) {\n              $rule = arr5[i5 += 1];\n              if ($shouldUseRule($rule)) {\n                var $code = $rule.code(it, $rule.keyword, $rulesGroup.type);\n                if ($code) {\n                  out += ' ' + ($code) + ' ';\n                  if ($breakOnError) {\n                    $closingBraces1 += '}';\n                  }\n                }\n              }\n            }\n          }\n          if ($breakOnError) {\n            out += ' ' + ($closingBraces1) + ' ';\n            $closingBraces1 = '';\n          }\n          if ($rulesGroup.type) {\n            out += ' } ';\n            if ($typeSchema && $typeSchema === $rulesGroup.type && !$coerceToTypes) {\n              out += ' else { ';\n              var $schemaPath = it.schemaPath + '.type',\n                $errSchemaPath = it.errSchemaPath + '/type';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n                if ($typeIsArray) {\n                  out += '' + ($typeSchema.join(\",\"));\n                } else {\n                  out += '' + ($typeSchema);\n                }\n                out += '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should be ';\n                  if ($typeIsArray) {\n                    out += '' + ($typeSchema.join(\",\"));\n                  } else {\n                    out += '' + ($typeSchema);\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) {\n                /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              out += ' } ';\n            }\n          }\n          if ($breakOnError) {\n            out += ' if (errors === ';\n            if ($top) {\n              out += '0';\n            } else {\n              out += 'errs_' + ($lvl);\n            }\n            out += ') { ';\n            $closingBraces2 += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces2) + ' ';\n  }\n  if ($top) {\n    if ($async) {\n      out += ' if (errors === 0) return data;           ';\n      out += ' else throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; ';\n      out += ' return errors === 0;       ';\n    }\n    out += ' }; return validate;';\n  } else {\n    out += ' var ' + ($valid) + ' = errors === errs_' + ($lvl) + ';';\n  }\n\n  function $shouldUseGroup($rulesGroup) {\n    var rules = $rulesGroup.rules;\n    for (var i = 0; i < rules.length; i++)\n      if ($shouldUseRule(rules[i])) return true;\n  }\n\n  function $shouldUseRule($rule) {\n    return it.schema[$rule.keyword] !== undefined || ($rule.implements && $ruleImplementsSomeKeyword($rule));\n  }\n\n  function $ruleImplementsSomeKeyword($rule) {\n    var impl = $rule.implements;\n    for (var i = 0; i < impl.length; i++)\n      if (it.schema[impl[i]] !== undefined) return true;\n  }\n  return out;\n}\n","'use strict';\n\nvar resolve = require('./resolve')\n  , util = require('./util')\n  , errorClasses = require('./error_classes')\n  , stableStringify = require('fast-json-stable-stringify');\n\nvar validateGenerator = require('../dotjs/validate');\n\n/**\n * Functions below are used inside compiled validations function\n */\n\nvar ucs2length = util.ucs2length;\nvar equal = require('fast-deep-equal');\n\n// this error is thrown by async schemas to return validation errors via exception\nvar ValidationError = errorClasses.Validation;\n\nmodule.exports = compile;\n\n\n/**\n * Compiles schema to validation function\n * @this   Ajv\n * @param  {Object} schema schema object\n * @param  {Object} root object with information about the root schema for this schema\n * @param  {Object} localRefs the hash of local references inside the schema (created by resolve.id), used for inline resolution\n * @param  {String} baseId base ID for IDs in the schema\n * @return {Function} validation function\n */\nfunction compile(schema, root, localRefs, baseId) {\n  /* jshint validthis: true, evil: true */\n  /* eslint no-shadow: 0 */\n  var self = this\n    , opts = this._opts\n    , refVal = [ undefined ]\n    , refs = {}\n    , patterns = []\n    , patternsHash = {}\n    , defaults = []\n    , defaultsHash = {}\n    , customRules = [];\n\n  root = root || { schema: schema, refVal: refVal, refs: refs };\n\n  var c = checkCompiling.call(this, schema, root, baseId);\n  var compilation = this._compilations[c.index];\n  if (c.compiling) return (compilation.callValidate = callValidate);\n\n  var formats = this._formats;\n  var RULES = this.RULES;\n\n  try {\n    var v = localCompile(schema, root, localRefs, baseId);\n    compilation.validate = v;\n    var cv = compilation.callValidate;\n    if (cv) {\n      cv.schema = v.schema;\n      cv.errors = null;\n      cv.refs = v.refs;\n      cv.refVal = v.refVal;\n      cv.root = v.root;\n      cv.$async = v.$async;\n      if (opts.sourceCode) cv.source = v.source;\n    }\n    return v;\n  } finally {\n    endCompiling.call(this, schema, root, baseId);\n  }\n\n  /* @this   {*} - custom context, see passContext option */\n  function callValidate() {\n    /* jshint validthis: true */\n    var validate = compilation.validate;\n    var result = validate.apply(this, arguments);\n    callValidate.errors = validate.errors;\n    return result;\n  }\n\n  function localCompile(_schema, _root, localRefs, baseId) {\n    var isRoot = !_root || (_root && _root.schema == _schema);\n    if (_root.schema != root.schema)\n      return compile.call(self, _schema, _root, localRefs, baseId);\n\n    var $async = _schema.$async === true;\n\n    var sourceCode = validateGenerator({\n      isTop: true,\n      schema: _schema,\n      isRoot: isRoot,\n      baseId: baseId,\n      root: _root,\n      schemaPath: '',\n      errSchemaPath: '#',\n      errorPath: '\"\"',\n      MissingRefError: errorClasses.MissingRef,\n      RULES: RULES,\n      validate: validateGenerator,\n      util: util,\n      resolve: resolve,\n      resolveRef: resolveRef,\n      usePattern: usePattern,\n      useDefault: useDefault,\n      useCustomRule: useCustomRule,\n      opts: opts,\n      formats: formats,\n      logger: self.logger,\n      self: self\n    });\n\n    sourceCode = vars(refVal, refValCode) + vars(patterns, patternCode)\n                   + vars(defaults, defaultCode) + vars(customRules, customRuleCode)\n                   + sourceCode;\n\n    if (opts.processCode) sourceCode = opts.processCode(sourceCode, _schema);\n    // console.log('\\n\\n\\n *** \\n', JSON.stringify(sourceCode));\n    var validate;\n    try {\n      var makeValidate = new Function(\n        'self',\n        'RULES',\n        'formats',\n        'root',\n        'refVal',\n        'defaults',\n        'customRules',\n        'equal',\n        'ucs2length',\n        'ValidationError',\n        sourceCode\n      );\n\n      validate = makeValidate(\n        self,\n        RULES,\n        formats,\n        root,\n        refVal,\n        defaults,\n        customRules,\n        equal,\n        ucs2length,\n        ValidationError\n      );\n\n      refVal[0] = validate;\n    } catch(e) {\n      self.logger.error('Error compiling schema, function code:', sourceCode);\n      throw e;\n    }\n\n    validate.schema = _schema;\n    validate.errors = null;\n    validate.refs = refs;\n    validate.refVal = refVal;\n    validate.root = isRoot ? validate : _root;\n    if ($async) validate.$async = true;\n    if (opts.sourceCode === true) {\n      validate.source = {\n        code: sourceCode,\n        patterns: patterns,\n        defaults: defaults\n      };\n    }\n\n    return validate;\n  }\n\n  function resolveRef(baseId, ref, isRoot) {\n    ref = resolve.url(baseId, ref);\n    var refIndex = refs[ref];\n    var _refVal, refCode;\n    if (refIndex !== undefined) {\n      _refVal = refVal[refIndex];\n      refCode = 'refVal[' + refIndex + ']';\n      return resolvedRef(_refVal, refCode);\n    }\n    if (!isRoot && root.refs) {\n      var rootRefId = root.refs[ref];\n      if (rootRefId !== undefined) {\n        _refVal = root.refVal[rootRefId];\n        refCode = addLocalRef(ref, _refVal);\n        return resolvedRef(_refVal, refCode);\n      }\n    }\n\n    refCode = addLocalRef(ref);\n    var v = resolve.call(self, localCompile, root, ref);\n    if (v === undefined) {\n      var localSchema = localRefs && localRefs[ref];\n      if (localSchema) {\n        v = resolve.inlineRef(localSchema, opts.inlineRefs)\n            ? localSchema\n            : compile.call(self, localSchema, root, localRefs, baseId);\n      }\n    }\n\n    if (v === undefined) {\n      removeLocalRef(ref);\n    } else {\n      replaceLocalRef(ref, v);\n      return resolvedRef(v, refCode);\n    }\n  }\n\n  function addLocalRef(ref, v) {\n    var refId = refVal.length;\n    refVal[refId] = v;\n    refs[ref] = refId;\n    return 'refVal' + refId;\n  }\n\n  function removeLocalRef(ref) {\n    delete refs[ref];\n  }\n\n  function replaceLocalRef(ref, v) {\n    var refId = refs[ref];\n    refVal[refId] = v;\n  }\n\n  function resolvedRef(refVal, code) {\n    return typeof refVal == 'object' || typeof refVal == 'boolean'\n            ? { code: code, schema: refVal, inline: true }\n            : { code: code, $async: refVal && !!refVal.$async };\n  }\n\n  function usePattern(regexStr) {\n    var index = patternsHash[regexStr];\n    if (index === undefined) {\n      index = patternsHash[regexStr] = patterns.length;\n      patterns[index] = regexStr;\n    }\n    return 'pattern' + index;\n  }\n\n  function useDefault(value) {\n    switch (typeof value) {\n      case 'boolean':\n      case 'number':\n        return '' + value;\n      case 'string':\n        return util.toQuotedString(value);\n      case 'object':\n        if (value === null) return 'null';\n        var valueStr = stableStringify(value);\n        var index = defaultsHash[valueStr];\n        if (index === undefined) {\n          index = defaultsHash[valueStr] = defaults.length;\n          defaults[index] = value;\n        }\n        return 'default' + index;\n    }\n  }\n\n  function useCustomRule(rule, schema, parentSchema, it) {\n    if (self._opts.validateSchema !== false) {\n      var deps = rule.definition.dependencies;\n      if (deps && !deps.every(function(keyword) {\n        return Object.prototype.hasOwnProperty.call(parentSchema, keyword);\n      }))\n        throw new Error('parent schema must have all required keywords: ' + deps.join(','));\n\n      var validateSchema = rule.definition.validateSchema;\n      if (validateSchema) {\n        var valid = validateSchema(schema);\n        if (!valid) {\n          var message = 'keyword schema is invalid: ' + self.errorsText(validateSchema.errors);\n          if (self._opts.validateSchema == 'log') self.logger.error(message);\n          else throw new Error(message);\n        }\n      }\n    }\n\n    var compile = rule.definition.compile\n      , inline = rule.definition.inline\n      , macro = rule.definition.macro;\n\n    var validate;\n    if (compile) {\n      validate = compile.call(self, schema, parentSchema, it);\n    } else if (macro) {\n      validate = macro.call(self, schema, parentSchema, it);\n      if (opts.validateSchema !== false) self.validateSchema(validate, true);\n    } else if (inline) {\n      validate = inline.call(self, it, rule.keyword, schema, parentSchema);\n    } else {\n      validate = rule.definition.validate;\n      if (!validate) return;\n    }\n\n    if (validate === undefined)\n      throw new Error('custom keyword \"' + rule.keyword + '\"failed to compile');\n\n    var index = customRules.length;\n    customRules[index] = validate;\n\n    return {\n      code: 'customRule' + index,\n      validate: validate\n    };\n  }\n}\n\n\n/**\n * Checks if the schema is currently compiled\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n * @return {Object} object with properties \"index\" (compilation index) and \"compiling\" (boolean)\n */\nfunction checkCompiling(schema, root, baseId) {\n  /* jshint validthis: true */\n  var index = compIndex.call(this, schema, root, baseId);\n  if (index >= 0) return { index: index, compiling: true };\n  index = this._compilations.length;\n  this._compilations[index] = {\n    schema: schema,\n    root: root,\n    baseId: baseId\n  };\n  return { index: index, compiling: false };\n}\n\n\n/**\n * Removes the schema from the currently compiled list\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n */\nfunction endCompiling(schema, root, baseId) {\n  /* jshint validthis: true */\n  var i = compIndex.call(this, schema, root, baseId);\n  if (i >= 0) this._compilations.splice(i, 1);\n}\n\n\n/**\n * Index of schema compilation in the currently compiled list\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n * @return {Integer} compilation index\n */\nfunction compIndex(schema, root, baseId) {\n  /* jshint validthis: true */\n  for (var i=0; i<this._compilations.length; i++) {\n    var c = this._compilations[i];\n    if (c.schema == schema && c.root == root && c.baseId == baseId) return i;\n  }\n  return -1;\n}\n\n\nfunction patternCode(i, patterns) {\n  return 'var pattern' + i + ' = new RegExp(' + util.toQuotedString(patterns[i]) + ');';\n}\n\n\nfunction defaultCode(i) {\n  return 'var default' + i + ' = defaults[' + i + '];';\n}\n\n\nfunction refValCode(i, refVal) {\n  return refVal[i] === undefined ? '' : 'var refVal' + i + ' = refVal[' + i + '];';\n}\n\n\nfunction customRuleCode(i) {\n  return 'var customRule' + i + ' = customRules[' + i + '];';\n}\n\n\nfunction vars(arr, statement) {\n  if (!arr.length) return '';\n  var code = '';\n  for (var i=0; i<arr.length; i++)\n    code += statement(i, arr);\n  return code;\n}\n","'use strict';\n\n\nvar Cache = module.exports = function Cache() {\n  this._cache = {};\n};\n\n\nCache.prototype.put = function Cache_put(key, value) {\n  this._cache[key] = value;\n};\n\n\nCache.prototype.get = function Cache_get(key) {\n  return this._cache[key];\n};\n\n\nCache.prototype.del = function Cache_del(key) {\n  delete this._cache[key];\n};\n\n\nCache.prototype.clear = function Cache_clear() {\n  this._cache = {};\n};\n","'use strict';\n\nvar util = require('./util');\n\nvar DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/;\nvar DAYS = [0,31,28,31,30,31,30,31,31,30,31,30,31];\nvar TIME = /^(\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?(z|[+-]\\d\\d(?::?\\d\\d)?)?$/i;\nvar HOSTNAME = /^(?=.{1,253}\\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\\.?$/i;\nvar URI = /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nvar URIREF = /^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'\"()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\?(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\n// uri-template: https://tools.ietf.org/html/rfc6570\nvar URITEMPLATE = /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i;\n// For the source: https://gist.github.com/dperini/729294\n// For test cases: https://mathiasbynens.be/demo/url-regex\n// @todo Delete current URL in favour of the commented out URL rule when this issue is fixed https://github.com/eslint/eslint/issues/7983.\n// var URL = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-)*[a-z\\u{00a1}-\\u{ffff}0-9]+)(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-)*[a-z\\u{00a1}-\\u{ffff}0-9]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu;\nvar URL = /^(?:(?:http[s\\u017F]?|ftp):\\/\\/)(?:(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+(?::(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?@)?(?:(?!10(?:\\.[0-9]{1,3}){3})(?!127(?:\\.[0-9]{1,3}){3})(?!169\\.254(?:\\.[0-9]{1,3}){2})(?!192\\.168(?:\\.[0-9]{1,3}){2})(?!172\\.(?:1[6-9]|2[0-9]|3[01])(?:\\.[0-9]{1,3}){2})(?:[1-9][0-9]?|1[0-9][0-9]|2[01][0-9]|22[0-3])(?:\\.(?:1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])){2}(?:\\.(?:[1-9][0-9]?|1[0-9][0-9]|2[0-4][0-9]|25[0-4]))|(?:(?:(?:[0-9a-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-)*(?:[0-9a-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)(?:\\.(?:(?:[0-9a-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-)*(?:[0-9a-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)*(?:\\.(?:(?:[a-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]){2,})))(?::[0-9]{2,5})?(?:\\/(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?$/i;\nvar UUID = /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i;\nvar JSON_POINTER = /^(?:\\/(?:[^~/]|~0|~1)*)*$/;\nvar JSON_POINTER_URI_FRAGMENT = /^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i;\nvar RELATIVE_JSON_POINTER = /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/;\n\n\nmodule.exports = formats;\n\nfunction formats(mode) {\n  mode = mode == 'full' ? 'full' : 'fast';\n  return util.copy(formats[mode]);\n}\n\n\nformats.fast = {\n  // date: http://tools.ietf.org/html/rfc3339#section-5.6\n  date: /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/,\n  // date-time: http://tools.ietf.org/html/rfc3339#section-5.6\n  time: /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)?$/i,\n  'date-time': /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s](?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)$/i,\n  // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js\n  uri: /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/)?[^\\s]*$/i,\n  'uri-reference': /^(?:(?:[a-z][a-z0-9+\\-.]*:)?\\/?\\/)?(?:[^\\\\\\s#][^\\s#]*)?(?:#[^\\\\\\s]*)?$/i,\n  'uri-template': URITEMPLATE,\n  url: URL,\n  // email (sources from jsen validator):\n  // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363\n  // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'willful violation')\n  email: /^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,\n  hostname: HOSTNAME,\n  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n  // optimized http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses\n  ipv6: /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,\n  regex: regex,\n  // uuid: http://tools.ietf.org/html/rfc4122\n  uuid: UUID,\n  // JSON-pointer: https://tools.ietf.org/html/rfc6901\n  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A\n  'json-pointer': JSON_POINTER,\n  'json-pointer-uri-fragment': JSON_POINTER_URI_FRAGMENT,\n  // relative JSON-pointer: http://tools.ietf.org/html/draft-luff-relative-json-pointer-00\n  'relative-json-pointer': RELATIVE_JSON_POINTER\n};\n\n\nformats.full = {\n  date: date,\n  time: time,\n  'date-time': date_time,\n  uri: uri,\n  'uri-reference': URIREF,\n  'uri-template': URITEMPLATE,\n  url: URL,\n  email: /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,\n  hostname: HOSTNAME,\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n  ipv6: /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,\n  regex: regex,\n  uuid: UUID,\n  'json-pointer': JSON_POINTER,\n  'json-pointer-uri-fragment': JSON_POINTER_URI_FRAGMENT,\n  'relative-json-pointer': RELATIVE_JSON_POINTER\n};\n\n\nfunction isLeapYear(year) {\n  // https://tools.ietf.org/html/rfc3339#appendix-C\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\n\nfunction date(str) {\n  // full-date from http://tools.ietf.org/html/rfc3339#section-5.6\n  var matches = str.match(DATE);\n  if (!matches) return false;\n\n  var year = +matches[1];\n  var month = +matches[2];\n  var day = +matches[3];\n\n  return month >= 1 && month <= 12 && day >= 1 &&\n          day <= (month == 2 && isLeapYear(year) ? 29 : DAYS[month]);\n}\n\n\nfunction time(str, full) {\n  var matches = str.match(TIME);\n  if (!matches) return false;\n\n  var hour = matches[1];\n  var minute = matches[2];\n  var second = matches[3];\n  var timeZone = matches[5];\n  return ((hour <= 23 && minute <= 59 && second <= 59) ||\n          (hour == 23 && minute == 59 && second == 60)) &&\n         (!full || timeZone);\n}\n\n\nvar DATE_TIME_SEPARATOR = /t|\\s/i;\nfunction date_time(str) {\n  // http://tools.ietf.org/html/rfc3339#section-5.6\n  var dateTime = str.split(DATE_TIME_SEPARATOR);\n  return dateTime.length == 2 && date(dateTime[0]) && time(dateTime[1], true);\n}\n\n\nvar NOT_URI_FRAGMENT = /\\/|:/;\nfunction uri(str) {\n  // http://jmrware.com/articles/2009/uri_regexp/URI_regex.html + optional protocol + required \".\"\n  return NOT_URI_FRAGMENT.test(str) && URI.test(str);\n}\n\n\nvar Z_ANCHOR = /[^\\\\]\\\\Z/;\nfunction regex(str) {\n  if (Z_ANCHOR.test(str)) return false;\n  try {\n    new RegExp(str);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n","'use strict';\nmodule.exports = function generate_ref(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $async, $refCode;\n  if ($schema == '#' || $schema == '#/') {\n    if (it.isRoot) {\n      $async = it.async;\n      $refCode = 'validate';\n    } else {\n      $async = it.root.schema.$async === true;\n      $refCode = 'root.refVal[0]';\n    }\n  } else {\n    var $refVal = it.resolveRef(it.baseId, $schema, it.isRoot);\n    if ($refVal === undefined) {\n      var $message = it.MissingRefError.message(it.baseId, $schema);\n      if (it.opts.missingRefs == 'fail') {\n        it.logger.error($message);\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('$ref') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { ref: \\'' + (it.util.escapeQuotes($schema)) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'can\\\\\\'t resolve reference ' + (it.util.escapeQuotes($schema)) + '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: ' + (it.util.toQuotedString($schema)) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        if ($breakOnError) {\n          out += ' if (false) { ';\n        }\n      } else if (it.opts.missingRefs == 'ignore') {\n        it.logger.warn($message);\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n      } else {\n        throw new it.MissingRefError(it.baseId, $schema, $message);\n      }\n    } else if ($refVal.inline) {\n      var $it = it.util.copy(it);\n      $it.level++;\n      var $nextValid = 'valid' + $it.level;\n      $it.schema = $refVal.schema;\n      $it.schemaPath = '';\n      $it.errSchemaPath = $schema;\n      var $code = it.validate($it).replace(/validate\\.schema/g, $refVal.code);\n      out += ' ' + ($code) + ' ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n      }\n    } else {\n      $async = $refVal.$async === true || (it.async && $refVal.$async !== false);\n      $refCode = $refVal.code;\n    }\n  }\n  if ($refCode) {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    if (it.opts.passContext) {\n      out += ' ' + ($refCode) + '.call(this, ';\n    } else {\n      out += ' ' + ($refCode) + '( ';\n    }\n    out += ' ' + ($data) + ', (dataPath || \\'\\')';\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + (it.errorPath);\n    }\n    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ', rootData)  ';\n    var __callValidate = out;\n    out = $$outStack.pop();\n    if ($async) {\n      if (!it.async) throw new Error('async schema referenced by sync schema');\n      if ($breakOnError) {\n        out += ' var ' + ($valid) + '; ';\n      }\n      out += ' try { await ' + (__callValidate) + '; ';\n      if ($breakOnError) {\n        out += ' ' + ($valid) + ' = true; ';\n      }\n      out += ' } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; ';\n      if ($breakOnError) {\n        out += ' ' + ($valid) + ' = false; ';\n      }\n      out += ' } ';\n      if ($breakOnError) {\n        out += ' if (' + ($valid) + ') { ';\n      }\n    } else {\n      out += ' if (!' + (__callValidate) + ') { if (vErrors === null) vErrors = ' + ($refCode) + '.errors; else vErrors = vErrors.concat(' + ($refCode) + '.errors); errors = vErrors.length; } ';\n      if ($breakOnError) {\n        out += ' else { ';\n      }\n    }\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_allOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $currentBaseId = $it.baseId,\n    $allSchemasEmpty = true;\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $i = -1,\n      l1 = arr1.length - 1;\n    while ($i < l1) {\n      $sch = arr1[$i += 1];\n      if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n        $allSchemasEmpty = false;\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    if ($allSchemasEmpty) {\n      out += ' if (true) { ';\n    } else {\n      out += ' ' + ($closingBraces.slice(0, -1)) + ' ';\n    }\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_anyOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $noEmptySchema = $schema.every(function($sch) {\n    return (it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all));\n  });\n  if ($noEmptySchema) {\n    var $currentBaseId = $it.baseId;\n    out += ' var ' + ($errs) + ' = errors; var ' + ($valid) + ' = false;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var arr1 = $schema;\n    if (arr1) {\n      var $sch, $i = -1,\n        l1 = arr1.length - 1;\n      while ($i < l1) {\n        $sch = arr1[$i += 1];\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        out += ' ' + ($valid) + ' = ' + ($valid) + ' || ' + ($nextValid) + '; if (!' + ($valid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($closingBraces) + ' if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('anyOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should match some schema in anyOf\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n    if (it.opts.allErrors) {\n      out += ' } ';\n    }\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_comment(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $schema = it.schema[$keyword];\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $comment = it.util.toQuotedString($schema);\n  if (it.opts.$comment === true) {\n    out += ' console.log(' + ($comment) + ');';\n  } else if (typeof it.opts.$comment == 'function') {\n    out += ' self._opts.$comment(' + ($comment) + ', ' + (it.util.toQuotedString($errSchemaPath)) + ', validate.root.schema);';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_const(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!$isData) {\n    out += ' var schema' + ($lvl) + ' = validate.schema' + ($schemaPath) + ';';\n  }\n  out += 'var ' + ($valid) + ' = equal(' + ($data) + ', schema' + ($lvl) + '); if (!' + ($valid) + ') {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('const') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { allowedValue: schema' + ($lvl) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be equal to constant\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' }';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_contains(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $idx = 'i' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $currentBaseId = it.baseId,\n    $nonEmptySchema = (it.opts.strictKeywords ? (typeof $schema == 'object' && Object.keys($schema).length > 0) || $schema === false : it.util.schemaHasRules($schema, it.RULES.all));\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if ($nonEmptySchema) {\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($nextValid) + ' = false; for (var ' + ($idx) + ' = 0; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n    var $passData = $data + '[' + $idx + ']';\n    $it.dataPathArr[$dataNxt] = $idx;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    out += ' if (' + ($nextValid) + ') break; }  ';\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($closingBraces) + ' if (!' + ($nextValid) + ') {';\n  } else {\n    out += ' if (' + ($data) + '.length == 0) {';\n  }\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('contains') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should contain a valid item\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } else { ';\n  if ($nonEmptySchema) {\n    out += '  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n  }\n  if (it.opts.allErrors) {\n    out += ' } ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_dependencies(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $schemaDeps = {},\n    $propertyDeps = {},\n    $ownProperties = it.opts.ownProperties;\n  for ($property in $schema) {\n    if ($property == '__proto__') continue;\n    var $sch = $schema[$property];\n    var $deps = Array.isArray($sch) ? $propertyDeps : $schemaDeps;\n    $deps[$property] = $sch;\n  }\n  out += 'var ' + ($errs) + ' = errors;';\n  var $currentErrorPath = it.errorPath;\n  out += 'var missing' + ($lvl) + ';';\n  for (var $property in $propertyDeps) {\n    $deps = $propertyDeps[$property];\n    if ($deps.length) {\n      out += ' if ( ' + ($data) + (it.util.getProperty($property)) + ' !== undefined ';\n      if ($ownProperties) {\n        out += ' && Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($property)) + '\\') ';\n      }\n      if ($breakOnError) {\n        out += ' && ( ';\n        var arr1 = $deps;\n        if (arr1) {\n          var $propertyKey, $i = -1,\n            l1 = arr1.length - 1;\n          while ($i < l1) {\n            $propertyKey = arr1[$i += 1];\n            if ($i) {\n              out += ' || ';\n            }\n            var $prop = it.util.getProperty($propertyKey),\n              $useData = $data + $prop;\n            out += ' ( ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? $propertyKey : $prop)) + ') ) ';\n          }\n        }\n        out += ')) {  ';\n        var $propertyPath = 'missing' + $lvl,\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;\n        }\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('dependencies') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { property: \\'' + (it.util.escapeQuotes($property)) + '\\', missingProperty: \\'' + ($missingProperty) + '\\', depsCount: ' + ($deps.length) + ', deps: \\'' + (it.util.escapeQuotes($deps.length == 1 ? $deps[0] : $deps.join(\", \"))) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should have ';\n            if ($deps.length == 1) {\n              out += 'property ' + (it.util.escapeQuotes($deps[0]));\n            } else {\n              out += 'properties ' + (it.util.escapeQuotes($deps.join(\", \")));\n            }\n            out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n      } else {\n        out += ' ) { ';\n        var arr2 = $deps;\n        if (arr2) {\n          var $propertyKey, i2 = -1,\n            l2 = arr2.length - 1;\n          while (i2 < l2) {\n            $propertyKey = arr2[i2 += 1];\n            var $prop = it.util.getProperty($propertyKey),\n              $missingProperty = it.util.escapeQuotes($propertyKey),\n              $useData = $data + $prop;\n            if (it.opts._errorDataPathProperty) {\n              it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n            }\n            out += ' if ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') {  var err =   '; /* istanbul ignore else */\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ('dependencies') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { property: \\'' + (it.util.escapeQuotes($property)) + '\\', missingProperty: \\'' + ($missingProperty) + '\\', depsCount: ' + ($deps.length) + ', deps: \\'' + (it.util.escapeQuotes($deps.length == 1 ? $deps[0] : $deps.join(\", \"))) + '\\' } ';\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'should have ';\n                if ($deps.length == 1) {\n                  out += 'property ' + (it.util.escapeQuotes($deps[0]));\n                } else {\n                  out += 'properties ' + (it.util.escapeQuotes($deps.join(\", \")));\n                }\n                out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\\' ';\n              }\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n              }\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n            out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';\n          }\n        }\n      }\n      out += ' }   ';\n      if ($breakOnError) {\n        $closingBraces += '}';\n        out += ' else { ';\n      }\n    }\n  }\n  it.errorPath = $currentErrorPath;\n  var $currentBaseId = $it.baseId;\n  for (var $property in $schemaDeps) {\n    var $sch = $schemaDeps[$property];\n    if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n      out += ' ' + ($nextValid) + ' = true; if ( ' + ($data) + (it.util.getProperty($property)) + ' !== undefined ';\n      if ($ownProperties) {\n        out += ' && Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($property)) + '\\') ';\n      }\n      out += ') { ';\n      $it.schema = $sch;\n      $it.schemaPath = $schemaPath + it.util.getProperty($property);\n      $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($property);\n      out += '  ' + (it.validate($it)) + ' ';\n      $it.baseId = $currentBaseId;\n      out += ' }  ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += '   ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_enum(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $i = 'i' + $lvl,\n    $vSchema = 'schema' + $lvl;\n  if (!$isData) {\n    out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + ';';\n  }\n  out += 'var ' + ($valid) + ';';\n  if ($isData) {\n    out += ' if (schema' + ($lvl) + ' === undefined) ' + ($valid) + ' = true; else if (!Array.isArray(schema' + ($lvl) + ')) ' + ($valid) + ' = false; else {';\n  }\n  out += '' + ($valid) + ' = false;for (var ' + ($i) + '=0; ' + ($i) + '<' + ($vSchema) + '.length; ' + ($i) + '++) if (equal(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + '])) { ' + ($valid) + ' = true; break; }';\n  if ($isData) {\n    out += '  }  ';\n  }\n  out += ' if (!' + ($valid) + ') {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('enum') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { allowedValues: schema' + ($lvl) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be equal to one of the allowed values\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' }';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_format(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  if (it.opts.format === false) {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n    return out;\n  }\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $unknownFormats = it.opts.unknownFormats,\n    $allowUnknown = Array.isArray($unknownFormats);\n  if ($isData) {\n    var $format = 'format' + $lvl,\n      $isObject = 'isObject' + $lvl,\n      $formatType = 'formatType' + $lvl;\n    out += ' var ' + ($format) + ' = formats[' + ($schemaValue) + ']; var ' + ($isObject) + ' = typeof ' + ($format) + ' == \\'object\\' && !(' + ($format) + ' instanceof RegExp) && ' + ($format) + '.validate; var ' + ($formatType) + ' = ' + ($isObject) + ' && ' + ($format) + '.type || \\'string\\'; if (' + ($isObject) + ') { ';\n    if (it.async) {\n      out += ' var async' + ($lvl) + ' = ' + ($format) + '.async; ';\n    }\n    out += ' ' + ($format) + ' = ' + ($format) + '.validate; } if (  ';\n    if ($isData) {\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'string\\') || ';\n    }\n    out += ' (';\n    if ($unknownFormats != 'ignore') {\n      out += ' (' + ($schemaValue) + ' && !' + ($format) + ' ';\n      if ($allowUnknown) {\n        out += ' && self._opts.unknownFormats.indexOf(' + ($schemaValue) + ') == -1 ';\n      }\n      out += ') || ';\n    }\n    out += ' (' + ($format) + ' && ' + ($formatType) + ' == \\'' + ($ruleType) + '\\' && !(typeof ' + ($format) + ' == \\'function\\' ? ';\n    if (it.async) {\n      out += ' (async' + ($lvl) + ' ? await ' + ($format) + '(' + ($data) + ') : ' + ($format) + '(' + ($data) + ')) ';\n    } else {\n      out += ' ' + ($format) + '(' + ($data) + ') ';\n    }\n    out += ' : ' + ($format) + '.test(' + ($data) + '))))) {';\n  } else {\n    var $format = it.formats[$schema];\n    if (!$format) {\n      if ($unknownFormats == 'ignore') {\n        it.logger.warn('unknown format \"' + $schema + '\" ignored in schema at path \"' + it.errSchemaPath + '\"');\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n        return out;\n      } else if ($allowUnknown && $unknownFormats.indexOf($schema) >= 0) {\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n        return out;\n      } else {\n        throw new Error('unknown format \"' + $schema + '\" is used in schema at path \"' + it.errSchemaPath + '\"');\n      }\n    }\n    var $isObject = typeof $format == 'object' && !($format instanceof RegExp) && $format.validate;\n    var $formatType = $isObject && $format.type || 'string';\n    if ($isObject) {\n      var $async = $format.async === true;\n      $format = $format.validate;\n    }\n    if ($formatType != $ruleType) {\n      if ($breakOnError) {\n        out += ' if (true) { ';\n      }\n      return out;\n    }\n    if ($async) {\n      if (!it.async) throw new Error('async format in sync schema');\n      var $formatRef = 'formats' + it.util.getProperty($schema) + '.validate';\n      out += ' if (!(await ' + ($formatRef) + '(' + ($data) + '))) { ';\n    } else {\n      out += ' if (! ';\n      var $formatRef = 'formats' + it.util.getProperty($schema);\n      if ($isObject) $formatRef += '.validate';\n      if (typeof $format == 'function') {\n        out += ' ' + ($formatRef) + '(' + ($data) + ') ';\n      } else {\n        out += ' ' + ($formatRef) + '.test(' + ($data) + ') ';\n      }\n      out += ') { ';\n    }\n  }\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('format') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { format:  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += '  } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match format \"';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + (it.util.escapeQuotes($schema));\n      }\n      out += '\"\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + (it.util.toQuotedString($schema));\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_if(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $thenSch = it.schema['then'],\n    $elseSch = it.schema['else'],\n    $thenPresent = $thenSch !== undefined && (it.opts.strictKeywords ? (typeof $thenSch == 'object' && Object.keys($thenSch).length > 0) || $thenSch === false : it.util.schemaHasRules($thenSch, it.RULES.all)),\n    $elsePresent = $elseSch !== undefined && (it.opts.strictKeywords ? (typeof $elseSch == 'object' && Object.keys($elseSch).length > 0) || $elseSch === false : it.util.schemaHasRules($elseSch, it.RULES.all)),\n    $currentBaseId = $it.baseId;\n  if ($thenPresent || $elsePresent) {\n    var $ifClause;\n    $it.createErrors = false;\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($errs) + ' = errors; var ' + ($valid) + ' = true;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    out += '  ' + (it.validate($it)) + ' ';\n    $it.baseId = $currentBaseId;\n    $it.createErrors = true;\n    out += '  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; }  ';\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    if ($thenPresent) {\n      out += ' if (' + ($nextValid) + ') {  ';\n      $it.schema = it.schema['then'];\n      $it.schemaPath = it.schemaPath + '.then';\n      $it.errSchemaPath = it.errSchemaPath + '/then';\n      out += '  ' + (it.validate($it)) + ' ';\n      $it.baseId = $currentBaseId;\n      out += ' ' + ($valid) + ' = ' + ($nextValid) + '; ';\n      if ($thenPresent && $elsePresent) {\n        $ifClause = 'ifClause' + $lvl;\n        out += ' var ' + ($ifClause) + ' = \\'then\\'; ';\n      } else {\n        $ifClause = '\\'then\\'';\n      }\n      out += ' } ';\n      if ($elsePresent) {\n        out += ' else { ';\n      }\n    } else {\n      out += ' if (!' + ($nextValid) + ') { ';\n    }\n    if ($elsePresent) {\n      $it.schema = it.schema['else'];\n      $it.schemaPath = it.schemaPath + '.else';\n      $it.errSchemaPath = it.errSchemaPath + '/else';\n      out += '  ' + (it.validate($it)) + ' ';\n      $it.baseId = $currentBaseId;\n      out += ' ' + ($valid) + ' = ' + ($nextValid) + '; ';\n      if ($thenPresent && $elsePresent) {\n        $ifClause = 'ifClause' + $lvl;\n        out += ' var ' + ($ifClause) + ' = \\'else\\'; ';\n      } else {\n        $ifClause = '\\'else\\'';\n      }\n      out += ' } ';\n    }\n    out += ' if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('if') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { failingKeyword: ' + ($ifClause) + ' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should match \"\\' + ' + ($ifClause) + ' + \\'\" schema\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    out += ' }   ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_items(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $idx = 'i' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $currentBaseId = it.baseId;\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if (Array.isArray($schema)) {\n    var $additionalItems = it.schema.additionalItems;\n    if ($additionalItems === false) {\n      out += ' ' + ($valid) + ' = ' + ($data) + '.length <= ' + ($schema.length) + '; ';\n      var $currErrSchemaPath = $errSchemaPath;\n      $errSchemaPath = it.errSchemaPath + '/additionalItems';\n      out += '  if (!' + ($valid) + ') {   ';\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ('additionalItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schema.length) + ' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should NOT have more than ' + ($schema.length) + ' items\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + (__err) + ']); ';\n        } else {\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n      out += ' } ';\n      $errSchemaPath = $currErrSchemaPath;\n      if ($breakOnError) {\n        $closingBraces += '}';\n        out += ' else { ';\n      }\n    }\n    var arr1 = $schema;\n    if (arr1) {\n      var $sch, $i = -1,\n        l1 = arr1.length - 1;\n      while ($i < l1) {\n        $sch = arr1[$i += 1];\n        if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n          out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($i) + ') { ';\n          var $passData = $data + '[' + $i + ']';\n          $it.schema = $sch;\n          $it.schemaPath = $schemaPath + '[' + $i + ']';\n          $it.errSchemaPath = $errSchemaPath + '/' + $i;\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $i, it.opts.jsonPointers, true);\n          $it.dataPathArr[$dataNxt] = $i;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + ($nextValid) + ') { ';\n            $closingBraces += '}';\n          }\n        }\n      }\n    }\n    if (typeof $additionalItems == 'object' && (it.opts.strictKeywords ? (typeof $additionalItems == 'object' && Object.keys($additionalItems).length > 0) || $additionalItems === false : it.util.schemaHasRules($additionalItems, it.RULES.all))) {\n      $it.schema = $additionalItems;\n      $it.schemaPath = it.schemaPath + '.additionalItems';\n      $it.errSchemaPath = it.errSchemaPath + '/additionalItems';\n      out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($schema.length) + ') {  for (var ' + ($idx) + ' = ' + ($schema.length) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n      $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n      var $passData = $data + '[' + $idx + ']';\n      $it.dataPathArr[$dataNxt] = $idx;\n      var $code = it.validate($it);\n      $it.baseId = $currentBaseId;\n      if (it.util.varOccurences($code, $nextData) < 2) {\n        out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n      } else {\n        out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n      }\n      if ($breakOnError) {\n        out += ' if (!' + ($nextValid) + ') break; ';\n      }\n      out += ' } }  ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n  } else if ((it.opts.strictKeywords ? (typeof $schema == 'object' && Object.keys($schema).length > 0) || $schema === false : it.util.schemaHasRules($schema, it.RULES.all))) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += '  for (var ' + ($idx) + ' = ' + (0) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n    var $passData = $data + '[' + $idx + ']';\n    $it.dataPathArr[$dataNxt] = $idx;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    if ($breakOnError) {\n      out += ' if (!' + ($nextValid) + ') break; ';\n    }\n    out += ' }';\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate__limit(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $isMax = $keyword == 'maximum',\n    $exclusiveKeyword = $isMax ? 'exclusiveMaximum' : 'exclusiveMinimum',\n    $schemaExcl = it.schema[$exclusiveKeyword],\n    $isDataExcl = it.opts.$data && $schemaExcl && $schemaExcl.$data,\n    $op = $isMax ? '<' : '>',\n    $notOp = $isMax ? '>' : '<',\n    $errorKeyword = undefined;\n  if (!($isData || typeof $schema == 'number' || $schema === undefined)) {\n    throw new Error($keyword + ' must be number');\n  }\n  if (!($isDataExcl || $schemaExcl === undefined || typeof $schemaExcl == 'number' || typeof $schemaExcl == 'boolean')) {\n    throw new Error($exclusiveKeyword + ' must be number or boolean');\n  }\n  if ($isDataExcl) {\n    var $schemaValueExcl = it.util.getData($schemaExcl.$data, $dataLvl, it.dataPathArr),\n      $exclusive = 'exclusive' + $lvl,\n      $exclType = 'exclType' + $lvl,\n      $exclIsNumber = 'exclIsNumber' + $lvl,\n      $opExpr = 'op' + $lvl,\n      $opStr = '\\' + ' + $opExpr + ' + \\'';\n    out += ' var schemaExcl' + ($lvl) + ' = ' + ($schemaValueExcl) + '; ';\n    $schemaValueExcl = 'schemaExcl' + $lvl;\n    out += ' var ' + ($exclusive) + '; var ' + ($exclType) + ' = typeof ' + ($schemaValueExcl) + '; if (' + ($exclType) + ' != \\'boolean\\' && ' + ($exclType) + ' != \\'undefined\\' && ' + ($exclType) + ' != \\'number\\') { ';\n    var $errorKeyword = $exclusiveKeyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || '_exclusiveLimit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'' + ($exclusiveKeyword) + ' should be boolean\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } else if ( ';\n    if ($isData) {\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n    }\n    out += ' ' + ($exclType) + ' == \\'number\\' ? ( (' + ($exclusive) + ' = ' + ($schemaValue) + ' === undefined || ' + ($schemaValueExcl) + ' ' + ($op) + '= ' + ($schemaValue) + ') ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValueExcl) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) : ( (' + ($exclusive) + ' = ' + ($schemaValueExcl) + ' === true) ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValue) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) || ' + ($data) + ' !== ' + ($data) + ') { var op' + ($lvl) + ' = ' + ($exclusive) + ' ? \\'' + ($op) + '\\' : \\'' + ($op) + '=\\'; ';\n    if ($schema === undefined) {\n      $errorKeyword = $exclusiveKeyword;\n      $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n      $schemaValue = $schemaValueExcl;\n      $isData = $isDataExcl;\n    }\n  } else {\n    var $exclIsNumber = typeof $schemaExcl == 'number',\n      $opStr = $op;\n    if ($exclIsNumber && $isData) {\n      var $opExpr = '\\'' + $opStr + '\\'';\n      out += ' if ( ';\n      if ($isData) {\n        out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n      }\n      out += ' ( ' + ($schemaValue) + ' === undefined || ' + ($schemaExcl) + ' ' + ($op) + '= ' + ($schemaValue) + ' ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaExcl) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) || ' + ($data) + ' !== ' + ($data) + ') { ';\n    } else {\n      if ($exclIsNumber && $schema === undefined) {\n        $exclusive = true;\n        $errorKeyword = $exclusiveKeyword;\n        $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n        $schemaValue = $schemaExcl;\n        $notOp += '=';\n      } else {\n        if ($exclIsNumber) $schemaValue = Math[$isMax ? 'min' : 'max']($schemaExcl, $schema);\n        if ($schemaExcl === ($exclIsNumber ? $schemaValue : true)) {\n          $exclusive = true;\n          $errorKeyword = $exclusiveKeyword;\n          $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n          $notOp += '=';\n        } else {\n          $exclusive = false;\n          $opStr += '=';\n        }\n      }\n      var $opExpr = '\\'' + $opStr + '\\'';\n      out += ' if ( ';\n      if ($isData) {\n        out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n      }\n      out += ' ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' || ' + ($data) + ' !== ' + ($data) + ') { ';\n    }\n  }\n  $errorKeyword = $errorKeyword || $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { comparison: ' + ($opExpr) + ', limit: ' + ($schemaValue) + ', exclusive: ' + ($exclusive) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be ' + ($opStr) + ' ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue);\n      } else {\n        out += '' + ($schemaValue) + '\\'';\n      }\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate__limitItems(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!($isData || typeof $schema == 'number')) {\n    throw new Error($keyword + ' must be number');\n  }\n  var $op = $keyword == 'maxItems' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  out += ' ' + ($data) + '.length ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT have ';\n      if ($keyword == 'maxItems') {\n        out += 'more';\n      } else {\n        out += 'fewer';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' items\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate__limitLength(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!($isData || typeof $schema == 'number')) {\n    throw new Error($keyword + ' must be number');\n  }\n  var $op = $keyword == 'maxLength' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  if (it.opts.unicode === false) {\n    out += ' ' + ($data) + '.length ';\n  } else {\n    out += ' ucs2length(' + ($data) + ') ';\n  }\n  out += ' ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitLength') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT be ';\n      if ($keyword == 'maxLength') {\n        out += 'longer';\n      } else {\n        out += 'shorter';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' characters\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate__limitProperties(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!($isData || typeof $schema == 'number')) {\n    throw new Error($keyword + ' must be number');\n  }\n  var $op = $keyword == 'maxProperties' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  out += ' Object.keys(' + ($data) + ').length ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitProperties') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT have ';\n      if ($keyword == 'maxProperties') {\n        out += 'more';\n      } else {\n        out += 'fewer';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' properties\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_multipleOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!($isData || typeof $schema == 'number')) {\n    throw new Error($keyword + ' must be number');\n  }\n  out += 'var division' + ($lvl) + ';if (';\n  if ($isData) {\n    out += ' ' + ($schemaValue) + ' !== undefined && ( typeof ' + ($schemaValue) + ' != \\'number\\' || ';\n  }\n  out += ' (division' + ($lvl) + ' = ' + ($data) + ' / ' + ($schemaValue) + ', ';\n  if (it.opts.multipleOfPrecision) {\n    out += ' Math.abs(Math.round(division' + ($lvl) + ') - division' + ($lvl) + ') > 1e-' + (it.opts.multipleOfPrecision) + ' ';\n  } else {\n    out += ' division' + ($lvl) + ' !== parseInt(division' + ($lvl) + ') ';\n  }\n  out += ' ) ';\n  if ($isData) {\n    out += '  )  ';\n  }\n  out += ' ) {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('multipleOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { multipleOf: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be multiple of ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue);\n      } else {\n        out += '' + ($schemaValue) + '\\'';\n      }\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_not(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  if ((it.opts.strictKeywords ? (typeof $schema == 'object' && Object.keys($schema).length > 0) || $schema === false : it.util.schemaHasRules($schema, it.RULES.all))) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($errs) + ' = errors;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    $it.createErrors = false;\n    var $allErrorsOption;\n    if ($it.opts.allErrors) {\n      $allErrorsOption = $it.opts.allErrors;\n      $it.opts.allErrors = false;\n    }\n    out += ' ' + (it.validate($it)) + ' ';\n    $it.createErrors = true;\n    if ($allErrorsOption) $it.opts.allErrors = $allErrorsOption;\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' if (' + ($nextValid) + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('not') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT be valid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n    if (it.opts.allErrors) {\n      out += ' } ';\n    }\n  } else {\n    out += '  var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('not') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT be valid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if ($breakOnError) {\n      out += ' if (false) { ';\n    }\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_oneOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $currentBaseId = $it.baseId,\n    $prevValid = 'prevValid' + $lvl,\n    $passingSchemas = 'passingSchemas' + $lvl;\n  out += 'var ' + ($errs) + ' = errors , ' + ($prevValid) + ' = false , ' + ($valid) + ' = false , ' + ($passingSchemas) + ' = null; ';\n  var $wasComposite = it.compositeRule;\n  it.compositeRule = $it.compositeRule = true;\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $i = -1,\n      l1 = arr1.length - 1;\n    while ($i < l1) {\n      $sch = arr1[$i += 1];\n      if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n      } else {\n        out += ' var ' + ($nextValid) + ' = true; ';\n      }\n      if ($i) {\n        out += ' if (' + ($nextValid) + ' && ' + ($prevValid) + ') { ' + ($valid) + ' = false; ' + ($passingSchemas) + ' = [' + ($passingSchemas) + ', ' + ($i) + ']; } else { ';\n        $closingBraces += '}';\n      }\n      out += ' if (' + ($nextValid) + ') { ' + ($valid) + ' = ' + ($prevValid) + ' = true; ' + ($passingSchemas) + ' = ' + ($i) + '; }';\n    }\n  }\n  it.compositeRule = $it.compositeRule = $wasComposite;\n  out += '' + ($closingBraces) + 'if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('oneOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { passingSchemas: ' + ($passingSchemas) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match exactly one schema in oneOf\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; return false; ';\n    }\n  }\n  out += '} else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; }';\n  if (it.opts.allErrors) {\n    out += ' } ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_pattern(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $regexp = $isData ? '(new RegExp(' + $schemaValue + '))' : it.usePattern($schema);\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'string\\') || ';\n  }\n  out += ' !' + ($regexp) + '.test(' + ($data) + ') ) {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('pattern') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { pattern:  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += '  } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match pattern \"';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + (it.util.escapeQuotes($schema));\n      }\n      out += '\"\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + (it.util.toQuotedString($schema));\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_properties(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $key = 'key' + $lvl,\n    $idx = 'idx' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $dataProperties = 'dataProperties' + $lvl;\n  var $schemaKeys = Object.keys($schema || {}).filter(notProto),\n    $pProperties = it.schema.patternProperties || {},\n    $pPropertyKeys = Object.keys($pProperties).filter(notProto),\n    $aProperties = it.schema.additionalProperties,\n    $someProperties = $schemaKeys.length || $pPropertyKeys.length,\n    $noAdditional = $aProperties === false,\n    $additionalIsSchema = typeof $aProperties == 'object' && Object.keys($aProperties).length,\n    $removeAdditional = it.opts.removeAdditional,\n    $checkAdditional = $noAdditional || $additionalIsSchema || $removeAdditional,\n    $ownProperties = it.opts.ownProperties,\n    $currentBaseId = it.baseId;\n  var $required = it.schema.required;\n  if ($required && !(it.opts.$data && $required.$data) && $required.length < it.opts.loopRequired) {\n    var $requiredHash = it.util.toHash($required);\n  }\n\n  function notProto(p) {\n    return p !== '__proto__';\n  }\n  out += 'var ' + ($errs) + ' = errors;var ' + ($nextValid) + ' = true;';\n  if ($ownProperties) {\n    out += ' var ' + ($dataProperties) + ' = undefined;';\n  }\n  if ($checkAdditional) {\n    if ($ownProperties) {\n      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n    } else {\n      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n    }\n    if ($someProperties) {\n      out += ' var isAdditional' + ($lvl) + ' = !(false ';\n      if ($schemaKeys.length) {\n        if ($schemaKeys.length > 8) {\n          out += ' || validate.schema' + ($schemaPath) + '.hasOwnProperty(' + ($key) + ') ';\n        } else {\n          var arr1 = $schemaKeys;\n          if (arr1) {\n            var $propertyKey, i1 = -1,\n              l1 = arr1.length - 1;\n            while (i1 < l1) {\n              $propertyKey = arr1[i1 += 1];\n              out += ' || ' + ($key) + ' == ' + (it.util.toQuotedString($propertyKey)) + ' ';\n            }\n          }\n        }\n      }\n      if ($pPropertyKeys.length) {\n        var arr2 = $pPropertyKeys;\n        if (arr2) {\n          var $pProperty, $i = -1,\n            l2 = arr2.length - 1;\n          while ($i < l2) {\n            $pProperty = arr2[$i += 1];\n            out += ' || ' + (it.usePattern($pProperty)) + '.test(' + ($key) + ') ';\n          }\n        }\n      }\n      out += ' ); if (isAdditional' + ($lvl) + ') { ';\n    }\n    if ($removeAdditional == 'all') {\n      out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n    } else {\n      var $currentErrorPath = it.errorPath;\n      var $additionalProperty = '\\' + ' + $key + ' + \\'';\n      if (it.opts._errorDataPathProperty) {\n        it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n      }\n      if ($noAdditional) {\n        if ($removeAdditional) {\n          out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n        } else {\n          out += ' ' + ($nextValid) + ' = false; ';\n          var $currErrSchemaPath = $errSchemaPath;\n          $errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          var $$outStack = $$outStack || [];\n          $$outStack.push(out);\n          out = ''; /* istanbul ignore else */\n          if (it.createErrors !== false) {\n            out += ' { keyword: \\'' + ('additionalProperties') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { additionalProperty: \\'' + ($additionalProperty) + '\\' } ';\n            if (it.opts.messages !== false) {\n              out += ' , message: \\'';\n              if (it.opts._errorDataPathProperty) {\n                out += 'is an invalid additional property';\n              } else {\n                out += 'should NOT have additional properties';\n              }\n              out += '\\' ';\n            }\n            if (it.opts.verbose) {\n              out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n            }\n            out += ' } ';\n          } else {\n            out += ' {} ';\n          }\n          var __err = out;\n          out = $$outStack.pop();\n          if (!it.compositeRule && $breakOnError) {\n            /* istanbul ignore if */\n            if (it.async) {\n              out += ' throw new ValidationError([' + (__err) + ']); ';\n            } else {\n              out += ' validate.errors = [' + (__err) + ']; return false; ';\n            }\n          } else {\n            out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n          }\n          $errSchemaPath = $currErrSchemaPath;\n          if ($breakOnError) {\n            out += ' break; ';\n          }\n        }\n      } else if ($additionalIsSchema) {\n        if ($removeAdditional == 'failing') {\n          out += ' var ' + ($errs) + ' = errors;  ';\n          var $wasComposite = it.compositeRule;\n          it.compositeRule = $it.compositeRule = true;\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          out += ' if (!' + ($nextValid) + ') { errors = ' + ($errs) + '; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete ' + ($data) + '[' + ($key) + ']; }  ';\n          it.compositeRule = $it.compositeRule = $wasComposite;\n        } else {\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n        }\n      }\n      it.errorPath = $currentErrorPath;\n    }\n    if ($someProperties) {\n      out += ' } ';\n    }\n    out += ' }  ';\n    if ($breakOnError) {\n      out += ' if (' + ($nextValid) + ') { ';\n      $closingBraces += '}';\n    }\n  }\n  var $useDefaults = it.opts.useDefaults && !it.compositeRule;\n  if ($schemaKeys.length) {\n    var arr3 = $schemaKeys;\n    if (arr3) {\n      var $propertyKey, i3 = -1,\n        l3 = arr3.length - 1;\n      while (i3 < l3) {\n        $propertyKey = arr3[i3 += 1];\n        var $sch = $schema[$propertyKey];\n        if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n          var $prop = it.util.getProperty($propertyKey),\n            $passData = $data + $prop,\n            $hasDefault = $useDefaults && $sch.default !== undefined;\n          $it.schema = $sch;\n          $it.schemaPath = $schemaPath + $prop;\n          $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($propertyKey);\n          $it.errorPath = it.util.getPath(it.errorPath, $propertyKey, it.opts.jsonPointers);\n          $it.dataPathArr[$dataNxt] = it.util.toQuotedString($propertyKey);\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            $code = it.util.varReplace($code, $nextData, $passData);\n            var $useData = $passData;\n          } else {\n            var $useData = $nextData;\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ';\n          }\n          if ($hasDefault) {\n            out += ' ' + ($code) + ' ';\n          } else {\n            if ($requiredHash && $requiredHash[$propertyKey]) {\n              out += ' if ( ' + ($useData) + ' === undefined ';\n              if ($ownProperties) {\n                out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n              }\n              out += ') { ' + ($nextValid) + ' = false; ';\n              var $currentErrorPath = it.errorPath,\n                $currErrSchemaPath = $errSchemaPath,\n                $missingProperty = it.util.escapeQuotes($propertyKey);\n              if (it.opts._errorDataPathProperty) {\n                it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n              }\n              $errSchemaPath = it.errSchemaPath + '/required';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'';\n                  if (it.opts._errorDataPathProperty) {\n                    out += 'is a required property';\n                  } else {\n                    out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) {\n                /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              $errSchemaPath = $currErrSchemaPath;\n              it.errorPath = $currentErrorPath;\n              out += ' } else { ';\n            } else {\n              if ($breakOnError) {\n                out += ' if ( ' + ($useData) + ' === undefined ';\n                if ($ownProperties) {\n                  out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n                }\n                out += ') { ' + ($nextValid) + ' = true; } else { ';\n              } else {\n                out += ' if (' + ($useData) + ' !== undefined ';\n                if ($ownProperties) {\n                  out += ' &&   Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n                }\n                out += ' ) { ';\n              }\n            }\n            out += ' ' + ($code) + ' } ';\n          }\n        }\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if ($pPropertyKeys.length) {\n    var arr4 = $pPropertyKeys;\n    if (arr4) {\n      var $pProperty, i4 = -1,\n        l4 = arr4.length - 1;\n      while (i4 < l4) {\n        $pProperty = arr4[i4 += 1];\n        var $sch = $pProperties[$pProperty];\n        if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n          $it.schema = $sch;\n          $it.schemaPath = it.schemaPath + '.patternProperties' + it.util.getProperty($pProperty);\n          $it.errSchemaPath = it.errSchemaPath + '/patternProperties/' + it.util.escapeFragment($pProperty);\n          if ($ownProperties) {\n            out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n          } else {\n            out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n          }\n          out += ' if (' + (it.usePattern($pProperty)) + '.test(' + ($key) + ')) { ';\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n          out += ' } ';\n          if ($breakOnError) {\n            out += ' else ' + ($nextValid) + ' = true; ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + ($nextValid) + ') { ';\n            $closingBraces += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_propertyNames(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  out += 'var ' + ($errs) + ' = errors;';\n  if ((it.opts.strictKeywords ? (typeof $schema == 'object' && Object.keys($schema).length > 0) || $schema === false : it.util.schemaHasRules($schema, it.RULES.all))) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    var $key = 'key' + $lvl,\n      $idx = 'idx' + $lvl,\n      $i = 'i' + $lvl,\n      $invalidName = '\\' + ' + $key + ' + \\'',\n      $dataNxt = $it.dataLevel = it.dataLevel + 1,\n      $nextData = 'data' + $dataNxt,\n      $dataProperties = 'dataProperties' + $lvl,\n      $ownProperties = it.opts.ownProperties,\n      $currentBaseId = it.baseId;\n    if ($ownProperties) {\n      out += ' var ' + ($dataProperties) + ' = undefined; ';\n    }\n    if ($ownProperties) {\n      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n    } else {\n      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n    }\n    out += ' var startErrs' + ($lvl) + ' = errors; ';\n    var $passData = $key;\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' if (!' + ($nextValid) + ') { for (var ' + ($i) + '=startErrs' + ($lvl) + '; ' + ($i) + '<errors; ' + ($i) + '++) { vErrors[' + ($i) + '].propertyName = ' + ($key) + '; }   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('propertyNames') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { propertyName: \\'' + ($invalidName) + '\\' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'property name \\\\\\'' + ($invalidName) + '\\\\\\' is invalid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    if ($breakOnError) {\n      out += ' break; ';\n    }\n    out += ' } }';\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_required(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $vSchema = 'schema' + $lvl;\n  if (!$isData) {\n    if ($schema.length < it.opts.loopRequired && it.schema.properties && Object.keys(it.schema.properties).length) {\n      var $required = [];\n      var arr1 = $schema;\n      if (arr1) {\n        var $property, i1 = -1,\n          l1 = arr1.length - 1;\n        while (i1 < l1) {\n          $property = arr1[i1 += 1];\n          var $propertySch = it.schema.properties[$property];\n          if (!($propertySch && (it.opts.strictKeywords ? (typeof $propertySch == 'object' && Object.keys($propertySch).length > 0) || $propertySch === false : it.util.schemaHasRules($propertySch, it.RULES.all)))) {\n            $required[$required.length] = $property;\n          }\n        }\n      }\n    } else {\n      var $required = $schema;\n    }\n  }\n  if ($isData || $required.length) {\n    var $currentErrorPath = it.errorPath,\n      $loopRequired = $isData || $required.length >= it.opts.loopRequired,\n      $ownProperties = it.opts.ownProperties;\n    if ($breakOnError) {\n      out += ' var missing' + ($lvl) + '; ';\n      if ($loopRequired) {\n        if (!$isData) {\n          out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + '; ';\n        }\n        var $i = 'i' + $lvl,\n          $propertyPath = 'schema' + $lvl + '[' + $i + ']',\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);\n        }\n        out += ' var ' + ($valid) + ' = true; ';\n        if ($isData) {\n          out += ' if (schema' + ($lvl) + ' === undefined) ' + ($valid) + ' = true; else if (!Array.isArray(schema' + ($lvl) + ')) ' + ($valid) + ' = false; else {';\n        }\n        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < ' + ($vSchema) + '.length; ' + ($i) + '++) { ' + ($valid) + ' = ' + ($data) + '[' + ($vSchema) + '[' + ($i) + ']] !== undefined ';\n        if ($ownProperties) {\n          out += ' &&   Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + ']) ';\n        }\n        out += '; if (!' + ($valid) + ') break; } ';\n        if ($isData) {\n          out += '  }  ';\n        }\n        out += '  if (!' + ($valid) + ') {   ';\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } else { ';\n      } else {\n        out += ' if ( ';\n        var arr2 = $required;\n        if (arr2) {\n          var $propertyKey, $i = -1,\n            l2 = arr2.length - 1;\n          while ($i < l2) {\n            $propertyKey = arr2[$i += 1];\n            if ($i) {\n              out += ' || ';\n            }\n            var $prop = it.util.getProperty($propertyKey),\n              $useData = $data + $prop;\n            out += ' ( ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? $propertyKey : $prop)) + ') ) ';\n          }\n        }\n        out += ') {  ';\n        var $propertyPath = 'missing' + $lvl,\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;\n        }\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } else { ';\n      }\n    } else {\n      if ($loopRequired) {\n        if (!$isData) {\n          out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + '; ';\n        }\n        var $i = 'i' + $lvl,\n          $propertyPath = 'schema' + $lvl + '[' + $i + ']',\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);\n        }\n        if ($isData) {\n          out += ' if (' + ($vSchema) + ' && !Array.isArray(' + ($vSchema) + ')) {  var err =   '; /* istanbul ignore else */\n          if (it.createErrors !== false) {\n            out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n            if (it.opts.messages !== false) {\n              out += ' , message: \\'';\n              if (it.opts._errorDataPathProperty) {\n                out += 'is a required property';\n              } else {\n                out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n              }\n              out += '\\' ';\n            }\n            if (it.opts.verbose) {\n              out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n            }\n            out += ' } ';\n          } else {\n            out += ' {} ';\n          }\n          out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else if (' + ($vSchema) + ' !== undefined) { ';\n        }\n        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < ' + ($vSchema) + '.length; ' + ($i) + '++) { if (' + ($data) + '[' + ($vSchema) + '[' + ($i) + ']] === undefined ';\n        if ($ownProperties) {\n          out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + ']) ';\n        }\n        out += ') {  var err =   '; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } } ';\n        if ($isData) {\n          out += '  }  ';\n        }\n      } else {\n        var arr3 = $required;\n        if (arr3) {\n          var $propertyKey, i3 = -1,\n            l3 = arr3.length - 1;\n          while (i3 < l3) {\n            $propertyKey = arr3[i3 += 1];\n            var $prop = it.util.getProperty($propertyKey),\n              $missingProperty = it.util.escapeQuotes($propertyKey),\n              $useData = $data + $prop;\n            if (it.opts._errorDataPathProperty) {\n              it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n            }\n            out += ' if ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') {  var err =   '; /* istanbul ignore else */\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'';\n                if (it.opts._errorDataPathProperty) {\n                  out += 'is a required property';\n                } else {\n                  out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n                }\n                out += '\\' ';\n              }\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n              }\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n            out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';\n          }\n        }\n      }\n    }\n    it.errorPath = $currentErrorPath;\n  } else if ($breakOnError) {\n    out += ' if (true) {';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_uniqueItems(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (($schema || $isData) && it.opts.uniqueItems !== false) {\n    if ($isData) {\n      out += ' var ' + ($valid) + '; if (' + ($schemaValue) + ' === false || ' + ($schemaValue) + ' === undefined) ' + ($valid) + ' = true; else if (typeof ' + ($schemaValue) + ' != \\'boolean\\') ' + ($valid) + ' = false; else { ';\n    }\n    out += ' var i = ' + ($data) + '.length , ' + ($valid) + ' = true , j; if (i > 1) { ';\n    var $itemType = it.schema.items && it.schema.items.type,\n      $typeIsArray = Array.isArray($itemType);\n    if (!$itemType || $itemType == 'object' || $itemType == 'array' || ($typeIsArray && ($itemType.indexOf('object') >= 0 || $itemType.indexOf('array') >= 0))) {\n      out += ' outer: for (;i--;) { for (j = i; j--;) { if (equal(' + ($data) + '[i], ' + ($data) + '[j])) { ' + ($valid) + ' = false; break outer; } } } ';\n    } else {\n      out += ' var itemIndices = {}, item; for (;i--;) { var item = ' + ($data) + '[i]; ';\n      var $method = 'checkDataType' + ($typeIsArray ? 's' : '');\n      out += ' if (' + (it.util[$method]($itemType, 'item', it.opts.strictNumbers, true)) + ') continue; ';\n      if ($typeIsArray) {\n        out += ' if (typeof item == \\'string\\') item = \\'\"\\' + item; ';\n      }\n      out += ' if (typeof itemIndices[item] == \\'number\\') { ' + ($valid) + ' = false; j = itemIndices[item]; break; } itemIndices[item] = i; } ';\n    }\n    out += ' } ';\n    if ($isData) {\n      out += '  }  ';\n    }\n    out += ' if (!' + ($valid) + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('uniqueItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { i: i, j: j } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT have duplicate items (items ## \\' + j + \\' and \\' + i + \\' are identical)\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema:  ';\n        if ($isData) {\n          out += 'validate.schema' + ($schemaPath);\n        } else {\n          out += '' + ($schema);\n        }\n        out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n","'use strict';\n\n//all requires must be explicit because browserify won't work with dynamic requires\nmodule.exports = {\n  '$ref': require('./ref'),\n  allOf: require('./allOf'),\n  anyOf: require('./anyOf'),\n  '$comment': require('./comment'),\n  const: require('./const'),\n  contains: require('./contains'),\n  dependencies: require('./dependencies'),\n  'enum': require('./enum'),\n  format: require('./format'),\n  'if': require('./if'),\n  items: require('./items'),\n  maximum: require('./_limit'),\n  minimum: require('./_limit'),\n  maxItems: require('./_limitItems'),\n  minItems: require('./_limitItems'),\n  maxLength: require('./_limitLength'),\n  minLength: require('./_limitLength'),\n  maxProperties: require('./_limitProperties'),\n  minProperties: require('./_limitProperties'),\n  multipleOf: require('./multipleOf'),\n  not: require('./not'),\n  oneOf: require('./oneOf'),\n  pattern: require('./pattern'),\n  properties: require('./properties'),\n  propertyNames: require('./propertyNames'),\n  required: require('./required'),\n  uniqueItems: require('./uniqueItems'),\n  validate: require('./validate')\n};\n","'use strict';\n\nvar ruleModules = require('../dotjs')\n  , toHash = require('./util').toHash;\n\nmodule.exports = function rules() {\n  var RULES = [\n    { type: 'number',\n      rules: [ { 'maximum': ['exclusiveMaximum'] },\n               { 'minimum': ['exclusiveMinimum'] }, 'multipleOf', 'format'] },\n    { type: 'string',\n      rules: [ 'maxLength', 'minLength', 'pattern', 'format' ] },\n    { type: 'array',\n      rules: [ 'maxItems', 'minItems', 'items', 'contains', 'uniqueItems' ] },\n    { type: 'object',\n      rules: [ 'maxProperties', 'minProperties', 'required', 'dependencies', 'propertyNames',\n               { 'properties': ['additionalProperties', 'patternProperties'] } ] },\n    { rules: [ '$ref', 'const', 'enum', 'not', 'anyOf', 'oneOf', 'allOf', 'if' ] }\n  ];\n\n  var ALL = [ 'type', '$comment' ];\n  var KEYWORDS = [\n    '$schema', '$id', 'id', '$data', '$async', 'title',\n    'description', 'default', 'definitions',\n    'examples', 'readOnly', 'writeOnly',\n    'contentMediaType', 'contentEncoding',\n    'additionalItems', 'then', 'else'\n  ];\n  var TYPES = [ 'number', 'integer', 'string', 'array', 'object', 'boolean', 'null' ];\n  RULES.all = toHash(ALL);\n  RULES.types = toHash(TYPES);\n\n  RULES.forEach(function (group) {\n    group.rules = group.rules.map(function (keyword) {\n      var implKeywords;\n      if (typeof keyword == 'object') {\n        var key = Object.keys(keyword)[0];\n        implKeywords = keyword[key];\n        keyword = key;\n        implKeywords.forEach(function (k) {\n          ALL.push(k);\n          RULES.all[k] = true;\n        });\n      }\n      ALL.push(keyword);\n      var rule = RULES.all[keyword] = {\n        keyword: keyword,\n        code: ruleModules[keyword],\n        implements: implKeywords\n      };\n      return rule;\n    });\n\n    RULES.all.$comment = {\n      keyword: '$comment',\n      code: ruleModules.$comment\n    };\n\n    if (group.type) RULES.types[group.type] = group;\n  });\n\n  RULES.keywords = toHash(ALL.concat(KEYWORDS));\n  RULES.custom = {};\n\n  return RULES;\n};\n","'use strict';\n\nvar KEYWORDS = [\n  'multipleOf',\n  'maximum',\n  'exclusiveMaximum',\n  'minimum',\n  'exclusiveMinimum',\n  'maxLength',\n  'minLength',\n  'pattern',\n  'additionalItems',\n  'maxItems',\n  'minItems',\n  'uniqueItems',\n  'maxProperties',\n  'minProperties',\n  'required',\n  'additionalProperties',\n  'enum',\n  'format',\n  'const'\n];\n\nmodule.exports = function (metaSchema, keywordsJsonPointers) {\n  for (var i=0; i<keywordsJsonPointers.length; i++) {\n    metaSchema = JSON.parse(JSON.stringify(metaSchema));\n    var segments = keywordsJsonPointers[i].split('/');\n    var keywords = metaSchema;\n    var j;\n    for (j=1; j<segments.length; j++)\n      keywords = keywords[segments[j]];\n\n    for (j=0; j<KEYWORDS.length; j++) {\n      var key = KEYWORDS[j];\n      var schema = keywords[key];\n      if (schema) {\n        keywords[key] = {\n          anyOf: [\n            schema,\n            { $ref: 'https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#' }\n          ]\n        };\n      }\n    }\n  }\n\n  return metaSchema;\n};\n","'use strict';\n\nvar MissingRefError = require('./error_classes').MissingRef;\n\nmodule.exports = compileAsync;\n\n\n/**\n * Creates validating function for passed schema with asynchronous loading of missing schemas.\n * `loadSchema` option should be a function that accepts schema uri and returns promise that resolves with the schema.\n * @this  Ajv\n * @param {Object}   schema schema object\n * @param {Boolean}  meta optional true to compile meta-schema; this parameter can be skipped\n * @param {Function} callback an optional node-style callback, it is called with 2 parameters: error (or null) and validating function.\n * @return {Promise} promise that resolves with a validating function.\n */\nfunction compileAsync(schema, meta, callback) {\n  /* eslint no-shadow: 0 */\n  /* global Promise */\n  /* jshint validthis: true */\n  var self = this;\n  if (typeof this._opts.loadSchema != 'function')\n    throw new Error('options.loadSchema should be a function');\n\n  if (typeof meta == 'function') {\n    callback = meta;\n    meta = undefined;\n  }\n\n  var p = loadMetaSchemaOf(schema).then(function () {\n    var schemaObj = self._addSchema(schema, undefined, meta);\n    return schemaObj.validate || _compileAsync(schemaObj);\n  });\n\n  if (callback) {\n    p.then(\n      function(v) { callback(null, v); },\n      callback\n    );\n  }\n\n  return p;\n\n\n  function loadMetaSchemaOf(sch) {\n    var $schema = sch.$schema;\n    return $schema && !self.getSchema($schema)\n            ? compileAsync.call(self, { $ref: $schema }, true)\n            : Promise.resolve();\n  }\n\n\n  function _compileAsync(schemaObj) {\n    try { return self._compile(schemaObj); }\n    catch(e) {\n      if (e instanceof MissingRefError) return loadMissingSchema(e);\n      throw e;\n    }\n\n\n    function loadMissingSchema(e) {\n      var ref = e.missingSchema;\n      if (added(ref)) throw new Error('Schema ' + ref + ' is loaded but ' + e.missingRef + ' cannot be resolved');\n\n      var schemaPromise = self._loadingSchemas[ref];\n      if (!schemaPromise) {\n        schemaPromise = self._loadingSchemas[ref] = self._opts.loadSchema(ref);\n        schemaPromise.then(removePromise, removePromise);\n      }\n\n      return schemaPromise.then(function (sch) {\n        if (!added(ref)) {\n          return loadMetaSchemaOf(sch).then(function () {\n            if (!added(ref)) self.addSchema(sch, ref, undefined, meta);\n          });\n        }\n      }).then(function() {\n        return _compileAsync(schemaObj);\n      });\n\n      function removePromise() {\n        delete self._loadingSchemas[ref];\n      }\n\n      function added(ref) {\n        return self._refs[ref] || self._schemas[ref];\n      }\n    }\n  }\n}\n","'use strict';\nmodule.exports = function generate_custom(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $rule = this,\n    $definition = 'definition' + $lvl,\n    $rDef = $rule.definition,\n    $closingBraces = '';\n  var $compile, $inline, $macro, $ruleValidate, $validateCode;\n  if ($isData && $rDef.$data) {\n    $validateCode = 'keywordValidate' + $lvl;\n    var $validateSchema = $rDef.validateSchema;\n    out += ' var ' + ($definition) + ' = RULES.custom[\\'' + ($keyword) + '\\'].definition; var ' + ($validateCode) + ' = ' + ($definition) + '.validate;';\n  } else {\n    $ruleValidate = it.useCustomRule($rule, $schema, it.schema, it);\n    if (!$ruleValidate) return;\n    $schemaValue = 'validate.schema' + $schemaPath;\n    $validateCode = $ruleValidate.code;\n    $compile = $rDef.compile;\n    $inline = $rDef.inline;\n    $macro = $rDef.macro;\n  }\n  var $ruleErrs = $validateCode + '.errors',\n    $i = 'i' + $lvl,\n    $ruleErr = 'ruleErr' + $lvl,\n    $asyncKeyword = $rDef.async;\n  if ($asyncKeyword && !it.async) throw new Error('async keyword in sync schema');\n  if (!($inline || $macro)) {\n    out += '' + ($ruleErrs) + ' = null;';\n  }\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if ($isData && $rDef.$data) {\n    $closingBraces += '}';\n    out += ' if (' + ($schemaValue) + ' === undefined) { ' + ($valid) + ' = true; } else { ';\n    if ($validateSchema) {\n      $closingBraces += '}';\n      out += ' ' + ($valid) + ' = ' + ($definition) + '.validateSchema(' + ($schemaValue) + '); if (' + ($valid) + ') { ';\n    }\n  }\n  if ($inline) {\n    if ($rDef.statements) {\n      out += ' ' + ($ruleValidate.validate) + ' ';\n    } else {\n      out += ' ' + ($valid) + ' = ' + ($ruleValidate.validate) + '; ';\n    }\n  } else if ($macro) {\n    var $it = it.util.copy(it);\n    var $closingBraces = '';\n    $it.level++;\n    var $nextValid = 'valid' + $it.level;\n    $it.schema = $ruleValidate.validate;\n    $it.schemaPath = '';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var $code = it.validate($it).replace(/validate\\.schema/g, $validateCode);\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($code);\n  } else {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    out += '  ' + ($validateCode) + '.call( ';\n    if (it.opts.passContext) {\n      out += 'this';\n    } else {\n      out += 'self';\n    }\n    if ($compile || $rDef.schema === false) {\n      out += ' , ' + ($data) + ' ';\n    } else {\n      out += ' , ' + ($schemaValue) + ' , ' + ($data) + ' , validate.schema' + (it.schemaPath) + ' ';\n    }\n    out += ' , (dataPath || \\'\\')';\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + (it.errorPath);\n    }\n    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ' , rootData )  ';\n    var def_callRuleValidate = out;\n    out = $$outStack.pop();\n    if ($rDef.errors === false) {\n      out += ' ' + ($valid) + ' = ';\n      if ($asyncKeyword) {\n        out += 'await ';\n      }\n      out += '' + (def_callRuleValidate) + '; ';\n    } else {\n      if ($asyncKeyword) {\n        $ruleErrs = 'customErrors' + $lvl;\n        out += ' var ' + ($ruleErrs) + ' = null; try { ' + ($valid) + ' = await ' + (def_callRuleValidate) + '; } catch (e) { ' + ($valid) + ' = false; if (e instanceof ValidationError) ' + ($ruleErrs) + ' = e.errors; else throw e; } ';\n      } else {\n        out += ' ' + ($ruleErrs) + ' = null; ' + ($valid) + ' = ' + (def_callRuleValidate) + '; ';\n      }\n    }\n  }\n  if ($rDef.modifying) {\n    out += ' if (' + ($parentData) + ') ' + ($data) + ' = ' + ($parentData) + '[' + ($parentDataProperty) + '];';\n  }\n  out += '' + ($closingBraces);\n  if ($rDef.valid) {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  } else {\n    out += ' if ( ';\n    if ($rDef.valid === undefined) {\n      out += ' !';\n      if ($macro) {\n        out += '' + ($nextValid);\n      } else {\n        out += '' + ($valid);\n      }\n    } else {\n      out += ' ' + (!$rDef.valid) + ' ';\n    }\n    out += ') { ';\n    $errorKeyword = $rule.keyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || 'custom') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \\'' + ($rule.keyword) + '\\' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should pass \"' + ($rule.keyword) + '\" keyword validation\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    var def_customError = out;\n    out = $$outStack.pop();\n    if ($inline) {\n      if ($rDef.errors) {\n        if ($rDef.errors != 'full') {\n          out += '  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\"; } ';\n          if (it.opts.verbose) {\n            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n          }\n          out += ' } ';\n        }\n      } else {\n        if ($rDef.errors === false) {\n          out += ' ' + (def_customError) + ' ';\n        } else {\n          out += ' if (' + ($errs) + ' == errors) { ' + (def_customError) + ' } else {  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\"; } ';\n          if (it.opts.verbose) {\n            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n          }\n          out += ' } } ';\n        }\n      }\n    } else if ($macro) {\n      out += '   var err =   '; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'custom') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \\'' + ($rule.keyword) + '\\' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should pass \"' + ($rule.keyword) + '\" keyword validation\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError(vErrors); ';\n        } else {\n          out += ' validate.errors = vErrors; return false; ';\n        }\n      }\n    } else {\n      if ($rDef.errors === false) {\n        out += ' ' + (def_customError) + ' ';\n      } else {\n        out += ' if (Array.isArray(' + ($ruleErrs) + ')) { if (vErrors === null) vErrors = ' + ($ruleErrs) + '; else vErrors = vErrors.concat(' + ($ruleErrs) + '); errors = vErrors.length;  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + ';  ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\";  ';\n        if (it.opts.verbose) {\n          out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n        }\n        out += ' } } else { ' + (def_customError) + ' } ';\n      }\n    }\n    out += ' } ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  }\n  return out;\n}\n","'use strict';\n\nvar metaSchema = require('./refs/json-schema-draft-07.json');\n\nmodule.exports = {\n  $id: 'https://github.com/ajv-validator/ajv/blob/master/lib/definition_schema.js',\n  definitions: {\n    simpleTypes: metaSchema.definitions.simpleTypes\n  },\n  type: 'object',\n  dependencies: {\n    schema: ['validate'],\n    $data: ['validate'],\n    statements: ['inline'],\n    valid: {not: {required: ['macro']}}\n  },\n  properties: {\n    type: metaSchema.properties.type,\n    schema: {type: 'boolean'},\n    statements: {type: 'boolean'},\n    dependencies: {\n      type: 'array',\n      items: {type: 'string'}\n    },\n    metaSchema: {type: 'object'},\n    modifying: {type: 'boolean'},\n    valid: {type: 'boolean'},\n    $data: {type: 'boolean'},\n    async: {type: 'boolean'},\n    errors: {\n      anyOf: [\n        {type: 'boolean'},\n        {const: 'full'}\n      ]\n    }\n  }\n};\n","'use strict';\n\nvar IDENTIFIER = /^[a-z_$][a-z0-9_$-]*$/i;\nvar customRuleCode = require('./dotjs/custom');\nvar definitionSchema = require('./definition_schema');\n\nmodule.exports = {\n  add: addKeyword,\n  get: getKeyword,\n  remove: removeKeyword,\n  validate: validateKeyword\n};\n\n\n/**\n * Define custom keyword\n * @this  Ajv\n * @param {String} keyword custom keyword, should be unique (including different from all standard, custom and macro keywords).\n * @param {Object} definition keyword definition object with properties `type` (type(s) which the keyword applies to), `validate` or `compile`.\n * @return {Ajv} this for method chaining\n */\nfunction addKeyword(keyword, definition) {\n  /* jshint validthis: true */\n  /* eslint no-shadow: 0 */\n  var RULES = this.RULES;\n  if (RULES.keywords[keyword])\n    throw new Error('Keyword ' + keyword + ' is already defined');\n\n  if (!IDENTIFIER.test(keyword))\n    throw new Error('Keyword ' + keyword + ' is not a valid identifier');\n\n  if (definition) {\n    this.validateKeyword(definition, true);\n\n    var dataType = definition.type;\n    if (Array.isArray(dataType)) {\n      for (var i=0; i<dataType.length; i++)\n        _addRule(keyword, dataType[i], definition);\n    } else {\n      _addRule(keyword, dataType, definition);\n    }\n\n    var metaSchema = definition.metaSchema;\n    if (metaSchema) {\n      if (definition.$data && this._opts.$data) {\n        metaSchema = {\n          anyOf: [\n            metaSchema,\n            { '$ref': 'https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#' }\n          ]\n        };\n      }\n      definition.validateSchema = this.compile(metaSchema, true);\n    }\n  }\n\n  RULES.keywords[keyword] = RULES.all[keyword] = true;\n\n\n  function _addRule(keyword, dataType, definition) {\n    var ruleGroup;\n    for (var i=0; i<RULES.length; i++) {\n      var rg = RULES[i];\n      if (rg.type == dataType) {\n        ruleGroup = rg;\n        break;\n      }\n    }\n\n    if (!ruleGroup) {\n      ruleGroup = { type: dataType, rules: [] };\n      RULES.push(ruleGroup);\n    }\n\n    var rule = {\n      keyword: keyword,\n      definition: definition,\n      custom: true,\n      code: customRuleCode,\n      implements: definition.implements\n    };\n    ruleGroup.rules.push(rule);\n    RULES.custom[keyword] = rule;\n  }\n\n  return this;\n}\n\n\n/**\n * Get keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n * @return {Object|Boolean} custom keyword definition, `true` if it is a predefined keyword, `false` otherwise.\n */\nfunction getKeyword(keyword) {\n  /* jshint validthis: true */\n  var rule = this.RULES.custom[keyword];\n  return rule ? rule.definition : this.RULES.keywords[keyword] || false;\n}\n\n\n/**\n * Remove keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n * @return {Ajv} this for method chaining\n */\nfunction removeKeyword(keyword) {\n  /* jshint validthis: true */\n  var RULES = this.RULES;\n  delete RULES.keywords[keyword];\n  delete RULES.all[keyword];\n  delete RULES.custom[keyword];\n  for (var i=0; i<RULES.length; i++) {\n    var rules = RULES[i].rules;\n    for (var j=0; j<rules.length; j++) {\n      if (rules[j].keyword == keyword) {\n        rules.splice(j, 1);\n        break;\n      }\n    }\n  }\n  return this;\n}\n\n\n/**\n * Validate keyword definition\n * @this  Ajv\n * @param {Object} definition keyword definition object.\n * @param {Boolean} throwError true to throw exception if definition is invalid\n * @return {boolean} validation result\n */\nfunction validateKeyword(definition, throwError) {\n  validateKeyword.errors = null;\n  var v = this._validateKeyword = this._validateKeyword\n                                  || this.compile(definitionSchema, true);\n\n  if (v(definition)) return true;\n  validateKeyword.errors = v.errors;\n  if (throwError)\n    throw new Error('custom keyword definition is invalid: '  + this.errorsText(v.errors));\n  else\n    return false;\n}\n","'use strict';\n\nvar compileSchema = require('./compile')\n  , resolve = require('./compile/resolve')\n  , Cache = require('./cache')\n  , SchemaObject = require('./compile/schema_obj')\n  , stableStringify = require('fast-json-stable-stringify')\n  , formats = require('./compile/formats')\n  , rules = require('./compile/rules')\n  , $dataMetaSchema = require('./data')\n  , util = require('./compile/util');\n\nmodule.exports = Ajv;\n\nAjv.prototype.validate = validate;\nAjv.prototype.compile = compile;\nAjv.prototype.addSchema = addSchema;\nAjv.prototype.addMetaSchema = addMetaSchema;\nAjv.prototype.validateSchema = validateSchema;\nAjv.prototype.getSchema = getSchema;\nAjv.prototype.removeSchema = removeSchema;\nAjv.prototype.addFormat = addFormat;\nAjv.prototype.errorsText = errorsText;\n\nAjv.prototype._addSchema = _addSchema;\nAjv.prototype._compile = _compile;\n\nAjv.prototype.compileAsync = require('./compile/async');\nvar customKeyword = require('./keyword');\nAjv.prototype.addKeyword = customKeyword.add;\nAjv.prototype.getKeyword = customKeyword.get;\nAjv.prototype.removeKeyword = customKeyword.remove;\nAjv.prototype.validateKeyword = customKeyword.validate;\n\nvar errorClasses = require('./compile/error_classes');\nAjv.ValidationError = errorClasses.Validation;\nAjv.MissingRefError = errorClasses.MissingRef;\nAjv.$dataMetaSchema = $dataMetaSchema;\n\nvar META_SCHEMA_ID = 'http://json-schema.org/draft-07/schema';\n\nvar META_IGNORE_OPTIONS = [ 'removeAdditional', 'useDefaults', 'coerceTypes', 'strictDefaults' ];\nvar META_SUPPORT_DATA = ['/properties'];\n\n/**\n * Creates validator instance.\n * Usage: `Ajv(opts)`\n * @param {Object} opts optional options\n * @return {Object} ajv instance\n */\nfunction Ajv(opts) {\n  if (!(this instanceof Ajv)) return new Ajv(opts);\n  opts = this._opts = util.copy(opts) || {};\n  setLogger(this);\n  this._schemas = {};\n  this._refs = {};\n  this._fragments = {};\n  this._formats = formats(opts.format);\n\n  this._cache = opts.cache || new Cache;\n  this._loadingSchemas = {};\n  this._compilations = [];\n  this.RULES = rules();\n  this._getId = chooseGetId(opts);\n\n  opts.loopRequired = opts.loopRequired || Infinity;\n  if (opts.errorDataPath == 'property') opts._errorDataPathProperty = true;\n  if (opts.serialize === undefined) opts.serialize = stableStringify;\n  this._metaOpts = getMetaSchemaOptions(this);\n\n  if (opts.formats) addInitialFormats(this);\n  if (opts.keywords) addInitialKeywords(this);\n  addDefaultMetaSchema(this);\n  if (typeof opts.meta == 'object') this.addMetaSchema(opts.meta);\n  if (opts.nullable) this.addKeyword('nullable', {metaSchema: {type: 'boolean'}});\n  addInitialSchemas(this);\n}\n\n\n\n/**\n * Validate data using schema\n * Schema will be compiled and cached (using serialized JSON as key. [fast-json-stable-stringify](https://github.com/epoberezkin/fast-json-stable-stringify) is used to serialize.\n * @this   Ajv\n * @param  {String|Object} schemaKeyRef key, ref or schema object\n * @param  {Any} data to be validated\n * @return {Boolean} validation result. Errors from the last validation will be available in `ajv.errors` (and also in compiled schema: `schema.errors`).\n */\nfunction validate(schemaKeyRef, data) {\n  var v;\n  if (typeof schemaKeyRef == 'string') {\n    v = this.getSchema(schemaKeyRef);\n    if (!v) throw new Error('no schema with key or ref \"' + schemaKeyRef + '\"');\n  } else {\n    var schemaObj = this._addSchema(schemaKeyRef);\n    v = schemaObj.validate || this._compile(schemaObj);\n  }\n\n  var valid = v(data);\n  if (v.$async !== true) this.errors = v.errors;\n  return valid;\n}\n\n\n/**\n * Create validating function for passed schema.\n * @this   Ajv\n * @param  {Object} schema schema object\n * @param  {Boolean} _meta true if schema is a meta-schema. Used internally to compile meta schemas of custom keywords.\n * @return {Function} validating function\n */\nfunction compile(schema, _meta) {\n  var schemaObj = this._addSchema(schema, undefined, _meta);\n  return schemaObj.validate || this._compile(schemaObj);\n}\n\n\n/**\n * Adds schema to the instance.\n * @this   Ajv\n * @param {Object|Array} schema schema or array of schemas. If array is passed, `key` and other parameters will be ignored.\n * @param {String} key Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n * @param {Boolean} _skipValidation true to skip schema validation. Used internally, option validateSchema should be used instead.\n * @param {Boolean} _meta true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n * @return {Ajv} this for method chaining\n */\nfunction addSchema(schema, key, _skipValidation, _meta) {\n  if (Array.isArray(schema)){\n    for (var i=0; i<schema.length; i++) this.addSchema(schema[i], undefined, _skipValidation, _meta);\n    return this;\n  }\n  var id = this._getId(schema);\n  if (id !== undefined && typeof id != 'string')\n    throw new Error('schema id must be string');\n  key = resolve.normalizeId(key || id);\n  checkUnique(this, key);\n  this._schemas[key] = this._addSchema(schema, _skipValidation, _meta, true);\n  return this;\n}\n\n\n/**\n * Add schema that will be used to validate other schemas\n * options in META_IGNORE_OPTIONS are alway set to false\n * @this   Ajv\n * @param {Object} schema schema object\n * @param {String} key optional schema key\n * @param {Boolean} skipValidation true to skip schema validation, can be used to override validateSchema option for meta-schema\n * @return {Ajv} this for method chaining\n */\nfunction addMetaSchema(schema, key, skipValidation) {\n  this.addSchema(schema, key, skipValidation, true);\n  return this;\n}\n\n\n/**\n * Validate schema\n * @this   Ajv\n * @param {Object} schema schema to validate\n * @param {Boolean} throwOrLogError pass true to throw (or log) an error if invalid\n * @return {Boolean} true if schema is valid\n */\nfunction validateSchema(schema, throwOrLogError) {\n  var $schema = schema.$schema;\n  if ($schema !== undefined && typeof $schema != 'string')\n    throw new Error('$schema must be a string');\n  $schema = $schema || this._opts.defaultMeta || defaultMeta(this);\n  if (!$schema) {\n    this.logger.warn('meta-schema not available');\n    this.errors = null;\n    return true;\n  }\n  var valid = this.validate($schema, schema);\n  if (!valid && throwOrLogError) {\n    var message = 'schema is invalid: ' + this.errorsText();\n    if (this._opts.validateSchema == 'log') this.logger.error(message);\n    else throw new Error(message);\n  }\n  return valid;\n}\n\n\nfunction defaultMeta(self) {\n  var meta = self._opts.meta;\n  self._opts.defaultMeta = typeof meta == 'object'\n                            ? self._getId(meta) || meta\n                            : self.getSchema(META_SCHEMA_ID)\n                              ? META_SCHEMA_ID\n                              : undefined;\n  return self._opts.defaultMeta;\n}\n\n\n/**\n * Get compiled schema from the instance by `key` or `ref`.\n * @this   Ajv\n * @param  {String} keyRef `key` that was passed to `addSchema` or full schema reference (`schema.id` or resolved id).\n * @return {Function} schema validating function (with property `schema`).\n */\nfunction getSchema(keyRef) {\n  var schemaObj = _getSchemaObj(this, keyRef);\n  switch (typeof schemaObj) {\n    case 'object': return schemaObj.validate || this._compile(schemaObj);\n    case 'string': return this.getSchema(schemaObj);\n    case 'undefined': return _getSchemaFragment(this, keyRef);\n  }\n}\n\n\nfunction _getSchemaFragment(self, ref) {\n  var res = resolve.schema.call(self, { schema: {} }, ref);\n  if (res) {\n    var schema = res.schema\n      , root = res.root\n      , baseId = res.baseId;\n    var v = compileSchema.call(self, schema, root, undefined, baseId);\n    self._fragments[ref] = new SchemaObject({\n      ref: ref,\n      fragment: true,\n      schema: schema,\n      root: root,\n      baseId: baseId,\n      validate: v\n    });\n    return v;\n  }\n}\n\n\nfunction _getSchemaObj(self, keyRef) {\n  keyRef = resolve.normalizeId(keyRef);\n  return self._schemas[keyRef] || self._refs[keyRef] || self._fragments[keyRef];\n}\n\n\n/**\n * Remove cached schema(s).\n * If no parameter is passed all schemas but meta-schemas are removed.\n * If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n * Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n * @this   Ajv\n * @param  {String|Object|RegExp} schemaKeyRef key, ref, pattern to match key/ref or schema object\n * @return {Ajv} this for method chaining\n */\nfunction removeSchema(schemaKeyRef) {\n  if (schemaKeyRef instanceof RegExp) {\n    _removeAllSchemas(this, this._schemas, schemaKeyRef);\n    _removeAllSchemas(this, this._refs, schemaKeyRef);\n    return this;\n  }\n  switch (typeof schemaKeyRef) {\n    case 'undefined':\n      _removeAllSchemas(this, this._schemas);\n      _removeAllSchemas(this, this._refs);\n      this._cache.clear();\n      return this;\n    case 'string':\n      var schemaObj = _getSchemaObj(this, schemaKeyRef);\n      if (schemaObj) this._cache.del(schemaObj.cacheKey);\n      delete this._schemas[schemaKeyRef];\n      delete this._refs[schemaKeyRef];\n      return this;\n    case 'object':\n      var serialize = this._opts.serialize;\n      var cacheKey = serialize ? serialize(schemaKeyRef) : schemaKeyRef;\n      this._cache.del(cacheKey);\n      var id = this._getId(schemaKeyRef);\n      if (id) {\n        id = resolve.normalizeId(id);\n        delete this._schemas[id];\n        delete this._refs[id];\n      }\n  }\n  return this;\n}\n\n\nfunction _removeAllSchemas(self, schemas, regex) {\n  for (var keyRef in schemas) {\n    var schemaObj = schemas[keyRef];\n    if (!schemaObj.meta && (!regex || regex.test(keyRef))) {\n      self._cache.del(schemaObj.cacheKey);\n      delete schemas[keyRef];\n    }\n  }\n}\n\n\n/* @this   Ajv */\nfunction _addSchema(schema, skipValidation, meta, shouldAddSchema) {\n  if (typeof schema != 'object' && typeof schema != 'boolean')\n    throw new Error('schema should be object or boolean');\n  var serialize = this._opts.serialize;\n  var cacheKey = serialize ? serialize(schema) : schema;\n  var cached = this._cache.get(cacheKey);\n  if (cached) return cached;\n\n  shouldAddSchema = shouldAddSchema || this._opts.addUsedSchema !== false;\n\n  var id = resolve.normalizeId(this._getId(schema));\n  if (id && shouldAddSchema) checkUnique(this, id);\n\n  var willValidate = this._opts.validateSchema !== false && !skipValidation;\n  var recursiveMeta;\n  if (willValidate && !(recursiveMeta = id && id == resolve.normalizeId(schema.$schema)))\n    this.validateSchema(schema, true);\n\n  var localRefs = resolve.ids.call(this, schema);\n\n  var schemaObj = new SchemaObject({\n    id: id,\n    schema: schema,\n    localRefs: localRefs,\n    cacheKey: cacheKey,\n    meta: meta\n  });\n\n  if (id[0] != '#' && shouldAddSchema) this._refs[id] = schemaObj;\n  this._cache.put(cacheKey, schemaObj);\n\n  if (willValidate && recursiveMeta) this.validateSchema(schema, true);\n\n  return schemaObj;\n}\n\n\n/* @this   Ajv */\nfunction _compile(schemaObj, root) {\n  if (schemaObj.compiling) {\n    schemaObj.validate = callValidate;\n    callValidate.schema = schemaObj.schema;\n    callValidate.errors = null;\n    callValidate.root = root ? root : callValidate;\n    if (schemaObj.schema.$async === true)\n      callValidate.$async = true;\n    return callValidate;\n  }\n  schemaObj.compiling = true;\n\n  var currentOpts;\n  if (schemaObj.meta) {\n    currentOpts = this._opts;\n    this._opts = this._metaOpts;\n  }\n\n  var v;\n  try { v = compileSchema.call(this, schemaObj.schema, root, schemaObj.localRefs); }\n  catch(e) {\n    delete schemaObj.validate;\n    throw e;\n  }\n  finally {\n    schemaObj.compiling = false;\n    if (schemaObj.meta) this._opts = currentOpts;\n  }\n\n  schemaObj.validate = v;\n  schemaObj.refs = v.refs;\n  schemaObj.refVal = v.refVal;\n  schemaObj.root = v.root;\n  return v;\n\n\n  /* @this   {*} - custom context, see passContext option */\n  function callValidate() {\n    /* jshint validthis: true */\n    var _validate = schemaObj.validate;\n    var result = _validate.apply(this, arguments);\n    callValidate.errors = _validate.errors;\n    return result;\n  }\n}\n\n\nfunction chooseGetId(opts) {\n  switch (opts.schemaId) {\n    case 'auto': return _get$IdOrId;\n    case 'id': return _getId;\n    default: return _get$Id;\n  }\n}\n\n/* @this   Ajv */\nfunction _getId(schema) {\n  if (schema.$id) this.logger.warn('schema $id ignored', schema.$id);\n  return schema.id;\n}\n\n/* @this   Ajv */\nfunction _get$Id(schema) {\n  if (schema.id) this.logger.warn('schema id ignored', schema.id);\n  return schema.$id;\n}\n\n\nfunction _get$IdOrId(schema) {\n  if (schema.$id && schema.id && schema.$id != schema.id)\n    throw new Error('schema $id is different from id');\n  return schema.$id || schema.id;\n}\n\n\n/**\n * Convert array of error message objects to string\n * @this   Ajv\n * @param  {Array<Object>} errors optional array of validation errors, if not passed errors from the instance are used.\n * @param  {Object} options optional options with properties `separator` and `dataVar`.\n * @return {String} human readable string with all errors descriptions\n */\nfunction errorsText(errors, options) {\n  errors = errors || this.errors;\n  if (!errors) return 'No errors';\n  options = options || {};\n  var separator = options.separator === undefined ? ', ' : options.separator;\n  var dataVar = options.dataVar === undefined ? 'data' : options.dataVar;\n\n  var text = '';\n  for (var i=0; i<errors.length; i++) {\n    var e = errors[i];\n    if (e) text += dataVar + e.dataPath + ' ' + e.message + separator;\n  }\n  return text.slice(0, -separator.length);\n}\n\n\n/**\n * Add custom format\n * @this   Ajv\n * @param {String} name format name\n * @param {String|RegExp|Function} format string is converted to RegExp; function should return boolean (true when valid)\n * @return {Ajv} this for method chaining\n */\nfunction addFormat(name, format) {\n  if (typeof format == 'string') format = new RegExp(format);\n  this._formats[name] = format;\n  return this;\n}\n\n\nfunction addDefaultMetaSchema(self) {\n  var $dataSchema;\n  if (self._opts.$data) {\n    $dataSchema = require('./refs/data.json');\n    self.addMetaSchema($dataSchema, $dataSchema.$id, true);\n  }\n  if (self._opts.meta === false) return;\n  var metaSchema = require('./refs/json-schema-draft-07.json');\n  if (self._opts.$data) metaSchema = $dataMetaSchema(metaSchema, META_SUPPORT_DATA);\n  self.addMetaSchema(metaSchema, META_SCHEMA_ID, true);\n  self._refs['http://json-schema.org/schema'] = META_SCHEMA_ID;\n}\n\n\nfunction addInitialSchemas(self) {\n  var optsSchemas = self._opts.schemas;\n  if (!optsSchemas) return;\n  if (Array.isArray(optsSchemas)) self.addSchema(optsSchemas);\n  else for (var key in optsSchemas) self.addSchema(optsSchemas[key], key);\n}\n\n\nfunction addInitialFormats(self) {\n  for (var name in self._opts.formats) {\n    var format = self._opts.formats[name];\n    self.addFormat(name, format);\n  }\n}\n\n\nfunction addInitialKeywords(self) {\n  for (var name in self._opts.keywords) {\n    var keyword = self._opts.keywords[name];\n    self.addKeyword(name, keyword);\n  }\n}\n\n\nfunction checkUnique(self, id) {\n  if (self._schemas[id] || self._refs[id])\n    throw new Error('schema with key or id \"' + id + '\" already exists');\n}\n\n\nfunction getMetaSchemaOptions(self) {\n  var metaOpts = util.copy(self._opts);\n  for (var i=0; i<META_IGNORE_OPTIONS.length; i++)\n    delete metaOpts[META_IGNORE_OPTIONS[i]];\n  return metaOpts;\n}\n\n\nfunction setLogger(self) {\n  var logger = self._opts.logger;\n  if (logger === false) {\n    self.logger = {log: noop, warn: noop, error: noop};\n  } else {\n    if (logger === undefined) logger = console;\n    if (!(typeof logger == 'object' && logger.log && logger.warn && logger.error))\n      throw new Error('logger must implement log, warn and error methods');\n    self.logger = logger;\n  }\n}\n\n\nfunction noop() {}\n","import { mergeCapabilities, Protocol, ProtocolOptions, RequestOptions } from '../shared/protocol.js';\nimport { Transport } from '../shared/transport.js';\nimport {\n    CallToolRequest,\n    CallToolResultSchema,\n    ClientCapabilities,\n    ClientNotification,\n    ClientRequest,\n    ClientResult,\n    CompatibilityCallToolResultSchema,\n    CompleteRequest,\n    CompleteResultSchema,\n    EmptyResultSchema,\n    GetPromptRequest,\n    GetPromptResultSchema,\n    Implementation,\n    InitializeResultSchema,\n    LATEST_PROTOCOL_VERSION,\n    ListPromptsRequest,\n    ListPromptsResultSchema,\n    ListResourcesRequest,\n    ListResourcesResultSchema,\n    ListResourceTemplatesRequest,\n    ListResourceTemplatesResultSchema,\n    ListToolsRequest,\n    ListToolsResultSchema,\n    LoggingLevel,\n    Notification,\n    ReadResourceRequest,\n    ReadResourceResultSchema,\n    Request,\n    Result,\n    ServerCapabilities,\n    SubscribeRequest,\n    SUPPORTED_PROTOCOL_VERSIONS,\n    UnsubscribeRequest,\n    Tool,\n    ErrorCode,\n    McpError\n} from '../types.js';\nimport Ajv from 'ajv';\nimport type { ValidateFunction } from 'ajv';\n\nexport type ClientOptions = ProtocolOptions & {\n    /**\n     * Capabilities to advertise as being supported by this client.\n     */\n    capabilities?: ClientCapabilities;\n};\n\n/**\n * An MCP client on top of a pluggable transport.\n *\n * The client will automatically begin the initialization flow with the server when connect() is called.\n *\n * To use with custom types, extend the base Request/Notification/Result types and pass them as type parameters:\n *\n * ```typescript\n * // Custom schemas\n * const CustomRequestSchema = RequestSchema.extend({...})\n * const CustomNotificationSchema = NotificationSchema.extend({...})\n * const CustomResultSchema = ResultSchema.extend({...})\n *\n * // Type aliases\n * type CustomRequest = z.infer<typeof CustomRequestSchema>\n * type CustomNotification = z.infer<typeof CustomNotificationSchema>\n * type CustomResult = z.infer<typeof CustomResultSchema>\n *\n * // Create typed client\n * const client = new Client<CustomRequest, CustomNotification, CustomResult>({\n *   name: \"CustomClient\",\n *   version: \"1.0.0\"\n * })\n * ```\n */\nexport class Client<\n    RequestT extends Request = Request,\n    NotificationT extends Notification = Notification,\n    ResultT extends Result = Result\n> extends Protocol<ClientRequest | RequestT, ClientNotification | NotificationT, ClientResult | ResultT> {\n    private _serverCapabilities?: ServerCapabilities;\n    private _serverVersion?: Implementation;\n    private _capabilities: ClientCapabilities;\n    private _instructions?: string;\n    private _cachedToolOutputValidators: Map<string, ValidateFunction> = new Map();\n    private _ajv: InstanceType<typeof Ajv>;\n\n    /**\n     * Initializes this client with the given name and version information.\n     */\n    constructor(\n        private _clientInfo: Implementation,\n        options?: ClientOptions\n    ) {\n        super(options);\n        this._capabilities = options?.capabilities ?? {};\n        this._ajv = new Ajv();\n    }\n\n    /**\n     * Registers new capabilities. This can only be called before connecting to a transport.\n     *\n     * The new capabilities will be merged with any existing capabilities previously given (e.g., at initialization).\n     */\n    public registerCapabilities(capabilities: ClientCapabilities): void {\n        if (this.transport) {\n            throw new Error('Cannot register capabilities after connecting to transport');\n        }\n\n        this._capabilities = mergeCapabilities(this._capabilities, capabilities);\n    }\n\n    protected assertCapability(capability: keyof ServerCapabilities, method: string): void {\n        if (!this._serverCapabilities?.[capability]) {\n            throw new Error(`Server does not support ${capability} (required for ${method})`);\n        }\n    }\n\n    override async connect(transport: Transport, options?: RequestOptions): Promise<void> {\n        await super.connect(transport);\n        // When transport sessionId is already set this means we are trying to reconnect.\n        // In this case we don't need to initialize again.\n        if (transport.sessionId !== undefined) {\n            return;\n        }\n        try {\n            const result = await this.request(\n                {\n                    method: 'initialize',\n                    params: {\n                        protocolVersion: LATEST_PROTOCOL_VERSION,\n                        capabilities: this._capabilities,\n                        clientInfo: this._clientInfo\n                    }\n                },\n                InitializeResultSchema,\n                options\n            );\n\n            if (result === undefined) {\n                throw new Error(`Server sent invalid initialize result: ${result}`);\n            }\n\n            if (!SUPPORTED_PROTOCOL_VERSIONS.includes(result.protocolVersion)) {\n                throw new Error(`Server's protocol version is not supported: ${result.protocolVersion}`);\n            }\n\n            this._serverCapabilities = result.capabilities;\n            this._serverVersion = result.serverInfo;\n            // HTTP transports must set the protocol version in each header after initialization.\n            if (transport.setProtocolVersion) {\n                transport.setProtocolVersion(result.protocolVersion);\n            }\n\n            this._instructions = result.instructions;\n\n            await this.notification({\n                method: 'notifications/initialized'\n            });\n        } catch (error) {\n            // Disconnect if initialization fails.\n            void this.close();\n            throw error;\n        }\n    }\n\n    /**\n     * After initialization has completed, this will be populated with the server's reported capabilities.\n     */\n    getServerCapabilities(): ServerCapabilities | undefined {\n        return this._serverCapabilities;\n    }\n\n    /**\n     * After initialization has completed, this will be populated with information about the server's name and version.\n     */\n    getServerVersion(): Implementation | undefined {\n        return this._serverVersion;\n    }\n\n    /**\n     * After initialization has completed, this may be populated with information about the server's instructions.\n     */\n    getInstructions(): string | undefined {\n        return this._instructions;\n    }\n\n    protected assertCapabilityForMethod(method: RequestT['method']): void {\n        switch (method as ClientRequest['method']) {\n            case 'logging/setLevel':\n                if (!this._serverCapabilities?.logging) {\n                    throw new Error(`Server does not support logging (required for ${method})`);\n                }\n                break;\n\n            case 'prompts/get':\n            case 'prompts/list':\n                if (!this._serverCapabilities?.prompts) {\n                    throw new Error(`Server does not support prompts (required for ${method})`);\n                }\n                break;\n\n            case 'resources/list':\n            case 'resources/templates/list':\n            case 'resources/read':\n            case 'resources/subscribe':\n            case 'resources/unsubscribe':\n                if (!this._serverCapabilities?.resources) {\n                    throw new Error(`Server does not support resources (required for ${method})`);\n                }\n\n                if (method === 'resources/subscribe' && !this._serverCapabilities.resources.subscribe) {\n                    throw new Error(`Server does not support resource subscriptions (required for ${method})`);\n                }\n\n                break;\n\n            case 'tools/call':\n            case 'tools/list':\n                if (!this._serverCapabilities?.tools) {\n                    throw new Error(`Server does not support tools (required for ${method})`);\n                }\n                break;\n\n            case 'completion/complete':\n                if (!this._serverCapabilities?.completions) {\n                    throw new Error(`Server does not support completions (required for ${method})`);\n                }\n                break;\n\n            case 'initialize':\n                // No specific capability required for initialize\n                break;\n\n            case 'ping':\n                // No specific capability required for ping\n                break;\n        }\n    }\n\n    protected assertNotificationCapability(method: NotificationT['method']): void {\n        switch (method as ClientNotification['method']) {\n            case 'notifications/roots/list_changed':\n                if (!this._capabilities.roots?.listChanged) {\n                    throw new Error(`Client does not support roots list changed notifications (required for ${method})`);\n                }\n                break;\n\n            case 'notifications/initialized':\n                // No specific capability required for initialized\n                break;\n\n            case 'notifications/cancelled':\n                // Cancellation notifications are always allowed\n                break;\n\n            case 'notifications/progress':\n                // Progress notifications are always allowed\n                break;\n        }\n    }\n\n    protected assertRequestHandlerCapability(method: string): void {\n        switch (method) {\n            case 'sampling/createMessage':\n                if (!this._capabilities.sampling) {\n                    throw new Error(`Client does not support sampling capability (required for ${method})`);\n                }\n                break;\n\n            case 'elicitation/create':\n                if (!this._capabilities.elicitation) {\n                    throw new Error(`Client does not support elicitation capability (required for ${method})`);\n                }\n                break;\n\n            case 'roots/list':\n                if (!this._capabilities.roots) {\n                    throw new Error(`Client does not support roots capability (required for ${method})`);\n                }\n                break;\n\n            case 'ping':\n                // No specific capability required for ping\n                break;\n        }\n    }\n\n    async ping(options?: RequestOptions) {\n        return this.request({ method: 'ping' }, EmptyResultSchema, options);\n    }\n\n    async complete(params: CompleteRequest['params'], options?: RequestOptions) {\n        return this.request({ method: 'completion/complete', params }, CompleteResultSchema, options);\n    }\n\n    async setLoggingLevel(level: LoggingLevel, options?: RequestOptions) {\n        return this.request({ method: 'logging/setLevel', params: { level } }, EmptyResultSchema, options);\n    }\n\n    async getPrompt(params: GetPromptRequest['params'], options?: RequestOptions) {\n        return this.request({ method: 'prompts/get', params }, GetPromptResultSchema, options);\n    }\n\n    async listPrompts(params?: ListPromptsRequest['params'], options?: RequestOptions) {\n        return this.request({ method: 'prompts/list', params }, ListPromptsResultSchema, options);\n    }\n\n    async listResources(params?: ListResourcesRequest['params'], options?: RequestOptions) {\n        return this.request({ method: 'resources/list', params }, ListResourcesResultSchema, options);\n    }\n\n    async listResourceTemplates(params?: ListResourceTemplatesRequest['params'], options?: RequestOptions) {\n        return this.request({ method: 'resources/templates/list', params }, ListResourceTemplatesResultSchema, options);\n    }\n\n    async readResource(params: ReadResourceRequest['params'], options?: RequestOptions) {\n        return this.request({ method: 'resources/read', params }, ReadResourceResultSchema, options);\n    }\n\n    async subscribeResource(params: SubscribeRequest['params'], options?: RequestOptions) {\n        return this.request({ method: 'resources/subscribe', params }, EmptyResultSchema, options);\n    }\n\n    async unsubscribeResource(params: UnsubscribeRequest['params'], options?: RequestOptions) {\n        return this.request({ method: 'resources/unsubscribe', params }, EmptyResultSchema, options);\n    }\n\n    async callTool(\n        params: CallToolRequest['params'],\n        resultSchema: typeof CallToolResultSchema | typeof CompatibilityCallToolResultSchema = CallToolResultSchema,\n        options?: RequestOptions\n    ) {\n        const result = await this.request({ method: 'tools/call', params }, resultSchema, options);\n\n        // Check if the tool has an outputSchema\n        const validator = this.getToolOutputValidator(params.name);\n        if (validator) {\n            // If tool has outputSchema, it MUST return structuredContent (unless it's an error)\n            if (!result.structuredContent && !result.isError) {\n                throw new McpError(\n                    ErrorCode.InvalidRequest,\n                    `Tool ${params.name} has an output schema but did not return structured content`\n                );\n            }\n\n            // Only validate structured content if present (not when there's an error)\n            if (result.structuredContent) {\n                try {\n                    // Validate the structured content (which is already an object) against the schema\n                    const isValid = validator(result.structuredContent);\n\n                    if (!isValid) {\n                        throw new McpError(\n                            ErrorCode.InvalidParams,\n                            `Structured content does not match the tool's output schema: ${this._ajv.errorsText(validator.errors)}`\n                        );\n                    }\n                } catch (error) {\n                    if (error instanceof McpError) {\n                        throw error;\n                    }\n                    throw new McpError(\n                        ErrorCode.InvalidParams,\n                        `Failed to validate structured content: ${error instanceof Error ? error.message : String(error)}`\n                    );\n                }\n            }\n        }\n\n        return result;\n    }\n\n    private cacheToolOutputSchemas(tools: Tool[]) {\n        this._cachedToolOutputValidators.clear();\n\n        for (const tool of tools) {\n            // If the tool has an outputSchema, create and cache the Ajv validator\n            if (tool.outputSchema) {\n                try {\n                    const validator = this._ajv.compile(tool.outputSchema);\n                    this._cachedToolOutputValidators.set(tool.name, validator);\n                } catch {\n                    // Ignore schema compilation errors\n                }\n            }\n        }\n    }\n\n    private getToolOutputValidator(toolName: string): ValidateFunction | undefined {\n        return this._cachedToolOutputValidators.get(toolName);\n    }\n\n    async listTools(params?: ListToolsRequest['params'], options?: RequestOptions) {\n        const result = await this.request({ method: 'tools/list', params }, ListToolsResultSchema, options);\n\n        // Cache the tools and their output schemas for future validation\n        this.cacheToolOutputSchemas(result.tools);\n\n        return result;\n    }\n\n    async sendRootsListChanged() {\n        return this.notification({ method: 'notifications/roots/list_changed' });\n    }\n}\n","let crypto;\ncrypto = globalThis.crypto; // web browsers\n/**\n * Creates an array of length `size` of random bytes\n * @param size\n * @returns Array of random ints (0 to 255)\n */\nasync function getRandomValues(size) {\n    return (await crypto).getRandomValues(new Uint8Array(size));\n}\n/** Generate cryptographically strong random string\n * @param size The desired length of the string\n * @returns The random string\n */\nasync function random(size) {\n    const mask = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-._~\";\n    let result = \"\";\n    const randomUints = await getRandomValues(size);\n    for (let i = 0; i < size; i++) {\n        // cap the value of the randomIndex to mask.length - 1\n        const randomIndex = randomUints[i] % mask.length;\n        result += mask[randomIndex];\n    }\n    return result;\n}\n/** Generate a PKCE challenge verifier\n * @param length Length of the verifier\n * @returns A random verifier `length` characters long\n */\nasync function generateVerifier(length) {\n    return await random(length);\n}\n/** Generate a PKCE code challenge from a code verifier\n * @param code_verifier\n * @returns The base64 url encoded code challenge\n */\nexport async function generateChallenge(code_verifier) {\n    const buffer = await (await crypto).subtle.digest(\"SHA-256\", new TextEncoder().encode(code_verifier));\n    // Generate base64url string\n    // btoa is deprecated in Node.js but is used here for web browser compatibility\n    // (which has no good replacement yet, see also https://github.com/whatwg/html/issues/6811)\n    return btoa(String.fromCharCode(...new Uint8Array(buffer)))\n        .replace(/\\//g, '_')\n        .replace(/\\+/g, '-')\n        .replace(/=/g, '');\n}\n/** Generate a PKCE challenge pair\n * @param length Length of the verifer (between 43-128). Defaults to 43.\n * @returns PKCE challenge pair\n */\nexport default async function pkceChallenge(length) {\n    if (!length)\n        length = 43;\n    if (length < 43 || length > 128) {\n        throw `Expected a length between 43 and 128. Received ${length}.`;\n    }\n    const verifier = await generateVerifier(length);\n    const challenge = await generateChallenge(verifier);\n    return {\n        code_verifier: verifier,\n        code_challenge: challenge,\n    };\n}\n/** Verify that a code_verifier produces the expected code challenge\n * @param code_verifier\n * @param expectedChallenge The code challenge to verify\n * @returns True if challenges are equal. False otherwise.\n */\nexport async function verifyChallenge(code_verifier, expectedChallenge) {\n    const actualChallenge = await generateChallenge(code_verifier);\n    return actualChallenge === expectedChallenge;\n}\n","import { z } from 'zod';\n\n/**\n * Reusable URL validation that disallows javascript: scheme\n */\nexport const SafeUrlSchema = z\n    .string()\n    .url()\n    .superRefine((val, ctx) => {\n        if (!URL.canParse(val)) {\n            ctx.addIssue({\n                code: z.ZodIssueCode.custom,\n                message: 'URL must be parseable',\n                fatal: true\n            });\n\n            return z.NEVER;\n        }\n    })\n    .refine(\n        url => {\n            const u = new URL(url);\n            return u.protocol !== 'javascript:' && u.protocol !== 'data:' && u.protocol !== 'vbscript:';\n        },\n        { message: 'URL cannot use javascript:, data:, or vbscript: scheme' }\n    );\n\n/**\n * RFC 9728 OAuth Protected Resource Metadata\n */\nexport const OAuthProtectedResourceMetadataSchema = z\n    .object({\n        resource: z.string().url(),\n        authorization_servers: z.array(SafeUrlSchema).optional(),\n        jwks_uri: z.string().url().optional(),\n        scopes_supported: z.array(z.string()).optional(),\n        bearer_methods_supported: z.array(z.string()).optional(),\n        resource_signing_alg_values_supported: z.array(z.string()).optional(),\n        resource_name: z.string().optional(),\n        resource_documentation: z.string().optional(),\n        resource_policy_uri: z.string().url().optional(),\n        resource_tos_uri: z.string().url().optional(),\n        tls_client_certificate_bound_access_tokens: z.boolean().optional(),\n        authorization_details_types_supported: z.array(z.string()).optional(),\n        dpop_signing_alg_values_supported: z.array(z.string()).optional(),\n        dpop_bound_access_tokens_required: z.boolean().optional()\n    })\n    .passthrough();\n\n/**\n * RFC 8414 OAuth 2.0 Authorization Server Metadata\n */\nexport const OAuthMetadataSchema = z\n    .object({\n        issuer: z.string(),\n        authorization_endpoint: SafeUrlSchema,\n        token_endpoint: SafeUrlSchema,\n        registration_endpoint: SafeUrlSchema.optional(),\n        scopes_supported: z.array(z.string()).optional(),\n        response_types_supported: z.array(z.string()),\n        response_modes_supported: z.array(z.string()).optional(),\n        grant_types_supported: z.array(z.string()).optional(),\n        token_endpoint_auth_methods_supported: z.array(z.string()).optional(),\n        token_endpoint_auth_signing_alg_values_supported: z.array(z.string()).optional(),\n        service_documentation: SafeUrlSchema.optional(),\n        revocation_endpoint: SafeUrlSchema.optional(),\n        revocation_endpoint_auth_methods_supported: z.array(z.string()).optional(),\n        revocation_endpoint_auth_signing_alg_values_supported: z.array(z.string()).optional(),\n        introspection_endpoint: z.string().optional(),\n        introspection_endpoint_auth_methods_supported: z.array(z.string()).optional(),\n        introspection_endpoint_auth_signing_alg_values_supported: z.array(z.string()).optional(),\n        code_challenge_methods_supported: z.array(z.string()).optional()\n    })\n    .passthrough();\n\n/**\n * OpenID Connect Discovery 1.0 Provider Metadata\n * see: https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata\n */\nexport const OpenIdProviderMetadataSchema = z\n    .object({\n        issuer: z.string(),\n        authorization_endpoint: SafeUrlSchema,\n        token_endpoint: SafeUrlSchema,\n        userinfo_endpoint: SafeUrlSchema.optional(),\n        jwks_uri: SafeUrlSchema,\n        registration_endpoint: SafeUrlSchema.optional(),\n        scopes_supported: z.array(z.string()).optional(),\n        response_types_supported: z.array(z.string()),\n        response_modes_supported: z.array(z.string()).optional(),\n        grant_types_supported: z.array(z.string()).optional(),\n        acr_values_supported: z.array(z.string()).optional(),\n        subject_types_supported: z.array(z.string()),\n        id_token_signing_alg_values_supported: z.array(z.string()),\n        id_token_encryption_alg_values_supported: z.array(z.string()).optional(),\n        id_token_encryption_enc_values_supported: z.array(z.string()).optional(),\n        userinfo_signing_alg_values_supported: z.array(z.string()).optional(),\n        userinfo_encryption_alg_values_supported: z.array(z.string()).optional(),\n        userinfo_encryption_enc_values_supported: z.array(z.string()).optional(),\n        request_object_signing_alg_values_supported: z.array(z.string()).optional(),\n        request_object_encryption_alg_values_supported: z.array(z.string()).optional(),\n        request_object_encryption_enc_values_supported: z.array(z.string()).optional(),\n        token_endpoint_auth_methods_supported: z.array(z.string()).optional(),\n        token_endpoint_auth_signing_alg_values_supported: z.array(z.string()).optional(),\n        display_values_supported: z.array(z.string()).optional(),\n        claim_types_supported: z.array(z.string()).optional(),\n        claims_supported: z.array(z.string()).optional(),\n        service_documentation: z.string().optional(),\n        claims_locales_supported: z.array(z.string()).optional(),\n        ui_locales_supported: z.array(z.string()).optional(),\n        claims_parameter_supported: z.boolean().optional(),\n        request_parameter_supported: z.boolean().optional(),\n        request_uri_parameter_supported: z.boolean().optional(),\n        require_request_uri_registration: z.boolean().optional(),\n        op_policy_uri: SafeUrlSchema.optional(),\n        op_tos_uri: SafeUrlSchema.optional()\n    })\n    .passthrough();\n\n/**\n * OpenID Connect Discovery metadata that may include OAuth 2.0 fields\n * This schema represents the real-world scenario where OIDC providers\n * return a mix of OpenID Connect and OAuth 2.0 metadata fields\n */\nexport const OpenIdProviderDiscoveryMetadataSchema = OpenIdProviderMetadataSchema.merge(\n    OAuthMetadataSchema.pick({\n        code_challenge_methods_supported: true\n    })\n);\n\n/**\n * OAuth 2.1 token response\n */\nexport const OAuthTokensSchema = z\n    .object({\n        access_token: z.string(),\n        id_token: z.string().optional(), // Optional for OAuth 2.1, but necessary in OpenID Connect\n        token_type: z.string(),\n        expires_in: z.number().optional(),\n        scope: z.string().optional(),\n        refresh_token: z.string().optional()\n    })\n    .strip();\n\n/**\n * OAuth 2.1 error response\n */\nexport const OAuthErrorResponseSchema = z.object({\n    error: z.string(),\n    error_description: z.string().optional(),\n    error_uri: z.string().optional()\n});\n\n/**\n * RFC 7591 OAuth 2.0 Dynamic Client Registration metadata\n */\nexport const OAuthClientMetadataSchema = z\n    .object({\n        redirect_uris: z.array(SafeUrlSchema),\n        token_endpoint_auth_method: z.string().optional(),\n        grant_types: z.array(z.string()).optional(),\n        response_types: z.array(z.string()).optional(),\n        client_name: z.string().optional(),\n        client_uri: SafeUrlSchema.optional(),\n        logo_uri: SafeUrlSchema.optional(),\n        scope: z.string().optional(),\n        contacts: z.array(z.string()).optional(),\n        tos_uri: SafeUrlSchema.optional(),\n        policy_uri: z.string().optional(),\n        jwks_uri: SafeUrlSchema.optional(),\n        jwks: z.any().optional(),\n        software_id: z.string().optional(),\n        software_version: z.string().optional(),\n        software_statement: z.string().optional()\n    })\n    .strip();\n\n/**\n * RFC 7591 OAuth 2.0 Dynamic Client Registration client information\n */\nexport const OAuthClientInformationSchema = z\n    .object({\n        client_id: z.string(),\n        client_secret: z.string().optional(),\n        client_id_issued_at: z.number().optional(),\n        client_secret_expires_at: z.number().optional()\n    })\n    .strip();\n\n/**\n * RFC 7591 OAuth 2.0 Dynamic Client Registration full response (client information plus metadata)\n */\nexport const OAuthClientInformationFullSchema = OAuthClientMetadataSchema.merge(OAuthClientInformationSchema);\n\n/**\n * RFC 7591 OAuth 2.0 Dynamic Client Registration error response\n */\nexport const OAuthClientRegistrationErrorSchema = z\n    .object({\n        error: z.string(),\n        error_description: z.string().optional()\n    })\n    .strip();\n\n/**\n * RFC 7009 OAuth 2.0 Token Revocation request\n */\nexport const OAuthTokenRevocationRequestSchema = z\n    .object({\n        token: z.string(),\n        token_type_hint: z.string().optional()\n    })\n    .strip();\n\nexport type OAuthMetadata = z.infer<typeof OAuthMetadataSchema>;\nexport type OpenIdProviderMetadata = z.infer<typeof OpenIdProviderMetadataSchema>;\nexport type OpenIdProviderDiscoveryMetadata = z.infer<typeof OpenIdProviderDiscoveryMetadataSchema>;\n\nexport type OAuthTokens = z.infer<typeof OAuthTokensSchema>;\nexport type OAuthErrorResponse = z.infer<typeof OAuthErrorResponseSchema>;\nexport type OAuthClientMetadata = z.infer<typeof OAuthClientMetadataSchema>;\nexport type OAuthClientInformation = z.infer<typeof OAuthClientInformationSchema>;\nexport type OAuthClientInformationFull = z.infer<typeof OAuthClientInformationFullSchema>;\nexport type OAuthClientRegistrationError = z.infer<typeof OAuthClientRegistrationErrorSchema>;\nexport type OAuthTokenRevocationRequest = z.infer<typeof OAuthTokenRevocationRequestSchema>;\nexport type OAuthProtectedResourceMetadata = z.infer<typeof OAuthProtectedResourceMetadataSchema>;\n\n// Unified type for authorization server metadata\nexport type AuthorizationServerMetadata = OAuthMetadata | OpenIdProviderDiscoveryMetadata;\n","/**\n * Utilities for handling OAuth resource URIs.\n */\n\n/**\n * Converts a server URL to a resource URL by removing the fragment.\n * RFC 8707 section 2 states that resource URIs \"MUST NOT include a fragment component\".\n * Keeps everything else unchanged (scheme, domain, port, path, query).\n */\nexport function resourceUrlFromServerUrl(url: URL | string): URL {\n    const resourceURL = typeof url === 'string' ? new URL(url) : new URL(url.href);\n    resourceURL.hash = ''; // Remove fragment\n    return resourceURL;\n}\n\n/**\n * Checks if a requested resource URL matches a configured resource URL.\n * A requested resource matches if it has the same scheme, domain, port,\n * and its path starts with the configured resource's path.\n *\n * @param requestedResource The resource URL being requested\n * @param configuredResource The resource URL that has been configured\n * @returns true if the requested resource matches the configured resource, false otherwise\n */\nexport function checkResourceAllowed({\n    requestedResource,\n    configuredResource\n}: {\n    requestedResource: URL | string;\n    configuredResource: URL | string;\n}): boolean {\n    const requested = typeof requestedResource === 'string' ? new URL(requestedResource) : new URL(requestedResource.href);\n    const configured = typeof configuredResource === 'string' ? new URL(configuredResource) : new URL(configuredResource.href);\n\n    // Compare the origin (scheme, domain, and port)\n    if (requested.origin !== configured.origin) {\n        return false;\n    }\n\n    // Handle cases like requested=/foo and configured=/foo/\n    if (requested.pathname.length < configured.pathname.length) {\n        return false;\n    }\n\n    // Check if the requested path starts with the configured path\n    // Ensure both paths end with / for proper comparison\n    // This ensures that if we have paths like \"/api\" and \"/api/users\",\n    // we properly detect that \"/api/users\" is a subpath of \"/api\"\n    // By adding a trailing slash if missing, we avoid false positives\n    // where paths like \"/api123\" would incorrectly match \"/api\"\n    const requestedPath = requested.pathname.endsWith('/') ? requested.pathname : requested.pathname + '/';\n    const configuredPath = configured.pathname.endsWith('/') ? configured.pathname : configured.pathname + '/';\n\n    return requestedPath.startsWith(configuredPath);\n}\n","import { OAuthErrorResponse } from '../../shared/auth.js';\n\n/**\n * Base class for all OAuth errors\n */\nexport class OAuthError extends Error {\n    static errorCode: string;\n\n    constructor(\n        message: string,\n        public readonly errorUri?: string\n    ) {\n        super(message);\n        this.name = this.constructor.name;\n    }\n\n    /**\n     * Converts the error to a standard OAuth error response object\n     */\n    toResponseObject(): OAuthErrorResponse {\n        const response: OAuthErrorResponse = {\n            error: this.errorCode,\n            error_description: this.message\n        };\n\n        if (this.errorUri) {\n            response.error_uri = this.errorUri;\n        }\n\n        return response;\n    }\n\n    get errorCode(): string {\n        return (this.constructor as typeof OAuthError).errorCode;\n    }\n}\n\n/**\n * Invalid request error - The request is missing a required parameter,\n * includes an invalid parameter value, includes a parameter more than once,\n * or is otherwise malformed.\n */\nexport class InvalidRequestError extends OAuthError {\n    static errorCode = 'invalid_request';\n}\n\n/**\n * Invalid client error - Client authentication failed (e.g., unknown client, no client\n * authentication included, or unsupported authentication method).\n */\nexport class InvalidClientError extends OAuthError {\n    static errorCode = 'invalid_client';\n}\n\n/**\n * Invalid grant error - The provided authorization grant or refresh token is\n * invalid, expired, revoked, does not match the redirection URI used in the\n * authorization request, or was issued to another client.\n */\nexport class InvalidGrantError extends OAuthError {\n    static errorCode = 'invalid_grant';\n}\n\n/**\n * Unauthorized client error - The authenticated client is not authorized to use\n * this authorization grant type.\n */\nexport class UnauthorizedClientError extends OAuthError {\n    static errorCode = 'unauthorized_client';\n}\n\n/**\n * Unsupported grant type error - The authorization grant type is not supported\n * by the authorization server.\n */\nexport class UnsupportedGrantTypeError extends OAuthError {\n    static errorCode = 'unsupported_grant_type';\n}\n\n/**\n * Invalid scope error - The requested scope is invalid, unknown, malformed, or\n * exceeds the scope granted by the resource owner.\n */\nexport class InvalidScopeError extends OAuthError {\n    static errorCode = 'invalid_scope';\n}\n\n/**\n * Access denied error - The resource owner or authorization server denied the request.\n */\nexport class AccessDeniedError extends OAuthError {\n    static errorCode = 'access_denied';\n}\n\n/**\n * Server error - The authorization server encountered an unexpected condition\n * that prevented it from fulfilling the request.\n */\nexport class ServerError extends OAuthError {\n    static errorCode = 'server_error';\n}\n\n/**\n * Temporarily unavailable error - The authorization server is currently unable to\n * handle the request due to a temporary overloading or maintenance of the server.\n */\nexport class TemporarilyUnavailableError extends OAuthError {\n    static errorCode = 'temporarily_unavailable';\n}\n\n/**\n * Unsupported response type error - The authorization server does not support\n * obtaining an authorization code using this method.\n */\nexport class UnsupportedResponseTypeError extends OAuthError {\n    static errorCode = 'unsupported_response_type';\n}\n\n/**\n * Unsupported token type error - The authorization server does not support\n * the requested token type.\n */\nexport class UnsupportedTokenTypeError extends OAuthError {\n    static errorCode = 'unsupported_token_type';\n}\n\n/**\n * Invalid token error - The access token provided is expired, revoked, malformed,\n * or invalid for other reasons.\n */\nexport class InvalidTokenError extends OAuthError {\n    static errorCode = 'invalid_token';\n}\n\n/**\n * Method not allowed error - The HTTP method used is not allowed for this endpoint.\n * (Custom, non-standard error)\n */\nexport class MethodNotAllowedError extends OAuthError {\n    static errorCode = 'method_not_allowed';\n}\n\n/**\n * Too many requests error - Rate limit exceeded.\n * (Custom, non-standard error based on RFC 6585)\n */\nexport class TooManyRequestsError extends OAuthError {\n    static errorCode = 'too_many_requests';\n}\n\n/**\n * Invalid client metadata error - The client metadata is invalid.\n * (Custom error for dynamic client registration - RFC 7591)\n */\nexport class InvalidClientMetadataError extends OAuthError {\n    static errorCode = 'invalid_client_metadata';\n}\n\n/**\n * Insufficient scope error - The request requires higher privileges than provided by the access token.\n */\nexport class InsufficientScopeError extends OAuthError {\n    static errorCode = 'insufficient_scope';\n}\n\n/**\n * A utility class for defining one-off error codes\n */\nexport class CustomOAuthError extends OAuthError {\n    constructor(\n        private readonly customErrorCode: string,\n        message: string,\n        errorUri?: string\n    ) {\n        super(message, errorUri);\n    }\n\n    get errorCode(): string {\n        return this.customErrorCode;\n    }\n}\n\n/**\n * A full list of all OAuthErrors, enabling parsing from error responses\n */\nexport const OAUTH_ERRORS = {\n    [InvalidRequestError.errorCode]: InvalidRequestError,\n    [InvalidClientError.errorCode]: InvalidClientError,\n    [InvalidGrantError.errorCode]: InvalidGrantError,\n    [UnauthorizedClientError.errorCode]: UnauthorizedClientError,\n    [UnsupportedGrantTypeError.errorCode]: UnsupportedGrantTypeError,\n    [InvalidScopeError.errorCode]: InvalidScopeError,\n    [AccessDeniedError.errorCode]: AccessDeniedError,\n    [ServerError.errorCode]: ServerError,\n    [TemporarilyUnavailableError.errorCode]: TemporarilyUnavailableError,\n    [UnsupportedResponseTypeError.errorCode]: UnsupportedResponseTypeError,\n    [UnsupportedTokenTypeError.errorCode]: UnsupportedTokenTypeError,\n    [InvalidTokenError.errorCode]: InvalidTokenError,\n    [MethodNotAllowedError.errorCode]: MethodNotAllowedError,\n    [TooManyRequestsError.errorCode]: TooManyRequestsError,\n    [InvalidClientMetadataError.errorCode]: InvalidClientMetadataError,\n    [InsufficientScopeError.errorCode]: InsufficientScopeError\n} as const;\n","import pkceChallenge from 'pkce-challenge';\nimport { LATEST_PROTOCOL_VERSION } from '../types.js';\nimport {\n    OAuthClientMetadata,\n    OAuthClientInformation,\n    OAuthTokens,\n    OAuthMetadata,\n    OAuthClientInformationFull,\n    OAuthProtectedResourceMetadata,\n    OAuthErrorResponseSchema,\n    AuthorizationServerMetadata,\n    OpenIdProviderDiscoveryMetadataSchema\n} from '../shared/auth.js';\nimport {\n    OAuthClientInformationFullSchema,\n    OAuthMetadataSchema,\n    OAuthProtectedResourceMetadataSchema,\n    OAuthTokensSchema\n} from '../shared/auth.js';\nimport { checkResourceAllowed, resourceUrlFromServerUrl } from '../shared/auth-utils.js';\nimport {\n    InvalidClientError,\n    InvalidGrantError,\n    OAUTH_ERRORS,\n    OAuthError,\n    ServerError,\n    UnauthorizedClientError\n} from '../server/auth/errors.js';\nimport { FetchLike } from '../shared/transport.js';\n\n/**\n * Implements an end-to-end OAuth client to be used with one MCP server.\n *\n * This client relies upon a concept of an authorized \"session,\" the exact\n * meaning of which is application-defined. Tokens, authorization codes, and\n * code verifiers should not cross different sessions.\n */\nexport interface OAuthClientProvider {\n    /**\n     * The URL to redirect the user agent to after authorization.\n     */\n    get redirectUrl(): string | URL;\n\n    /**\n     * Metadata about this OAuth client.\n     */\n    get clientMetadata(): OAuthClientMetadata;\n\n    /**\n     * Returns a OAuth2 state parameter.\n     */\n    state?(): string | Promise<string>;\n\n    /**\n     * Loads information about this OAuth client, as registered already with the\n     * server, or returns `undefined` if the client is not registered with the\n     * server.\n     */\n    clientInformation(): OAuthClientInformation | undefined | Promise<OAuthClientInformation | undefined>;\n\n    /**\n     * If implemented, this permits the OAuth client to dynamically register with\n     * the server. Client information saved this way should later be read via\n     * `clientInformation()`.\n     *\n     * This method is not required to be implemented if client information is\n     * statically known (e.g., pre-registered).\n     */\n    saveClientInformation?(clientInformation: OAuthClientInformationFull): void | Promise<void>;\n\n    /**\n     * Loads any existing OAuth tokens for the current session, or returns\n     * `undefined` if there are no saved tokens.\n     */\n    tokens(): OAuthTokens | undefined | Promise<OAuthTokens | undefined>;\n\n    /**\n     * Stores new OAuth tokens for the current session, after a successful\n     * authorization.\n     */\n    saveTokens(tokens: OAuthTokens): void | Promise<void>;\n\n    /**\n     * Invoked to redirect the user agent to the given URL to begin the authorization flow.\n     */\n    redirectToAuthorization(authorizationUrl: URL): void | Promise<void>;\n\n    /**\n     * Saves a PKCE code verifier for the current session, before redirecting to\n     * the authorization flow.\n     */\n    saveCodeVerifier(codeVerifier: string): void | Promise<void>;\n\n    /**\n     * Loads the PKCE code verifier for the current session, necessary to validate\n     * the authorization result.\n     */\n    codeVerifier(): string | Promise<string>;\n\n    /**\n     * Adds custom client authentication to OAuth token requests.\n     *\n     * This optional method allows implementations to customize how client credentials\n     * are included in token exchange and refresh requests. When provided, this method\n     * is called instead of the default authentication logic, giving full control over\n     * the authentication mechanism.\n     *\n     * Common use cases include:\n     * - Supporting authentication methods beyond the standard OAuth 2.0 methods\n     * - Adding custom headers for proprietary authentication schemes\n     * - Implementing client assertion-based authentication (e.g., JWT bearer tokens)\n     *\n     * @param headers - The request headers (can be modified to add authentication)\n     * @param params - The request body parameters (can be modified to add credentials)\n     * @param url - The token endpoint URL being called\n     * @param metadata - Optional OAuth metadata for the server, which may include supported authentication methods\n     */\n    addClientAuthentication?(\n        headers: Headers,\n        params: URLSearchParams,\n        url: string | URL,\n        metadata?: AuthorizationServerMetadata\n    ): void | Promise<void>;\n\n    /**\n     * If defined, overrides the selection and validation of the\n     * RFC 8707 Resource Indicator. If left undefined, default\n     * validation behavior will be used.\n     *\n     * Implementations must verify the returned resource matches the MCP server.\n     */\n    validateResourceURL?(serverUrl: string | URL, resource?: string): Promise<URL | undefined>;\n\n    /**\n     * If implemented, provides a way for the client to invalidate (e.g. delete) the specified\n     * credentials, in the case where the server has indicated that they are no longer valid.\n     * This avoids requiring the user to intervene manually.\n     */\n    invalidateCredentials?(scope: 'all' | 'client' | 'tokens' | 'verifier'): void | Promise<void>;\n}\n\nexport type AuthResult = 'AUTHORIZED' | 'REDIRECT';\n\nexport class UnauthorizedError extends Error {\n    constructor(message?: string) {\n        super(message ?? 'Unauthorized');\n    }\n}\n\ntype ClientAuthMethod = 'client_secret_basic' | 'client_secret_post' | 'none';\n\n/**\n * Determines the best client authentication method to use based on server support and client configuration.\n *\n * Priority order (highest to lowest):\n * 1. client_secret_basic (if client secret is available)\n * 2. client_secret_post (if client secret is available)\n * 3. none (for public clients)\n *\n * @param clientInformation - OAuth client information containing credentials\n * @param supportedMethods - Authentication methods supported by the authorization server\n * @returns The selected authentication method\n */\nfunction selectClientAuthMethod(clientInformation: OAuthClientInformation, supportedMethods: string[]): ClientAuthMethod {\n    const hasClientSecret = clientInformation.client_secret !== undefined;\n\n    // If server doesn't specify supported methods, use RFC 6749 defaults\n    if (supportedMethods.length === 0) {\n        return hasClientSecret ? 'client_secret_post' : 'none';\n    }\n\n    // Try methods in priority order (most secure first)\n    if (hasClientSecret && supportedMethods.includes('client_secret_basic')) {\n        return 'client_secret_basic';\n    }\n\n    if (hasClientSecret && supportedMethods.includes('client_secret_post')) {\n        return 'client_secret_post';\n    }\n\n    if (supportedMethods.includes('none')) {\n        return 'none';\n    }\n\n    // Fallback: use what we have\n    return hasClientSecret ? 'client_secret_post' : 'none';\n}\n\n/**\n * Applies client authentication to the request based on the specified method.\n *\n * Implements OAuth 2.1 client authentication methods:\n * - client_secret_basic: HTTP Basic authentication (RFC 6749 Section 2.3.1)\n * - client_secret_post: Credentials in request body (RFC 6749 Section 2.3.1)\n * - none: Public client authentication (RFC 6749 Section 2.1)\n *\n * @param method - The authentication method to use\n * @param clientInformation - OAuth client information containing credentials\n * @param headers - HTTP headers object to modify\n * @param params - URL search parameters to modify\n * @throws {Error} When required credentials are missing\n */\nfunction applyClientAuthentication(\n    method: ClientAuthMethod,\n    clientInformation: OAuthClientInformation,\n    headers: Headers,\n    params: URLSearchParams\n): void {\n    const { client_id, client_secret } = clientInformation;\n\n    switch (method) {\n        case 'client_secret_basic':\n            applyBasicAuth(client_id, client_secret, headers);\n            return;\n        case 'client_secret_post':\n            applyPostAuth(client_id, client_secret, params);\n            return;\n        case 'none':\n            applyPublicAuth(client_id, params);\n            return;\n        default:\n            throw new Error(`Unsupported client authentication method: ${method}`);\n    }\n}\n\n/**\n * Applies HTTP Basic authentication (RFC 6749 Section 2.3.1)\n */\nfunction applyBasicAuth(clientId: string, clientSecret: string | undefined, headers: Headers): void {\n    if (!clientSecret) {\n        throw new Error('client_secret_basic authentication requires a client_secret');\n    }\n\n    const credentials = btoa(`${clientId}:${clientSecret}`);\n    headers.set('Authorization', `Basic ${credentials}`);\n}\n\n/**\n * Applies POST body authentication (RFC 6749 Section 2.3.1)\n */\nfunction applyPostAuth(clientId: string, clientSecret: string | undefined, params: URLSearchParams): void {\n    params.set('client_id', clientId);\n    if (clientSecret) {\n        params.set('client_secret', clientSecret);\n    }\n}\n\n/**\n * Applies public client authentication (RFC 6749 Section 2.1)\n */\nfunction applyPublicAuth(clientId: string, params: URLSearchParams): void {\n    params.set('client_id', clientId);\n}\n\n/**\n * Parses an OAuth error response from a string or Response object.\n *\n * If the input is a standard OAuth2.0 error response, it will be parsed according to the spec\n * and an instance of the appropriate OAuthError subclass will be returned.\n * If parsing fails, it falls back to a generic ServerError that includes\n * the response status (if available) and original content.\n *\n * @param input - A Response object or string containing the error response\n * @returns A Promise that resolves to an OAuthError instance\n */\nexport async function parseErrorResponse(input: Response | string): Promise<OAuthError> {\n    const statusCode = input instanceof Response ? input.status : undefined;\n    const body = input instanceof Response ? await input.text() : input;\n\n    try {\n        const result = OAuthErrorResponseSchema.parse(JSON.parse(body));\n        const { error, error_description, error_uri } = result;\n        const errorClass = OAUTH_ERRORS[error] || ServerError;\n        return new errorClass(error_description || '', error_uri);\n    } catch (error) {\n        // Not a valid OAuth error response, but try to inform the user of the raw data anyway\n        const errorMessage = `${statusCode ? `HTTP ${statusCode}: ` : ''}Invalid OAuth error response: ${error}. Raw body: ${body}`;\n        return new ServerError(errorMessage);\n    }\n}\n\n/**\n * Orchestrates the full auth flow with a server.\n *\n * This can be used as a single entry point for all authorization functionality,\n * instead of linking together the other lower-level functions in this module.\n */\nexport async function auth(\n    provider: OAuthClientProvider,\n    options: {\n        serverUrl: string | URL;\n        authorizationCode?: string;\n        scope?: string;\n        resourceMetadataUrl?: URL;\n        fetchFn?: FetchLike;\n    }\n): Promise<AuthResult> {\n    try {\n        return await authInternal(provider, options);\n    } catch (error) {\n        // Handle recoverable error types by invalidating credentials and retrying\n        if (error instanceof InvalidClientError || error instanceof UnauthorizedClientError) {\n            await provider.invalidateCredentials?.('all');\n            return await authInternal(provider, options);\n        } else if (error instanceof InvalidGrantError) {\n            await provider.invalidateCredentials?.('tokens');\n            return await authInternal(provider, options);\n        }\n\n        // Throw otherwise\n        throw error;\n    }\n}\n\nasync function authInternal(\n    provider: OAuthClientProvider,\n    {\n        serverUrl,\n        authorizationCode,\n        scope,\n        resourceMetadataUrl,\n        fetchFn\n    }: {\n        serverUrl: string | URL;\n        authorizationCode?: string;\n        scope?: string;\n        resourceMetadataUrl?: URL;\n        fetchFn?: FetchLike;\n    }\n): Promise<AuthResult> {\n    let resourceMetadata: OAuthProtectedResourceMetadata | undefined;\n    let authorizationServerUrl: string | URL | undefined;\n    try {\n        resourceMetadata = await discoverOAuthProtectedResourceMetadata(serverUrl, { resourceMetadataUrl }, fetchFn);\n        if (resourceMetadata.authorization_servers && resourceMetadata.authorization_servers.length > 0) {\n            authorizationServerUrl = resourceMetadata.authorization_servers[0];\n        }\n    } catch {\n        // Ignore errors and fall back to /.well-known/oauth-authorization-server\n    }\n\n    /**\n     * If we don't get a valid authorization server metadata from protected resource metadata,\n     * fallback to the legacy MCP spec's implementation (version 2025-03-26): MCP server acts as the Authorization server.\n     */\n    if (!authorizationServerUrl) {\n        authorizationServerUrl = serverUrl;\n    }\n\n    const resource: URL | undefined = await selectResourceURL(serverUrl, provider, resourceMetadata);\n\n    const metadata = await discoverAuthorizationServerMetadata(authorizationServerUrl, {\n        fetchFn\n    });\n\n    // Handle client registration if needed\n    let clientInformation = await Promise.resolve(provider.clientInformation());\n    if (!clientInformation) {\n        if (authorizationCode !== undefined) {\n            throw new Error('Existing OAuth client information is required when exchanging an authorization code');\n        }\n\n        if (!provider.saveClientInformation) {\n            throw new Error('OAuth client information must be saveable for dynamic registration');\n        }\n\n        const fullInformation = await registerClient(authorizationServerUrl, {\n            metadata,\n            clientMetadata: provider.clientMetadata,\n            fetchFn\n        });\n\n        await provider.saveClientInformation(fullInformation);\n        clientInformation = fullInformation;\n    }\n\n    // Exchange authorization code for tokens\n    if (authorizationCode !== undefined) {\n        const codeVerifier = await provider.codeVerifier();\n        const tokens = await exchangeAuthorization(authorizationServerUrl, {\n            metadata,\n            clientInformation,\n            authorizationCode,\n            codeVerifier,\n            redirectUri: provider.redirectUrl,\n            resource,\n            addClientAuthentication: provider.addClientAuthentication,\n            fetchFn: fetchFn\n        });\n\n        await provider.saveTokens(tokens);\n        return 'AUTHORIZED';\n    }\n\n    const tokens = await provider.tokens();\n\n    // Handle token refresh or new authorization\n    if (tokens?.refresh_token) {\n        try {\n            // Attempt to refresh the token\n            const newTokens = await refreshAuthorization(authorizationServerUrl, {\n                metadata,\n                clientInformation,\n                refreshToken: tokens.refresh_token,\n                resource,\n                addClientAuthentication: provider.addClientAuthentication,\n                fetchFn\n            });\n\n            await provider.saveTokens(newTokens);\n            return 'AUTHORIZED';\n        } catch (error) {\n            // If this is a ServerError, or an unknown type, log it out and try to continue. Otherwise, escalate so we can fix things and retry.\n            if (!(error instanceof OAuthError) || error instanceof ServerError) {\n                // Could not refresh OAuth tokens\n            } else {\n                // Refresh failed for another reason, re-throw\n                throw error;\n            }\n        }\n    }\n\n    const state = provider.state ? await provider.state() : undefined;\n\n    // Start new authorization flow\n    const { authorizationUrl, codeVerifier } = await startAuthorization(authorizationServerUrl, {\n        metadata,\n        clientInformation,\n        state,\n        redirectUrl: provider.redirectUrl,\n        scope: scope || provider.clientMetadata.scope,\n        resource\n    });\n\n    await provider.saveCodeVerifier(codeVerifier);\n    await provider.redirectToAuthorization(authorizationUrl);\n    return 'REDIRECT';\n}\n\nexport async function selectResourceURL(\n    serverUrl: string | URL,\n    provider: OAuthClientProvider,\n    resourceMetadata?: OAuthProtectedResourceMetadata\n): Promise<URL | undefined> {\n    const defaultResource = resourceUrlFromServerUrl(serverUrl);\n\n    // If provider has custom validation, delegate to it\n    if (provider.validateResourceURL) {\n        return await provider.validateResourceURL(defaultResource, resourceMetadata?.resource);\n    }\n\n    // Only include resource parameter when Protected Resource Metadata is present\n    if (!resourceMetadata) {\n        return undefined;\n    }\n\n    // Validate that the metadata's resource is compatible with our request\n    if (!checkResourceAllowed({ requestedResource: defaultResource, configuredResource: resourceMetadata.resource })) {\n        throw new Error(`Protected resource ${resourceMetadata.resource} does not match expected ${defaultResource} (or origin)`);\n    }\n    // Prefer the resource from metadata since it's what the server is telling us to request\n    return new URL(resourceMetadata.resource);\n}\n\n/**\n * Extract resource_metadata from response header.\n */\nexport function extractResourceMetadataUrl(res: Response): URL | undefined {\n    const authenticateHeader = res.headers.get('WWW-Authenticate');\n    if (!authenticateHeader) {\n        return undefined;\n    }\n\n    const [type, scheme] = authenticateHeader.split(' ');\n    if (type.toLowerCase() !== 'bearer' || !scheme) {\n        return undefined;\n    }\n    const regex = /resource_metadata=\"([^\"]*)\"/;\n    const match = regex.exec(authenticateHeader);\n\n    if (!match) {\n        return undefined;\n    }\n\n    try {\n        return new URL(match[1]);\n    } catch {\n        return undefined;\n    }\n}\n\n/**\n * Looks up RFC 9728 OAuth 2.0 Protected Resource Metadata.\n *\n * If the server returns a 404 for the well-known endpoint, this function will\n * return `undefined`. Any other errors will be thrown as exceptions.\n */\nexport async function discoverOAuthProtectedResourceMetadata(\n    serverUrl: string | URL,\n    opts?: { protocolVersion?: string; resourceMetadataUrl?: string | URL },\n    fetchFn: FetchLike = fetch\n): Promise<OAuthProtectedResourceMetadata> {\n    const response = await discoverMetadataWithFallback(serverUrl, 'oauth-protected-resource', fetchFn, {\n        protocolVersion: opts?.protocolVersion,\n        metadataUrl: opts?.resourceMetadataUrl\n    });\n\n    if (!response || response.status === 404) {\n        throw new Error(`Resource server does not implement OAuth 2.0 Protected Resource Metadata.`);\n    }\n\n    if (!response.ok) {\n        throw new Error(`HTTP ${response.status} trying to load well-known OAuth protected resource metadata.`);\n    }\n    return OAuthProtectedResourceMetadataSchema.parse(await response.json());\n}\n\n/**\n * Helper function to handle fetch with CORS retry logic\n */\nasync function fetchWithCorsRetry(url: URL, headers?: Record<string, string>, fetchFn: FetchLike = fetch): Promise<Response | undefined> {\n    try {\n        return await fetchFn(url, { headers });\n    } catch (error) {\n        if (error instanceof TypeError) {\n            if (headers) {\n                // CORS errors come back as TypeError, retry without headers\n                return fetchWithCorsRetry(url, undefined, fetchFn);\n            } else {\n                // We're getting CORS errors on retry too, return undefined\n                return undefined;\n            }\n        }\n        throw error;\n    }\n}\n\n/**\n * Constructs the well-known path for auth-related metadata discovery\n */\nfunction buildWellKnownPath(\n    wellKnownPrefix: 'oauth-authorization-server' | 'oauth-protected-resource' | 'openid-configuration',\n    pathname: string = '',\n    options: { prependPathname?: boolean } = {}\n): string {\n    // Strip trailing slash from pathname to avoid double slashes\n    if (pathname.endsWith('/')) {\n        pathname = pathname.slice(0, -1);\n    }\n\n    return options.prependPathname ? `${pathname}/.well-known/${wellKnownPrefix}` : `/.well-known/${wellKnownPrefix}${pathname}`;\n}\n\n/**\n * Tries to discover OAuth metadata at a specific URL\n */\nasync function tryMetadataDiscovery(url: URL, protocolVersion: string, fetchFn: FetchLike = fetch): Promise<Response | undefined> {\n    const headers = {\n        'MCP-Protocol-Version': protocolVersion\n    };\n    return await fetchWithCorsRetry(url, headers, fetchFn);\n}\n\n/**\n * Determines if fallback to root discovery should be attempted\n */\nfunction shouldAttemptFallback(response: Response | undefined, pathname: string): boolean {\n    return !response || (response.status >= 400 && response.status < 500 && pathname !== '/');\n}\n\n/**\n * Generic function for discovering OAuth metadata with fallback support\n */\nasync function discoverMetadataWithFallback(\n    serverUrl: string | URL,\n    wellKnownType: 'oauth-authorization-server' | 'oauth-protected-resource',\n    fetchFn: FetchLike,\n    opts?: { protocolVersion?: string; metadataUrl?: string | URL; metadataServerUrl?: string | URL }\n): Promise<Response | undefined> {\n    const issuer = new URL(serverUrl);\n    const protocolVersion = opts?.protocolVersion ?? LATEST_PROTOCOL_VERSION;\n\n    let url: URL;\n    if (opts?.metadataUrl) {\n        url = new URL(opts.metadataUrl);\n    } else {\n        // Try path-aware discovery first\n        const wellKnownPath = buildWellKnownPath(wellKnownType, issuer.pathname);\n        url = new URL(wellKnownPath, opts?.metadataServerUrl ?? issuer);\n        url.search = issuer.search;\n    }\n\n    let response = await tryMetadataDiscovery(url, protocolVersion, fetchFn);\n\n    // If path-aware discovery fails with 404 and we're not already at root, try fallback to root discovery\n    if (!opts?.metadataUrl && shouldAttemptFallback(response, issuer.pathname)) {\n        const rootUrl = new URL(`/.well-known/${wellKnownType}`, issuer);\n        response = await tryMetadataDiscovery(rootUrl, protocolVersion, fetchFn);\n    }\n\n    return response;\n}\n\n/**\n * Looks up RFC 8414 OAuth 2.0 Authorization Server Metadata.\n *\n * If the server returns a 404 for the well-known endpoint, this function will\n * return `undefined`. Any other errors will be thrown as exceptions.\n *\n * @deprecated This function is deprecated in favor of `discoverAuthorizationServerMetadata`.\n */\nexport async function discoverOAuthMetadata(\n    issuer: string | URL,\n    {\n        authorizationServerUrl,\n        protocolVersion\n    }: {\n        authorizationServerUrl?: string | URL;\n        protocolVersion?: string;\n    } = {},\n    fetchFn: FetchLike = fetch\n): Promise<OAuthMetadata | undefined> {\n    if (typeof issuer === 'string') {\n        issuer = new URL(issuer);\n    }\n    if (!authorizationServerUrl) {\n        authorizationServerUrl = issuer;\n    }\n    if (typeof authorizationServerUrl === 'string') {\n        authorizationServerUrl = new URL(authorizationServerUrl);\n    }\n    protocolVersion ??= LATEST_PROTOCOL_VERSION;\n\n    const response = await discoverMetadataWithFallback(authorizationServerUrl, 'oauth-authorization-server', fetchFn, {\n        protocolVersion,\n        metadataServerUrl: authorizationServerUrl\n    });\n\n    if (!response || response.status === 404) {\n        return undefined;\n    }\n\n    if (!response.ok) {\n        throw new Error(`HTTP ${response.status} trying to load well-known OAuth metadata`);\n    }\n\n    return OAuthMetadataSchema.parse(await response.json());\n}\n\n/**\n * Builds a list of discovery URLs to try for authorization server metadata.\n * URLs are returned in priority order:\n * 1. OAuth metadata at the given URL\n * 2. OAuth metadata at root (if URL has path)\n * 3. OIDC metadata endpoints\n */\nexport function buildDiscoveryUrls(authorizationServerUrl: string | URL): { url: URL; type: 'oauth' | 'oidc' }[] {\n    const url = typeof authorizationServerUrl === 'string' ? new URL(authorizationServerUrl) : authorizationServerUrl;\n    const hasPath = url.pathname !== '/';\n    const urlsToTry: { url: URL; type: 'oauth' | 'oidc' }[] = [];\n\n    if (!hasPath) {\n        // Root path: https://example.com/.well-known/oauth-authorization-server\n        urlsToTry.push({\n            url: new URL('/.well-known/oauth-authorization-server', url.origin),\n            type: 'oauth'\n        });\n\n        // OIDC: https://example.com/.well-known/openid-configuration\n        urlsToTry.push({\n            url: new URL(`/.well-known/openid-configuration`, url.origin),\n            type: 'oidc'\n        });\n\n        return urlsToTry;\n    }\n\n    // Strip trailing slash from pathname to avoid double slashes\n    let pathname = url.pathname;\n    if (pathname.endsWith('/')) {\n        pathname = pathname.slice(0, -1);\n    }\n\n    // 1. OAuth metadata at the given URL\n    // Insert well-known before the path: https://example.com/.well-known/oauth-authorization-server/tenant1\n    urlsToTry.push({\n        url: new URL(`/.well-known/oauth-authorization-server${pathname}`, url.origin),\n        type: 'oauth'\n    });\n\n    // Root path: https://example.com/.well-known/oauth-authorization-server\n    urlsToTry.push({\n        url: new URL('/.well-known/oauth-authorization-server', url.origin),\n        type: 'oauth'\n    });\n\n    // 3. OIDC metadata endpoints\n    // RFC 8414 style: Insert /.well-known/openid-configuration before the path\n    urlsToTry.push({\n        url: new URL(`/.well-known/openid-configuration${pathname}`, url.origin),\n        type: 'oidc'\n    });\n    // OIDC Discovery 1.0 style: Append /.well-known/openid-configuration after the path\n    urlsToTry.push({\n        url: new URL(`${pathname}/.well-known/openid-configuration`, url.origin),\n        type: 'oidc'\n    });\n\n    return urlsToTry;\n}\n\n/**\n * Discovers authorization server metadata with support for RFC 8414 OAuth 2.0 Authorization Server Metadata\n * and OpenID Connect Discovery 1.0 specifications.\n *\n * This function implements a fallback strategy for authorization server discovery:\n * 1. Attempts RFC 8414 OAuth metadata discovery first\n * 2. If OAuth discovery fails, falls back to OpenID Connect Discovery\n *\n * @param authorizationServerUrl - The authorization server URL obtained from the MCP Server's\n *                                 protected resource metadata, or the MCP server's URL if the\n *                                 metadata was not found.\n * @param options - Configuration options\n * @param options.fetchFn - Optional fetch function for making HTTP requests, defaults to global fetch\n * @param options.protocolVersion - MCP protocol version to use, defaults to LATEST_PROTOCOL_VERSION\n * @returns Promise resolving to authorization server metadata, or undefined if discovery fails\n */\nexport async function discoverAuthorizationServerMetadata(\n    authorizationServerUrl: string | URL,\n    {\n        fetchFn = fetch,\n        protocolVersion = LATEST_PROTOCOL_VERSION\n    }: {\n        fetchFn?: FetchLike;\n        protocolVersion?: string;\n    } = {}\n): Promise<AuthorizationServerMetadata | undefined> {\n    const headers = { 'MCP-Protocol-Version': protocolVersion };\n\n    // Get the list of URLs to try\n    const urlsToTry = buildDiscoveryUrls(authorizationServerUrl);\n\n    // Try each URL in order\n    for (const { url: endpointUrl, type } of urlsToTry) {\n        const response = await fetchWithCorsRetry(endpointUrl, headers, fetchFn);\n\n        if (!response) {\n            /**\n             * CORS error occurred - don't throw as the endpoint may not allow CORS,\n             * continue trying other possible endpoints\n             */\n            continue;\n        }\n\n        if (!response.ok) {\n            // Continue looking for any 4xx response code.\n            if (response.status >= 400 && response.status < 500) {\n                continue; // Try next URL\n            }\n            throw new Error(\n                `HTTP ${response.status} trying to load ${type === 'oauth' ? 'OAuth' : 'OpenID provider'} metadata from ${endpointUrl}`\n            );\n        }\n\n        // Parse and validate based on type\n        if (type === 'oauth') {\n            return OAuthMetadataSchema.parse(await response.json());\n        } else {\n            const metadata = OpenIdProviderDiscoveryMetadataSchema.parse(await response.json());\n\n            // MCP spec requires OIDC providers to support S256 PKCE\n            if (!metadata.code_challenge_methods_supported?.includes('S256')) {\n                throw new Error(\n                    `Incompatible OIDC provider at ${endpointUrl}: does not support S256 code challenge method required by MCP specification`\n                );\n            }\n\n            return metadata;\n        }\n    }\n\n    return undefined;\n}\n\n/**\n * Begins the authorization flow with the given server, by generating a PKCE challenge and constructing the authorization URL.\n */\nexport async function startAuthorization(\n    authorizationServerUrl: string | URL,\n    {\n        metadata,\n        clientInformation,\n        redirectUrl,\n        scope,\n        state,\n        resource\n    }: {\n        metadata?: AuthorizationServerMetadata;\n        clientInformation: OAuthClientInformation;\n        redirectUrl: string | URL;\n        scope?: string;\n        state?: string;\n        resource?: URL;\n    }\n): Promise<{ authorizationUrl: URL; codeVerifier: string }> {\n    const responseType = 'code';\n    const codeChallengeMethod = 'S256';\n\n    let authorizationUrl: URL;\n    if (metadata) {\n        authorizationUrl = new URL(metadata.authorization_endpoint);\n\n        if (!metadata.response_types_supported.includes(responseType)) {\n            throw new Error(`Incompatible auth server: does not support response type ${responseType}`);\n        }\n\n        if (!metadata.code_challenge_methods_supported || !metadata.code_challenge_methods_supported.includes(codeChallengeMethod)) {\n            throw new Error(`Incompatible auth server: does not support code challenge method ${codeChallengeMethod}`);\n        }\n    } else {\n        authorizationUrl = new URL('/authorize', authorizationServerUrl);\n    }\n\n    // Generate PKCE challenge\n    const challenge = await pkceChallenge();\n    const codeVerifier = challenge.code_verifier;\n    const codeChallenge = challenge.code_challenge;\n\n    authorizationUrl.searchParams.set('response_type', responseType);\n    authorizationUrl.searchParams.set('client_id', clientInformation.client_id);\n    authorizationUrl.searchParams.set('code_challenge', codeChallenge);\n    authorizationUrl.searchParams.set('code_challenge_method', codeChallengeMethod);\n    authorizationUrl.searchParams.set('redirect_uri', String(redirectUrl));\n\n    if (state) {\n        authorizationUrl.searchParams.set('state', state);\n    }\n\n    if (scope) {\n        authorizationUrl.searchParams.set('scope', scope);\n    }\n\n    if (scope?.includes('offline_access')) {\n        // if the request includes the OIDC-only \"offline_access\" scope,\n        // we need to set the prompt to \"consent\" to ensure the user is prompted to grant offline access\n        // https://openid.net/specs/openid-connect-core-1_0.html#OfflineAccess\n        authorizationUrl.searchParams.append('prompt', 'consent');\n    }\n\n    if (resource) {\n        authorizationUrl.searchParams.set('resource', resource.href);\n    }\n\n    return { authorizationUrl, codeVerifier };\n}\n\n/**\n * Exchanges an authorization code for an access token with the given server.\n *\n * Supports multiple client authentication methods as specified in OAuth 2.1:\n * - Automatically selects the best authentication method based on server support\n * - Falls back to appropriate defaults when server metadata is unavailable\n *\n * @param authorizationServerUrl - The authorization server's base URL\n * @param options - Configuration object containing client info, auth code, etc.\n * @returns Promise resolving to OAuth tokens\n * @throws {Error} When token exchange fails or authentication is invalid\n */\nexport async function exchangeAuthorization(\n    authorizationServerUrl: string | URL,\n    {\n        metadata,\n        clientInformation,\n        authorizationCode,\n        codeVerifier,\n        redirectUri,\n        resource,\n        addClientAuthentication,\n        fetchFn\n    }: {\n        metadata?: AuthorizationServerMetadata;\n        clientInformation: OAuthClientInformation;\n        authorizationCode: string;\n        codeVerifier: string;\n        redirectUri: string | URL;\n        resource?: URL;\n        addClientAuthentication?: OAuthClientProvider['addClientAuthentication'];\n        fetchFn?: FetchLike;\n    }\n): Promise<OAuthTokens> {\n    const grantType = 'authorization_code';\n\n    const tokenUrl = metadata?.token_endpoint ? new URL(metadata.token_endpoint) : new URL('/token', authorizationServerUrl);\n\n    if (metadata?.grant_types_supported && !metadata.grant_types_supported.includes(grantType)) {\n        throw new Error(`Incompatible auth server: does not support grant type ${grantType}`);\n    }\n\n    // Exchange code for tokens\n    const headers = new Headers({\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Accept: 'application/json'\n    });\n    const params = new URLSearchParams({\n        grant_type: grantType,\n        code: authorizationCode,\n        code_verifier: codeVerifier,\n        redirect_uri: String(redirectUri)\n    });\n\n    if (addClientAuthentication) {\n        addClientAuthentication(headers, params, authorizationServerUrl, metadata);\n    } else {\n        // Determine and apply client authentication method\n        const supportedMethods = metadata?.token_endpoint_auth_methods_supported ?? [];\n        const authMethod = selectClientAuthMethod(clientInformation, supportedMethods);\n\n        applyClientAuthentication(authMethod, clientInformation, headers, params);\n    }\n\n    if (resource) {\n        params.set('resource', resource.href);\n    }\n\n    const response = await (fetchFn ?? fetch)(tokenUrl, {\n        method: 'POST',\n        headers,\n        body: params\n    });\n\n    if (!response.ok) {\n        throw await parseErrorResponse(response);\n    }\n\n    return OAuthTokensSchema.parse(await response.json());\n}\n\n/**\n * Exchange a refresh token for an updated access token.\n *\n * Supports multiple client authentication methods as specified in OAuth 2.1:\n * - Automatically selects the best authentication method based on server support\n * - Preserves the original refresh token if a new one is not returned\n *\n * @param authorizationServerUrl - The authorization server's base URL\n * @param options - Configuration object containing client info, refresh token, etc.\n * @returns Promise resolving to OAuth tokens (preserves original refresh_token if not replaced)\n * @throws {Error} When token refresh fails or authentication is invalid\n */\nexport async function refreshAuthorization(\n    authorizationServerUrl: string | URL,\n    {\n        metadata,\n        clientInformation,\n        refreshToken,\n        resource,\n        addClientAuthentication,\n        fetchFn\n    }: {\n        metadata?: AuthorizationServerMetadata;\n        clientInformation: OAuthClientInformation;\n        refreshToken: string;\n        resource?: URL;\n        addClientAuthentication?: OAuthClientProvider['addClientAuthentication'];\n        fetchFn?: FetchLike;\n    }\n): Promise<OAuthTokens> {\n    const grantType = 'refresh_token';\n\n    let tokenUrl: URL;\n    if (metadata) {\n        tokenUrl = new URL(metadata.token_endpoint);\n\n        if (metadata.grant_types_supported && !metadata.grant_types_supported.includes(grantType)) {\n            throw new Error(`Incompatible auth server: does not support grant type ${grantType}`);\n        }\n    } else {\n        tokenUrl = new URL('/token', authorizationServerUrl);\n    }\n\n    // Exchange refresh token\n    const headers = new Headers({\n        'Content-Type': 'application/x-www-form-urlencoded'\n    });\n    const params = new URLSearchParams({\n        grant_type: grantType,\n        refresh_token: refreshToken\n    });\n\n    if (addClientAuthentication) {\n        addClientAuthentication(headers, params, authorizationServerUrl, metadata);\n    } else {\n        // Determine and apply client authentication method\n        const supportedMethods = metadata?.token_endpoint_auth_methods_supported ?? [];\n        const authMethod = selectClientAuthMethod(clientInformation, supportedMethods);\n\n        applyClientAuthentication(authMethod, clientInformation, headers, params);\n    }\n\n    if (resource) {\n        params.set('resource', resource.href);\n    }\n\n    const response = await (fetchFn ?? fetch)(tokenUrl, {\n        method: 'POST',\n        headers,\n        body: params\n    });\n    if (!response.ok) {\n        throw await parseErrorResponse(response);\n    }\n\n    return OAuthTokensSchema.parse({ refresh_token: refreshToken, ...(await response.json()) });\n}\n\n/**\n * Performs OAuth 2.0 Dynamic Client Registration according to RFC 7591.\n */\nexport async function registerClient(\n    authorizationServerUrl: string | URL,\n    {\n        metadata,\n        clientMetadata,\n        fetchFn\n    }: {\n        metadata?: AuthorizationServerMetadata;\n        clientMetadata: OAuthClientMetadata;\n        fetchFn?: FetchLike;\n    }\n): Promise<OAuthClientInformationFull> {\n    let registrationUrl: URL;\n\n    if (metadata) {\n        if (!metadata.registration_endpoint) {\n            throw new Error('Incompatible auth server: does not support dynamic client registration');\n        }\n\n        registrationUrl = new URL(metadata.registration_endpoint);\n    } else {\n        registrationUrl = new URL('/register', authorizationServerUrl);\n    }\n\n    const response = await (fetchFn ?? fetch)(registrationUrl, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(clientMetadata)\n    });\n\n    if (!response.ok) {\n        throw await parseErrorResponse(response);\n    }\n\n    return OAuthClientInformationFullSchema.parse(await response.json());\n}\n","var __defProp = Object.defineProperty, __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __publicField = (obj, key, value) => __defNormalProp(obj, typeof key != \"symbol\" ? key + \"\" : key, value);\nclass ParseError extends Error {\n  constructor(message, options) {\n    super(message), __publicField(this, \"type\"), __publicField(this, \"field\"), __publicField(this, \"value\"), __publicField(this, \"line\"), this.name = \"ParseError\", this.type = options.type, this.field = options.field, this.value = options.value, this.line = options.line;\n  }\n}\nfunction noop(_arg) {\n}\nfunction createParser(callbacks) {\n  const { onEvent = noop, onError = noop, onRetry = noop, onComment } = callbacks;\n  let incompleteLine = \"\", isFirstChunk = !0, id, data = \"\", eventType = \"\";\n  function feed(newChunk) {\n    const chunk = isFirstChunk ? newChunk.replace(/^\\xEF\\xBB\\xBF/, \"\") : newChunk, [complete, incomplete] = splitLines(`${incompleteLine}${chunk}`);\n    for (const line of complete)\n      parseLine(line);\n    incompleteLine = incomplete, isFirstChunk = !1;\n  }\n  function parseLine(line) {\n    if (line === \"\") {\n      dispatchEvent();\n      return;\n    }\n    if (line.startsWith(\":\")) {\n      onComment && onComment(line.slice(line.startsWith(\": \") ? 2 : 1));\n      return;\n    }\n    const fieldSeparatorIndex = line.indexOf(\":\");\n    if (fieldSeparatorIndex !== -1) {\n      const field = line.slice(0, fieldSeparatorIndex), offset = line[fieldSeparatorIndex + 1] === \" \" ? 2 : 1, value = line.slice(fieldSeparatorIndex + offset);\n      processField(field, value, line);\n      return;\n    }\n    processField(line, \"\", line);\n  }\n  function processField(field, value, line) {\n    switch (field) {\n      case \"event\":\n        eventType = value;\n        break;\n      case \"data\":\n        data = `${data}${value}\n`;\n        break;\n      case \"id\":\n        id = value.includes(\"\\0\") ? void 0 : value;\n        break;\n      case \"retry\":\n        /^\\d+$/.test(value) ? onRetry(parseInt(value, 10)) : onError(\n          new ParseError(`Invalid \\`retry\\` value: \"${value}\"`, {\n            type: \"invalid-retry\",\n            value,\n            line\n          })\n        );\n        break;\n      default:\n        onError(\n          new ParseError(\n            `Unknown field \"${field.length > 20 ? `${field.slice(0, 20)}\\u2026` : field}\"`,\n            { type: \"unknown-field\", field, value, line }\n          )\n        );\n        break;\n    }\n  }\n  function dispatchEvent() {\n    data.length > 0 && onEvent({\n      id,\n      event: eventType || void 0,\n      // If the data buffer's last character is a U+000A LINE FEED (LF) character,\n      // then remove the last character from the data buffer.\n      data: data.endsWith(`\n`) ? data.slice(0, -1) : data\n    }), id = void 0, data = \"\", eventType = \"\";\n  }\n  function reset(options = {}) {\n    incompleteLine && options.consume && parseLine(incompleteLine), id = void 0, data = \"\", eventType = \"\", incompleteLine = \"\";\n  }\n  return { feed, reset };\n}\nfunction splitLines(chunk) {\n  const lines = [];\n  let incompleteLine = \"\";\n  const totalLength = chunk.length;\n  for (let i = 0; i < totalLength; i++) {\n    const char = chunk[i];\n    char === \"\\r\" && chunk[i + 1] === `\n` ? (lines.push(incompleteLine), incompleteLine = \"\", i++) : char === \"\\r\" || char === `\n` ? (lines.push(incompleteLine), incompleteLine = \"\") : incompleteLine += char;\n  }\n  return [lines, incompleteLine];\n}\nexport {\n  ParseError,\n  createParser\n};\n//# sourceMappingURL=index.js.map\n","import { createParser } from \"./index.js\";\nimport { ParseError } from \"./index.js\";\nclass EventSourceParserStream extends TransformStream {\n  constructor({ onError, onRetry, onComment } = {}) {\n    let parser;\n    super({\n      start(controller) {\n        parser = createParser({\n          onEvent: (event) => {\n            controller.enqueue(event);\n          },\n          onError(error) {\n            onError === \"terminate\" ? controller.error(error) : typeof onError == \"function\" && onError(error);\n          },\n          onRetry,\n          onComment\n        });\n      },\n      transform(chunk) {\n        parser.feed(chunk);\n      }\n    });\n  }\n}\nexport {\n  EventSourceParserStream,\n  ParseError\n};\n//# sourceMappingURL=stream.js.map\n","import { Transport, FetchLike } from '../shared/transport.js';\nimport { isInitializedNotification, isJSONRPCRequest, isJSONRPCResponse, JSONRPCMessage, JSONRPCMessageSchema } from '../types.js';\nimport { auth, AuthResult, extractResourceMetadataUrl, OAuthClientProvider, UnauthorizedError } from './auth.js';\nimport { EventSourceParserStream } from 'eventsource-parser/stream';\n\n// Default reconnection options for StreamableHTTP connections\nconst DEFAULT_STREAMABLE_HTTP_RECONNECTION_OPTIONS: StreamableHTTPReconnectionOptions = {\n    initialReconnectionDelay: 1000,\n    maxReconnectionDelay: 30000,\n    reconnectionDelayGrowFactor: 1.5,\n    maxRetries: 2\n};\n\nexport class StreamableHTTPError extends Error {\n    constructor(\n        public readonly code: number | undefined,\n        message: string | undefined\n    ) {\n        super(`Streamable HTTP error: ${message}`);\n    }\n}\n\n/**\n * Options for starting or authenticating an SSE connection\n */\nexport interface StartSSEOptions {\n    /**\n     * The resumption token used to continue long-running requests that were interrupted.\n     *\n     * This allows clients to reconnect and continue from where they left off.\n     */\n    resumptionToken?: string;\n\n    /**\n     * A callback that is invoked when the resumption token changes.\n     *\n     * This allows clients to persist the latest token for potential reconnection.\n     */\n    onresumptiontoken?: (token: string) => void;\n\n    /**\n     * Override Message ID to associate with the replay message\n     * so that response can be associate with the new resumed request.\n     */\n    replayMessageId?: string | number;\n}\n\n/**\n * Configuration options for reconnection behavior of the StreamableHTTPClientTransport.\n */\nexport interface StreamableHTTPReconnectionOptions {\n    /**\n     * Maximum backoff time between reconnection attempts in milliseconds.\n     * Default is 30000 (30 seconds).\n     */\n    maxReconnectionDelay: number;\n\n    /**\n     * Initial backoff time between reconnection attempts in milliseconds.\n     * Default is 1000 (1 second).\n     */\n    initialReconnectionDelay: number;\n\n    /**\n     * The factor by which the reconnection delay increases after each attempt.\n     * Default is 1.5.\n     */\n    reconnectionDelayGrowFactor: number;\n\n    /**\n     * Maximum number of reconnection attempts before giving up.\n     * Default is 2.\n     */\n    maxRetries: number;\n}\n\n/**\n * Configuration options for the `StreamableHTTPClientTransport`.\n */\nexport type StreamableHTTPClientTransportOptions = {\n    /**\n     * An OAuth client provider to use for authentication.\n     *\n     * When an `authProvider` is specified and the connection is started:\n     * 1. The connection is attempted with any existing access token from the `authProvider`.\n     * 2. If the access token has expired, the `authProvider` is used to refresh the token.\n     * 3. If token refresh fails or no access token exists, and auth is required, `OAuthClientProvider.redirectToAuthorization` is called, and an `UnauthorizedError` will be thrown from `connect`/`start`.\n     *\n     * After the user has finished authorizing via their user agent, and is redirected back to the MCP client application, call `StreamableHTTPClientTransport.finishAuth` with the authorization code before retrying the connection.\n     *\n     * If an `authProvider` is not provided, and auth is required, an `UnauthorizedError` will be thrown.\n     *\n     * `UnauthorizedError` might also be thrown when sending any message over the transport, indicating that the session has expired, and needs to be re-authed and reconnected.\n     */\n    authProvider?: OAuthClientProvider;\n\n    /**\n     * Customizes HTTP requests to the server.\n     */\n    requestInit?: RequestInit;\n\n    /**\n     * Custom fetch implementation used for all network requests.\n     */\n    fetch?: FetchLike;\n\n    /**\n     * Options to configure the reconnection behavior.\n     */\n    reconnectionOptions?: StreamableHTTPReconnectionOptions;\n\n    /**\n     * Session ID for the connection. This is used to identify the session on the server.\n     * When not provided and connecting to a server that supports session IDs, the server will generate a new session ID.\n     */\n    sessionId?: string;\n};\n\n/**\n * Client transport for Streamable HTTP: this implements the MCP Streamable HTTP transport specification.\n * It will connect to a server using HTTP POST for sending messages and HTTP GET with Server-Sent Events\n * for receiving messages.\n */\nexport class StreamableHTTPClientTransport implements Transport {\n    private _abortController?: AbortController;\n    private _url: URL;\n    private _resourceMetadataUrl?: URL;\n    private _requestInit?: RequestInit;\n    private _authProvider?: OAuthClientProvider;\n    private _fetch?: FetchLike;\n    private _sessionId?: string;\n    private _reconnectionOptions: StreamableHTTPReconnectionOptions;\n    private _protocolVersion?: string;\n    private _hasCompletedAuthFlow = false; // Circuit breaker: detect auth success followed by immediate 401\n\n    onclose?: () => void;\n    onerror?: (error: Error) => void;\n    onmessage?: (message: JSONRPCMessage) => void;\n\n    constructor(url: URL, opts?: StreamableHTTPClientTransportOptions) {\n        this._url = url;\n        this._resourceMetadataUrl = undefined;\n        this._requestInit = opts?.requestInit;\n        this._authProvider = opts?.authProvider;\n        this._fetch = opts?.fetch;\n        this._sessionId = opts?.sessionId;\n        this._reconnectionOptions = opts?.reconnectionOptions ?? DEFAULT_STREAMABLE_HTTP_RECONNECTION_OPTIONS;\n    }\n\n    private async _authThenStart(): Promise<void> {\n        if (!this._authProvider) {\n            throw new UnauthorizedError('No auth provider');\n        }\n\n        let result: AuthResult;\n        try {\n            result = await auth(this._authProvider, {\n                serverUrl: this._url,\n                resourceMetadataUrl: this._resourceMetadataUrl,\n                fetchFn: this._fetch\n            });\n        } catch (error) {\n            this.onerror?.(error as Error);\n            throw error;\n        }\n\n        if (result !== 'AUTHORIZED') {\n            throw new UnauthorizedError();\n        }\n\n        return await this._startOrAuthSse({ resumptionToken: undefined });\n    }\n\n    private async _commonHeaders(): Promise<Headers> {\n        const headers: HeadersInit & Record<string, string> = {};\n        if (this._authProvider) {\n            const tokens = await this._authProvider.tokens();\n            if (tokens) {\n                headers['Authorization'] = `Bearer ${tokens.access_token}`;\n            }\n        }\n\n        if (this._sessionId) {\n            headers['mcp-session-id'] = this._sessionId;\n        }\n        if (this._protocolVersion) {\n            headers['mcp-protocol-version'] = this._protocolVersion;\n        }\n\n        const extraHeaders = this._normalizeHeaders(this._requestInit?.headers);\n\n        return new Headers({\n            ...headers,\n            ...extraHeaders\n        });\n    }\n\n    private async _startOrAuthSse(options: StartSSEOptions): Promise<void> {\n        const { resumptionToken } = options;\n        try {\n            // Try to open an initial SSE stream with GET to listen for server messages\n            // This is optional according to the spec - server may not support it\n            const headers = await this._commonHeaders();\n            headers.set('Accept', 'text/event-stream');\n\n            // Include Last-Event-ID header for resumable streams if provided\n            if (resumptionToken) {\n                headers.set('last-event-id', resumptionToken);\n            }\n\n            const response = await (this._fetch ?? fetch)(this._url, {\n                method: 'GET',\n                headers,\n                signal: this._abortController?.signal\n            });\n\n            if (!response.ok) {\n                if (response.status === 401 && this._authProvider) {\n                    // Need to authenticate\n                    return await this._authThenStart();\n                }\n\n                // 405 indicates that the server does not offer an SSE stream at GET endpoint\n                // This is an expected case that should not trigger an error\n                if (response.status === 405) {\n                    return;\n                }\n\n                throw new StreamableHTTPError(response.status, `Failed to open SSE stream: ${response.statusText}`);\n            }\n\n            this._handleSseStream(response.body, options, true);\n        } catch (error) {\n            this.onerror?.(error as Error);\n            throw error;\n        }\n    }\n\n    /**\n     * Calculates the next reconnection delay using  backoff algorithm\n     *\n     * @param attempt Current reconnection attempt count for the specific stream\n     * @returns Time to wait in milliseconds before next reconnection attempt\n     */\n    private _getNextReconnectionDelay(attempt: number): number {\n        // Access default values directly, ensuring they're never undefined\n        const initialDelay = this._reconnectionOptions.initialReconnectionDelay;\n        const growFactor = this._reconnectionOptions.reconnectionDelayGrowFactor;\n        const maxDelay = this._reconnectionOptions.maxReconnectionDelay;\n\n        // Cap at maximum delay\n        return Math.min(initialDelay * Math.pow(growFactor, attempt), maxDelay);\n    }\n\n    private _normalizeHeaders(headers: HeadersInit | undefined): Record<string, string> {\n        if (!headers) return {};\n\n        if (headers instanceof Headers) {\n            return Object.fromEntries(headers.entries());\n        }\n\n        if (Array.isArray(headers)) {\n            return Object.fromEntries(headers);\n        }\n\n        return { ...(headers as Record<string, string>) };\n    }\n\n    /**\n     * Schedule a reconnection attempt with exponential backoff\n     *\n     * @param lastEventId The ID of the last received event for resumability\n     * @param attemptCount Current reconnection attempt count for this specific stream\n     */\n    private _scheduleReconnection(options: StartSSEOptions, attemptCount = 0): void {\n        // Use provided options or default options\n        const maxRetries = this._reconnectionOptions.maxRetries;\n\n        // Check if we've exceeded maximum retry attempts\n        if (maxRetries > 0 && attemptCount >= maxRetries) {\n            this.onerror?.(new Error(`Maximum reconnection attempts (${maxRetries}) exceeded.`));\n            return;\n        }\n\n        // Calculate next delay based on current attempt count\n        const delay = this._getNextReconnectionDelay(attemptCount);\n\n        // Schedule the reconnection\n        setTimeout(() => {\n            // Use the last event ID to resume where we left off\n            this._startOrAuthSse(options).catch(error => {\n                this.onerror?.(new Error(`Failed to reconnect SSE stream: ${error instanceof Error ? error.message : String(error)}`));\n                // Schedule another attempt if this one failed, incrementing the attempt counter\n                this._scheduleReconnection(options, attemptCount + 1);\n            });\n        }, delay);\n    }\n\n    private _handleSseStream(stream: ReadableStream<Uint8Array> | null, options: StartSSEOptions, isReconnectable: boolean): void {\n        if (!stream) {\n            return;\n        }\n        const { onresumptiontoken, replayMessageId } = options;\n\n        let lastEventId: string | undefined;\n        const processStream = async () => {\n            // this is the closest we can get to trying to catch network errors\n            // if something happens reader will throw\n            try {\n                // Create a pipeline: binary stream -> text decoder -> SSE parser\n                const reader = stream.pipeThrough(new TextDecoderStream()).pipeThrough(new EventSourceParserStream()).getReader();\n\n                while (true) {\n                    const { value: event, done } = await reader.read();\n                    if (done) {\n                        break;\n                    }\n\n                    // Update last event ID if provided\n                    if (event.id) {\n                        lastEventId = event.id;\n                        onresumptiontoken?.(event.id);\n                    }\n\n                    if (!event.event || event.event === 'message') {\n                        try {\n                            const message = JSONRPCMessageSchema.parse(JSON.parse(event.data));\n                            if (replayMessageId !== undefined && isJSONRPCResponse(message)) {\n                                message.id = replayMessageId;\n                            }\n                            this.onmessage?.(message);\n                        } catch (error) {\n                            this.onerror?.(error as Error);\n                        }\n                    }\n                }\n            } catch (error) {\n                // Handle stream errors - likely a network disconnect\n                this.onerror?.(new Error(`SSE stream disconnected: ${error}`));\n\n                // Attempt to reconnect if the stream disconnects unexpectedly and we aren't closing\n                if (isReconnectable && this._abortController && !this._abortController.signal.aborted) {\n                    // Use the exponential backoff reconnection strategy\n                    try {\n                        this._scheduleReconnection(\n                            {\n                                resumptionToken: lastEventId,\n                                onresumptiontoken,\n                                replayMessageId\n                            },\n                            0\n                        );\n                    } catch (error) {\n                        this.onerror?.(new Error(`Failed to reconnect: ${error instanceof Error ? error.message : String(error)}`));\n                    }\n                }\n            }\n        };\n        processStream();\n    }\n\n    async start() {\n        if (this._abortController) {\n            throw new Error(\n                'StreamableHTTPClientTransport already started! If using Client class, note that connect() calls start() automatically.'\n            );\n        }\n\n        this._abortController = new AbortController();\n    }\n\n    /**\n     * Call this method after the user has finished authorizing via their user agent and is redirected back to the MCP client application. This will exchange the authorization code for an access token, enabling the next connection attempt to successfully auth.\n     */\n    async finishAuth(authorizationCode: string): Promise<void> {\n        if (!this._authProvider) {\n            throw new UnauthorizedError('No auth provider');\n        }\n\n        const result = await auth(this._authProvider, {\n            serverUrl: this._url,\n            authorizationCode,\n            resourceMetadataUrl: this._resourceMetadataUrl,\n            fetchFn: this._fetch\n        });\n        if (result !== 'AUTHORIZED') {\n            throw new UnauthorizedError('Failed to authorize');\n        }\n    }\n\n    async close(): Promise<void> {\n        // Abort any pending requests\n        this._abortController?.abort();\n\n        this.onclose?.();\n    }\n\n    async send(\n        message: JSONRPCMessage | JSONRPCMessage[],\n        options?: { resumptionToken?: string; onresumptiontoken?: (token: string) => void }\n    ): Promise<void> {\n        try {\n            const { resumptionToken, onresumptiontoken } = options || {};\n\n            if (resumptionToken) {\n                // If we have at last event ID, we need to reconnect the SSE stream\n                this._startOrAuthSse({ resumptionToken, replayMessageId: isJSONRPCRequest(message) ? message.id : undefined }).catch(err =>\n                    this.onerror?.(err)\n                );\n                return;\n            }\n\n            const headers = await this._commonHeaders();\n            headers.set('content-type', 'application/json');\n            headers.set('accept', 'application/json, text/event-stream');\n\n            const init = {\n                ...this._requestInit,\n                method: 'POST',\n                headers,\n                body: JSON.stringify(message),\n                signal: this._abortController?.signal\n            };\n\n            const response = await (this._fetch ?? fetch)(this._url, init);\n\n            // Handle session ID received during initialization\n            const sessionId = response.headers.get('mcp-session-id');\n            if (sessionId) {\n                this._sessionId = sessionId;\n            }\n\n            if (!response.ok) {\n                if (response.status === 401 && this._authProvider) {\n                    // Prevent infinite recursion when server returns 401 after successful auth\n                    if (this._hasCompletedAuthFlow) {\n                        throw new StreamableHTTPError(401, 'Server returned 401 after successful authentication');\n                    }\n\n                    this._resourceMetadataUrl = extractResourceMetadataUrl(response);\n\n                    const result = await auth(this._authProvider, {\n                        serverUrl: this._url,\n                        resourceMetadataUrl: this._resourceMetadataUrl,\n                        fetchFn: this._fetch\n                    });\n                    if (result !== 'AUTHORIZED') {\n                        throw new UnauthorizedError();\n                    }\n\n                    // Mark that we completed auth flow\n                    this._hasCompletedAuthFlow = true;\n                    // Purposely _not_ awaited, so we don't call onerror twice\n                    return this.send(message);\n                }\n\n                const text = await response.text().catch(() => null);\n                throw new Error(`Error POSTing to endpoint (HTTP ${response.status}): ${text}`);\n            }\n\n            // Reset auth loop flag on successful response\n            this._hasCompletedAuthFlow = false;\n\n            // If the response is 202 Accepted, there's no body to process\n            if (response.status === 202) {\n                // if the accepted notification is initialized, we start the SSE stream\n                // if it's supported by the server\n                if (isInitializedNotification(message)) {\n                    // Start without a lastEventId since this is a fresh connection\n                    this._startOrAuthSse({ resumptionToken: undefined }).catch(err => this.onerror?.(err));\n                }\n                return;\n            }\n\n            // Get original message(s) for detecting request IDs\n            const messages = Array.isArray(message) ? message : [message];\n\n            const hasRequests = messages.filter(msg => 'method' in msg && 'id' in msg && msg.id !== undefined).length > 0;\n\n            // Check the response type\n            const contentType = response.headers.get('content-type');\n\n            if (hasRequests) {\n                if (contentType?.includes('text/event-stream')) {\n                    // Handle SSE stream responses for requests\n                    // We use the same handler as standalone streams, which now supports\n                    // reconnection with the last event ID\n                    this._handleSseStream(response.body, { onresumptiontoken }, false);\n                } else if (contentType?.includes('application/json')) {\n                    // For non-streaming servers, we might get direct JSON responses\n                    const data = await response.json();\n                    const responseMessages = Array.isArray(data)\n                        ? data.map(msg => JSONRPCMessageSchema.parse(msg))\n                        : [JSONRPCMessageSchema.parse(data)];\n\n                    for (const msg of responseMessages) {\n                        this.onmessage?.(msg);\n                    }\n                } else {\n                    throw new StreamableHTTPError(-1, `Unexpected content type: ${contentType}`);\n                }\n            }\n        } catch (error) {\n            this.onerror?.(error as Error);\n            throw error;\n        }\n    }\n\n    get sessionId(): string | undefined {\n        return this._sessionId;\n    }\n\n    /**\n     * Terminates the current session by sending a DELETE request to the server.\n     *\n     * Clients that no longer need a particular session\n     * (e.g., because the user is leaving the client application) SHOULD send an\n     * HTTP DELETE to the MCP endpoint with the Mcp-Session-Id header to explicitly\n     * terminate the session.\n     *\n     * The server MAY respond with HTTP 405 Method Not Allowed, indicating that\n     * the server does not allow clients to terminate sessions.\n     */\n    async terminateSession(): Promise<void> {\n        if (!this._sessionId) {\n            return; // No session to terminate\n        }\n\n        try {\n            const headers = await this._commonHeaders();\n\n            const init = {\n                ...this._requestInit,\n                method: 'DELETE',\n                headers,\n                signal: this._abortController?.signal\n            };\n\n            const response = await (this._fetch ?? fetch)(this._url, init);\n\n            // We specifically handle 405 as a valid response according to the spec,\n            // meaning the server does not support explicit session termination\n            if (!response.ok && response.status !== 405) {\n                throw new StreamableHTTPError(response.status, `Failed to terminate session: ${response.statusText}`);\n            }\n\n            this._sessionId = undefined;\n        } catch (error) {\n            this.onerror?.(error as Error);\n            throw error;\n        }\n    }\n\n    setProtocolVersion(version: string): void {\n        this._protocolVersion = version;\n    }\n    get protocolVersion(): string | undefined {\n        return this._protocolVersion;\n    }\n}\n","import { Transport } from './shared/transport.js';\nimport { JSONRPCMessage, RequestId } from './types.js';\nimport { AuthInfo } from './server/auth/types.js';\n\ninterface QueuedMessage {\n    message: JSONRPCMessage;\n    extra?: { authInfo?: AuthInfo };\n}\n\n/**\n * In-memory transport for creating clients and servers that talk to each other within the same process.\n */\nexport class InMemoryTransport implements Transport {\n    private _otherTransport?: InMemoryTransport;\n    private _messageQueue: QueuedMessage[] = [];\n\n    onclose?: () => void;\n    onerror?: (error: Error) => void;\n    onmessage?: (message: JSONRPCMessage, extra?: { authInfo?: AuthInfo }) => void;\n    sessionId?: string;\n\n    /**\n     * Creates a pair of linked in-memory transports that can communicate with each other. One should be passed to a Client and one to a Server.\n     */\n    static createLinkedPair(): [InMemoryTransport, InMemoryTransport] {\n        const clientTransport = new InMemoryTransport();\n        const serverTransport = new InMemoryTransport();\n        clientTransport._otherTransport = serverTransport;\n        serverTransport._otherTransport = clientTransport;\n        return [clientTransport, serverTransport];\n    }\n\n    async start(): Promise<void> {\n        // Process any messages that were queued before start was called\n        while (this._messageQueue.length > 0) {\n            const queuedMessage = this._messageQueue.shift()!;\n            this.onmessage?.(queuedMessage.message, queuedMessage.extra);\n        }\n    }\n\n    async close(): Promise<void> {\n        const other = this._otherTransport;\n        this._otherTransport = undefined;\n        await other?.close();\n        this.onclose?.();\n    }\n\n    /**\n     * Sends a message with optional auth info.\n     * This is useful for testing authentication scenarios.\n     */\n    async send(message: JSONRPCMessage, options?: { relatedRequestId?: RequestId; authInfo?: AuthInfo }): Promise<void> {\n        if (!this._otherTransport) {\n            throw new Error('Not connected');\n        }\n\n        if (this._otherTransport.onmessage) {\n            this._otherTransport.onmessage(message, { authInfo: options?.authInfo });\n        } else {\n            this._otherTransport._messageQueue.push({ message, extra: { authInfo: options?.authInfo } });\n        }\n    }\n}\n","import { mergeCapabilities, Protocol, ProtocolOptions, RequestOptions } from '../shared/protocol.js';\nimport {\n    ClientCapabilities,\n    CreateMessageRequest,\n    CreateMessageResultSchema,\n    ElicitRequest,\n    ElicitResult,\n    ElicitResultSchema,\n    EmptyResultSchema,\n    Implementation,\n    InitializedNotificationSchema,\n    InitializeRequest,\n    InitializeRequestSchema,\n    InitializeResult,\n    LATEST_PROTOCOL_VERSION,\n    ListRootsRequest,\n    ListRootsResultSchema,\n    LoggingMessageNotification,\n    McpError,\n    ErrorCode,\n    Notification,\n    Request,\n    ResourceUpdatedNotification,\n    Result,\n    ServerCapabilities,\n    ServerNotification,\n    ServerRequest,\n    ServerResult,\n    SUPPORTED_PROTOCOL_VERSIONS,\n    LoggingLevel,\n    SetLevelRequestSchema,\n    LoggingLevelSchema\n} from '../types.js';\nimport Ajv from 'ajv';\n\nexport type ServerOptions = ProtocolOptions & {\n    /**\n     * Capabilities to advertise as being supported by this server.\n     */\n    capabilities?: ServerCapabilities;\n\n    /**\n     * Optional instructions describing how to use the server and its features.\n     */\n    instructions?: string;\n};\n\n/**\n * An MCP server on top of a pluggable transport.\n *\n * This server will automatically respond to the initialization flow as initiated from the client.\n *\n * To use with custom types, extend the base Request/Notification/Result types and pass them as type parameters:\n *\n * ```typescript\n * // Custom schemas\n * const CustomRequestSchema = RequestSchema.extend({...})\n * const CustomNotificationSchema = NotificationSchema.extend({...})\n * const CustomResultSchema = ResultSchema.extend({...})\n *\n * // Type aliases\n * type CustomRequest = z.infer<typeof CustomRequestSchema>\n * type CustomNotification = z.infer<typeof CustomNotificationSchema>\n * type CustomResult = z.infer<typeof CustomResultSchema>\n *\n * // Create typed server\n * const server = new Server<CustomRequest, CustomNotification, CustomResult>({\n *   name: \"CustomServer\",\n *   version: \"1.0.0\"\n * })\n * ```\n */\nexport class Server<\n    RequestT extends Request = Request,\n    NotificationT extends Notification = Notification,\n    ResultT extends Result = Result\n> extends Protocol<ServerRequest | RequestT, ServerNotification | NotificationT, ServerResult | ResultT> {\n    private _clientCapabilities?: ClientCapabilities;\n    private _clientVersion?: Implementation;\n    private _capabilities: ServerCapabilities;\n    private _instructions?: string;\n\n    /**\n     * Callback for when initialization has fully completed (i.e., the client has sent an `initialized` notification).\n     */\n    oninitialized?: () => void;\n\n    /**\n     * Initializes this server with the given name and version information.\n     */\n    constructor(\n        private _serverInfo: Implementation,\n        options?: ServerOptions\n    ) {\n        super(options);\n        this._capabilities = options?.capabilities ?? {};\n        this._instructions = options?.instructions;\n\n        this.setRequestHandler(InitializeRequestSchema, request => this._oninitialize(request));\n        this.setNotificationHandler(InitializedNotificationSchema, () => this.oninitialized?.());\n\n        if (this._capabilities.logging) {\n            this.setRequestHandler(SetLevelRequestSchema, async (request, extra) => {\n                const transportSessionId: string | undefined =\n                    extra.sessionId || (extra.requestInfo?.headers['mcp-session-id'] as string) || undefined;\n                const { level } = request.params;\n                const parseResult = LoggingLevelSchema.safeParse(level);\n                if (parseResult.success) {\n                    this._loggingLevels.set(transportSessionId, parseResult.data);\n                }\n                return {};\n            });\n        }\n    }\n\n    // Map log levels by session id\n    private _loggingLevels = new Map<string | undefined, LoggingLevel>();\n\n    // Map LogLevelSchema to severity index\n    private readonly LOG_LEVEL_SEVERITY = new Map(LoggingLevelSchema.options.map((level, index) => [level, index]));\n\n    // Is a message with the given level ignored in the log level set for the given session id?\n    private isMessageIgnored = (level: LoggingLevel, sessionId?: string): boolean => {\n        const currentLevel = this._loggingLevels.get(sessionId);\n        return currentLevel ? this.LOG_LEVEL_SEVERITY.get(level)! < this.LOG_LEVEL_SEVERITY.get(currentLevel)! : false;\n    };\n\n    /**\n     * Registers new capabilities. This can only be called before connecting to a transport.\n     *\n     * The new capabilities will be merged with any existing capabilities previously given (e.g., at initialization).\n     */\n    public registerCapabilities(capabilities: ServerCapabilities): void {\n        if (this.transport) {\n            throw new Error('Cannot register capabilities after connecting to transport');\n        }\n        this._capabilities = mergeCapabilities(this._capabilities, capabilities);\n    }\n\n    protected assertCapabilityForMethod(method: RequestT['method']): void {\n        switch (method as ServerRequest['method']) {\n            case 'sampling/createMessage':\n                if (!this._clientCapabilities?.sampling) {\n                    throw new Error(`Client does not support sampling (required for ${method})`);\n                }\n                break;\n\n            case 'elicitation/create':\n                if (!this._clientCapabilities?.elicitation) {\n                    throw new Error(`Client does not support elicitation (required for ${method})`);\n                }\n                break;\n\n            case 'roots/list':\n                if (!this._clientCapabilities?.roots) {\n                    throw new Error(`Client does not support listing roots (required for ${method})`);\n                }\n                break;\n\n            case 'ping':\n                // No specific capability required for ping\n                break;\n        }\n    }\n\n    protected assertNotificationCapability(method: (ServerNotification | NotificationT)['method']): void {\n        switch (method as ServerNotification['method']) {\n            case 'notifications/message':\n                if (!this._capabilities.logging) {\n                    throw new Error(`Server does not support logging (required for ${method})`);\n                }\n                break;\n\n            case 'notifications/resources/updated':\n            case 'notifications/resources/list_changed':\n                if (!this._capabilities.resources) {\n                    throw new Error(`Server does not support notifying about resources (required for ${method})`);\n                }\n                break;\n\n            case 'notifications/tools/list_changed':\n                if (!this._capabilities.tools) {\n                    throw new Error(`Server does not support notifying of tool list changes (required for ${method})`);\n                }\n                break;\n\n            case 'notifications/prompts/list_changed':\n                if (!this._capabilities.prompts) {\n                    throw new Error(`Server does not support notifying of prompt list changes (required for ${method})`);\n                }\n                break;\n\n            case 'notifications/cancelled':\n                // Cancellation notifications are always allowed\n                break;\n\n            case 'notifications/progress':\n                // Progress notifications are always allowed\n                break;\n        }\n    }\n\n    protected assertRequestHandlerCapability(method: string): void {\n        switch (method) {\n            case 'sampling/createMessage':\n                if (!this._capabilities.sampling) {\n                    throw new Error(`Server does not support sampling (required for ${method})`);\n                }\n                break;\n\n            case 'logging/setLevel':\n                if (!this._capabilities.logging) {\n                    throw new Error(`Server does not support logging (required for ${method})`);\n                }\n                break;\n\n            case 'prompts/get':\n            case 'prompts/list':\n                if (!this._capabilities.prompts) {\n                    throw new Error(`Server does not support prompts (required for ${method})`);\n                }\n                break;\n\n            case 'resources/list':\n            case 'resources/templates/list':\n            case 'resources/read':\n                if (!this._capabilities.resources) {\n                    throw new Error(`Server does not support resources (required for ${method})`);\n                }\n                break;\n\n            case 'tools/call':\n            case 'tools/list':\n                if (!this._capabilities.tools) {\n                    throw new Error(`Server does not support tools (required for ${method})`);\n                }\n                break;\n\n            case 'ping':\n            case 'initialize':\n                // No specific capability required for these methods\n                break;\n        }\n    }\n\n    private async _oninitialize(request: InitializeRequest): Promise<InitializeResult> {\n        const requestedVersion = request.params.protocolVersion;\n\n        this._clientCapabilities = request.params.capabilities;\n        this._clientVersion = request.params.clientInfo;\n\n        const protocolVersion = SUPPORTED_PROTOCOL_VERSIONS.includes(requestedVersion) ? requestedVersion : LATEST_PROTOCOL_VERSION;\n\n        return {\n            protocolVersion,\n            capabilities: this.getCapabilities(),\n            serverInfo: this._serverInfo,\n            ...(this._instructions && { instructions: this._instructions })\n        };\n    }\n\n    /**\n     * After initialization has completed, this will be populated with the client's reported capabilities.\n     */\n    getClientCapabilities(): ClientCapabilities | undefined {\n        return this._clientCapabilities;\n    }\n\n    /**\n     * After initialization has completed, this will be populated with information about the client's name and version.\n     */\n    getClientVersion(): Implementation | undefined {\n        return this._clientVersion;\n    }\n\n    private getCapabilities(): ServerCapabilities {\n        return this._capabilities;\n    }\n\n    async ping() {\n        return this.request({ method: 'ping' }, EmptyResultSchema);\n    }\n\n    async createMessage(params: CreateMessageRequest['params'], options?: RequestOptions) {\n        return this.request({ method: 'sampling/createMessage', params }, CreateMessageResultSchema, options);\n    }\n\n    async elicitInput(params: ElicitRequest['params'], options?: RequestOptions): Promise<ElicitResult> {\n        const result = await this.request({ method: 'elicitation/create', params }, ElicitResultSchema, options);\n\n        // Validate the response content against the requested schema if action is \"accept\"\n        if (result.action === 'accept' && result.content) {\n            try {\n                const ajv = new Ajv();\n\n                const validate = ajv.compile(params.requestedSchema);\n                const isValid = validate(result.content);\n\n                if (!isValid) {\n                    throw new McpError(\n                        ErrorCode.InvalidParams,\n                        `Elicitation response content does not match requested schema: ${ajv.errorsText(validate.errors)}`\n                    );\n                }\n            } catch (error) {\n                if (error instanceof McpError) {\n                    throw error;\n                }\n                throw new McpError(ErrorCode.InternalError, `Error validating elicitation response: ${error}`);\n            }\n        }\n\n        return result;\n    }\n\n    async listRoots(params?: ListRootsRequest['params'], options?: RequestOptions) {\n        return this.request({ method: 'roots/list', params }, ListRootsResultSchema, options);\n    }\n\n    /**\n     * Sends a logging message to the client, if connected.\n     * Note: You only need to send the parameters object, not the entire JSON RPC message\n     * @see LoggingMessageNotification\n     * @param params\n     * @param sessionId optional for stateless and backward compatibility\n     */\n    async sendLoggingMessage(params: LoggingMessageNotification['params'], sessionId?: string) {\n        if (this._capabilities.logging) {\n            if (!this.isMessageIgnored(params.level, sessionId)) {\n                return this.notification({ method: 'notifications/message', params });\n            }\n        }\n    }\n\n    async sendResourceUpdated(params: ResourceUpdatedNotification['params']) {\n        return this.notification({\n            method: 'notifications/resources/updated',\n            params\n        });\n    }\n\n    async sendResourceListChanged() {\n        return this.notification({\n            method: 'notifications/resources/list_changed'\n        });\n    }\n\n    async sendToolListChanged() {\n        return this.notification({ method: 'notifications/tools/list_changed' });\n    }\n\n    async sendPromptListChanged() {\n        return this.notification({ method: 'notifications/prompts/list_changed' });\n    }\n}\n","export const ignoreOverride = Symbol(\"Let zodToJsonSchema decide on which parser to use\");\nexport const defaultOptions = {\n    name: undefined,\n    $refStrategy: \"root\",\n    basePath: [\"#\"],\n    effectStrategy: \"input\",\n    pipeStrategy: \"all\",\n    dateStrategy: \"format:date-time\",\n    mapStrategy: \"entries\",\n    removeAdditionalStrategy: \"passthrough\",\n    definitionPath: \"definitions\",\n    target: \"jsonSchema7\",\n    strictUnions: false,\n    definitions: {},\n    errorMessages: false,\n    markdownDescription: false,\n    patternStrategy: \"escape\",\n    applyRegexFlags: false,\n    emailStrategy: \"format:email\",\n    base64Strategy: \"contentEncoding:base64\",\n    nameStrategy: \"ref\",\n};\nexport const getDefaultOptions = (options) => (typeof options === \"string\"\n    ? {\n        ...defaultOptions,\n        name: options,\n    }\n    : {\n        ...defaultOptions,\n        ...options,\n    });\n","import { getDefaultOptions } from \"./Options.js\";\nexport const getRefs = (options) => {\n    const _options = getDefaultOptions(options);\n    const currentPath = _options.name !== undefined\n        ? [..._options.basePath, _options.definitionPath, _options.name]\n        : _options.basePath;\n    return {\n        ..._options,\n        currentPath: currentPath,\n        propertyPath: undefined,\n        seen: new Map(Object.entries(_options.definitions).map(([name, def]) => [\n            def._def,\n            {\n                def: def._def,\n                path: [..._options.basePath, _options.definitionPath, name],\n                // Resolution of references will be forced even though seen, so it's ok that the schema is undefined here for now.\n                jsonSchema: undefined,\n            },\n        ])),\n    };\n};\n","export function addErrorMessage(res, key, errorMessage, refs) {\n    if (!refs?.errorMessages)\n        return;\n    if (errorMessage) {\n        res.errorMessage = {\n            ...res.errorMessage,\n            [key]: errorMessage,\n        };\n    }\n}\nexport function setResponseValueAndErrors(res, key, value, errorMessage, refs) {\n    res[key] = value;\n    addErrorMessage(res, key, errorMessage, refs);\n}\n","export function parseAnyDef() {\n    return {};\n}\n","import { ZodFirstPartyTypeKind } from \"zod\";\nimport { setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseArrayDef(def, refs) {\n    const res = {\n        type: \"array\",\n    };\n    if (def.type?._def &&\n        def.type?._def?.typeName !== ZodFirstPartyTypeKind.ZodAny) {\n        res.items = parseDef(def.type._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"items\"],\n        });\n    }\n    if (def.minLength) {\n        setResponseValueAndErrors(res, \"minItems\", def.minLength.value, def.minLength.message, refs);\n    }\n    if (def.maxLength) {\n        setResponseValueAndErrors(res, \"maxItems\", def.maxLength.value, def.maxLength.message, refs);\n    }\n    if (def.exactLength) {\n        setResponseValueAndErrors(res, \"minItems\", def.exactLength.value, def.exactLength.message, refs);\n        setResponseValueAndErrors(res, \"maxItems\", def.exactLength.value, def.exactLength.message, refs);\n    }\n    return res;\n}\n","import { setResponseValueAndErrors } from \"../errorMessages.js\";\nexport function parseBigintDef(def, refs) {\n    const res = {\n        type: \"integer\",\n        format: \"int64\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"min\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                }\n                break;\n            case \"max\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                }\n                break;\n            case \"multipleOf\":\n                setResponseValueAndErrors(res, \"multipleOf\", check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n","export function parseBooleanDef() {\n    return {\n        type: \"boolean\",\n    };\n}\n","import { parseDef } from \"../parseDef.js\";\nexport function parseBrandedDef(_def, refs) {\n    return parseDef(_def.type._def, refs);\n}\n","import { parseDef } from \"../parseDef.js\";\nexport const parseCatchDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n","import { setResponseValueAndErrors } from \"../errorMessages.js\";\nexport function parseDateDef(def, refs, overrideDateStrategy) {\n    const strategy = overrideDateStrategy ?? refs.dateStrategy;\n    if (Array.isArray(strategy)) {\n        return {\n            anyOf: strategy.map((item, i) => parseDateDef(def, refs, item)),\n        };\n    }\n    switch (strategy) {\n        case \"string\":\n        case \"format:date-time\":\n            return {\n                type: \"string\",\n                format: \"date-time\",\n            };\n        case \"format:date\":\n            return {\n                type: \"string\",\n                format: \"date\",\n            };\n        case \"integer\":\n            return integerDateParser(def, refs);\n    }\n}\nconst integerDateParser = (def, refs) => {\n    const res = {\n        type: \"integer\",\n        format: \"unix-time\",\n    };\n    if (refs.target === \"openApi3\") {\n        return res;\n    }\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"min\":\n                setResponseValueAndErrors(res, \"minimum\", check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n            case \"max\":\n                setResponseValueAndErrors(res, \"maximum\", check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n        }\n    }\n    return res;\n};\n","import { parseDef } from \"../parseDef.js\";\nexport function parseDefaultDef(_def, refs) {\n    return {\n        ...parseDef(_def.innerType._def, refs),\n        default: _def.defaultValue(),\n    };\n}\n","import { parseDef } from \"../parseDef.js\";\nexport function parseEffectsDef(_def, refs) {\n    return refs.effectStrategy === \"input\"\n        ? parseDef(_def.schema._def, refs)\n        : {};\n}\n","export function parseEnumDef(def) {\n    return {\n        type: \"string\",\n        enum: Array.from(def.values),\n    };\n}\n","import { parseDef } from \"../parseDef.js\";\nconst isJsonSchema7AllOfType = (type) => {\n    if (\"type\" in type && type.type === \"string\")\n        return false;\n    return \"allOf\" in type;\n};\nexport function parseIntersectionDef(def, refs) {\n    const allOf = [\n        parseDef(def.left._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n        }),\n        parseDef(def.right._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"1\"],\n        }),\n    ].filter((x) => !!x);\n    let unevaluatedProperties = refs.target === \"jsonSchema2019-09\"\n        ? { unevaluatedProperties: false }\n        : undefined;\n    const mergedAllOf = [];\n    // If either of the schemas is an allOf, merge them into a single allOf\n    allOf.forEach((schema) => {\n        if (isJsonSchema7AllOfType(schema)) {\n            mergedAllOf.push(...schema.allOf);\n            if (schema.unevaluatedProperties === undefined) {\n                // If one of the schemas has no unevaluatedProperties set,\n                // the merged schema should also have no unevaluatedProperties set\n                unevaluatedProperties = undefined;\n            }\n        }\n        else {\n            let nestedSchema = schema;\n            if (\"additionalProperties\" in schema &&\n                schema.additionalProperties === false) {\n                const { additionalProperties, ...rest } = schema;\n                nestedSchema = rest;\n            }\n            else {\n                // As soon as one of the schemas has additionalProperties set not to false, we allow unevaluatedProperties\n                unevaluatedProperties = undefined;\n            }\n            mergedAllOf.push(nestedSchema);\n        }\n    });\n    return mergedAllOf.length\n        ? {\n            allOf: mergedAllOf,\n            ...unevaluatedProperties,\n        }\n        : undefined;\n}\n","export function parseLiteralDef(def, refs) {\n    const parsedType = typeof def.value;\n    if (parsedType !== \"bigint\" &&\n        parsedType !== \"number\" &&\n        parsedType !== \"boolean\" &&\n        parsedType !== \"string\") {\n        return {\n            type: Array.isArray(def.value) ? \"array\" : \"object\",\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        return {\n            type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n            enum: [def.value],\n        };\n    }\n    return {\n        type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n        const: def.value,\n    };\n}\n","import { setResponseValueAndErrors } from \"../errorMessages.js\";\nlet emojiRegex = undefined;\n/**\n * Generated from the regular expressions found here as of 2024-05-22:\n * https://github.com/colinhacks/zod/blob/master/src/types.ts.\n *\n * Expressions with /i flag have been changed accordingly.\n */\nexport const zodPatterns = {\n    /**\n     * `c` was changed to `[cC]` to replicate /i flag\n     */\n    cuid: /^[cC][^\\s-]{8,}$/,\n    cuid2: /^[0-9a-z]+$/,\n    ulid: /^[0-9A-HJKMNP-TV-Z]{26}$/,\n    /**\n     * `a-z` was added to replicate /i flag\n     */\n    email: /^(?!\\.)(?!.*\\.\\.)([a-zA-Z0-9_'+\\-\\.]*)[a-zA-Z0-9_+-]@([a-zA-Z0-9][a-zA-Z0-9\\-]*\\.)+[a-zA-Z]{2,}$/,\n    /**\n     * Constructed a valid Unicode RegExp\n     *\n     * Lazily instantiate since this type of regex isn't supported\n     * in all envs (e.g. React Native).\n     *\n     * See:\n     * https://github.com/colinhacks/zod/issues/2433\n     * Fix in Zod:\n     * https://github.com/colinhacks/zod/commit/9340fd51e48576a75adc919bff65dbc4a5d4c99b\n     */\n    emoji: () => {\n        if (emojiRegex === undefined) {\n            emojiRegex = RegExp(\"^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$\", \"u\");\n        }\n        return emojiRegex;\n    },\n    /**\n     * Unused\n     */\n    uuid: /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/,\n    /**\n     * Unused\n     */\n    ipv4: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,\n    ipv4Cidr: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/,\n    /**\n     * Unused\n     */\n    ipv6: /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,\n    ipv6Cidr: /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,\n    base64: /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,\n    base64url: /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,\n    nanoid: /^[a-zA-Z0-9_-]{21}$/,\n    jwt: /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/,\n};\nexport function parseStringDef(def, refs) {\n    const res = {\n        type: \"string\",\n    };\n    if (def.checks) {\n        for (const check of def.checks) {\n            switch (check.kind) {\n                case \"min\":\n                    setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"max\":\n                    setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"email\":\n                    switch (refs.emailStrategy) {\n                        case \"format:email\":\n                            addFormat(res, \"email\", check.message, refs);\n                            break;\n                        case \"format:idn-email\":\n                            addFormat(res, \"idn-email\", check.message, refs);\n                            break;\n                        case \"pattern:zod\":\n                            addPattern(res, zodPatterns.email, check.message, refs);\n                            break;\n                    }\n                    break;\n                case \"url\":\n                    addFormat(res, \"uri\", check.message, refs);\n                    break;\n                case \"uuid\":\n                    addFormat(res, \"uuid\", check.message, refs);\n                    break;\n                case \"regex\":\n                    addPattern(res, check.regex, check.message, refs);\n                    break;\n                case \"cuid\":\n                    addPattern(res, zodPatterns.cuid, check.message, refs);\n                    break;\n                case \"cuid2\":\n                    addPattern(res, zodPatterns.cuid2, check.message, refs);\n                    break;\n                case \"startsWith\":\n                    addPattern(res, RegExp(`^${escapeLiteralCheckValue(check.value, refs)}`), check.message, refs);\n                    break;\n                case \"endsWith\":\n                    addPattern(res, RegExp(`${escapeLiteralCheckValue(check.value, refs)}$`), check.message, refs);\n                    break;\n                case \"datetime\":\n                    addFormat(res, \"date-time\", check.message, refs);\n                    break;\n                case \"date\":\n                    addFormat(res, \"date\", check.message, refs);\n                    break;\n                case \"time\":\n                    addFormat(res, \"time\", check.message, refs);\n                    break;\n                case \"duration\":\n                    addFormat(res, \"duration\", check.message, refs);\n                    break;\n                case \"length\":\n                    setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"includes\": {\n                    addPattern(res, RegExp(escapeLiteralCheckValue(check.value, refs)), check.message, refs);\n                    break;\n                }\n                case \"ip\": {\n                    if (check.version !== \"v6\") {\n                        addFormat(res, \"ipv4\", check.message, refs);\n                    }\n                    if (check.version !== \"v4\") {\n                        addFormat(res, \"ipv6\", check.message, refs);\n                    }\n                    break;\n                }\n                case \"base64url\":\n                    addPattern(res, zodPatterns.base64url, check.message, refs);\n                    break;\n                case \"jwt\":\n                    addPattern(res, zodPatterns.jwt, check.message, refs);\n                    break;\n                case \"cidr\": {\n                    if (check.version !== \"v6\") {\n                        addPattern(res, zodPatterns.ipv4Cidr, check.message, refs);\n                    }\n                    if (check.version !== \"v4\") {\n                        addPattern(res, zodPatterns.ipv6Cidr, check.message, refs);\n                    }\n                    break;\n                }\n                case \"emoji\":\n                    addPattern(res, zodPatterns.emoji(), check.message, refs);\n                    break;\n                case \"ulid\": {\n                    addPattern(res, zodPatterns.ulid, check.message, refs);\n                    break;\n                }\n                case \"base64\": {\n                    switch (refs.base64Strategy) {\n                        case \"format:binary\": {\n                            addFormat(res, \"binary\", check.message, refs);\n                            break;\n                        }\n                        case \"contentEncoding:base64\": {\n                            setResponseValueAndErrors(res, \"contentEncoding\", \"base64\", check.message, refs);\n                            break;\n                        }\n                        case \"pattern:zod\": {\n                            addPattern(res, zodPatterns.base64, check.message, refs);\n                            break;\n                        }\n                    }\n                    break;\n                }\n                case \"nanoid\": {\n                    addPattern(res, zodPatterns.nanoid, check.message, refs);\n                }\n                case \"toLowerCase\":\n                case \"toUpperCase\":\n                case \"trim\":\n                    break;\n                default:\n                    /* c8 ignore next */\n                    ((_) => { })(check);\n            }\n        }\n    }\n    return res;\n}\nfunction escapeLiteralCheckValue(literal, refs) {\n    return refs.patternStrategy === \"escape\"\n        ? escapeNonAlphaNumeric(literal)\n        : literal;\n}\nconst ALPHA_NUMERIC = new Set(\"ABCDEFGHIJKLMNOPQRSTUVXYZabcdefghijklmnopqrstuvxyz0123456789\");\nfunction escapeNonAlphaNumeric(source) {\n    let result = \"\";\n    for (let i = 0; i < source.length; i++) {\n        if (!ALPHA_NUMERIC.has(source[i])) {\n            result += \"\\\\\";\n        }\n        result += source[i];\n    }\n    return result;\n}\n// Adds a \"format\" keyword to the schema. If a format exists, both formats will be joined in an allOf-node, along with subsequent ones.\nfunction addFormat(schema, value, message, refs) {\n    if (schema.format || schema.anyOf?.some((x) => x.format)) {\n        if (!schema.anyOf) {\n            schema.anyOf = [];\n        }\n        if (schema.format) {\n            schema.anyOf.push({\n                format: schema.format,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { format: schema.errorMessage.format },\n                }),\n            });\n            delete schema.format;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.format;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.anyOf.push({\n            format: value,\n            ...(message &&\n                refs.errorMessages && { errorMessage: { format: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, \"format\", value, message, refs);\n    }\n}\n// Adds a \"pattern\" keyword to the schema. If a pattern exists, both patterns will be joined in an allOf-node, along with subsequent ones.\nfunction addPattern(schema, regex, message, refs) {\n    if (schema.pattern || schema.allOf?.some((x) => x.pattern)) {\n        if (!schema.allOf) {\n            schema.allOf = [];\n        }\n        if (schema.pattern) {\n            schema.allOf.push({\n                pattern: schema.pattern,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { pattern: schema.errorMessage.pattern },\n                }),\n            });\n            delete schema.pattern;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.pattern;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.allOf.push({\n            pattern: stringifyRegExpWithFlags(regex, refs),\n            ...(message &&\n                refs.errorMessages && { errorMessage: { pattern: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, \"pattern\", stringifyRegExpWithFlags(regex, refs), message, refs);\n    }\n}\n// Mutate z.string.regex() in a best attempt to accommodate for regex flags when applyRegexFlags is true\nfunction stringifyRegExpWithFlags(regex, refs) {\n    if (!refs.applyRegexFlags || !regex.flags) {\n        return regex.source;\n    }\n    // Currently handled flags\n    const flags = {\n        i: regex.flags.includes(\"i\"),\n        m: regex.flags.includes(\"m\"),\n        s: regex.flags.includes(\"s\"), // `.` matches newlines\n    };\n    // The general principle here is to step through each character, one at a time, applying mutations as flags require. We keep track when the current character is escaped, and when it's inside a group /like [this]/ or (also) a range like /[a-z]/. The following is fairly brittle imperative code; edit at your peril!\n    const source = flags.i ? regex.source.toLowerCase() : regex.source;\n    let pattern = \"\";\n    let isEscaped = false;\n    let inCharGroup = false;\n    let inCharRange = false;\n    for (let i = 0; i < source.length; i++) {\n        if (isEscaped) {\n            pattern += source[i];\n            isEscaped = false;\n            continue;\n        }\n        if (flags.i) {\n            if (inCharGroup) {\n                if (source[i].match(/[a-z]/)) {\n                    if (inCharRange) {\n                        pattern += source[i];\n                        pattern += `${source[i - 2]}-${source[i]}`.toUpperCase();\n                        inCharRange = false;\n                    }\n                    else if (source[i + 1] === \"-\" && source[i + 2]?.match(/[a-z]/)) {\n                        pattern += source[i];\n                        inCharRange = true;\n                    }\n                    else {\n                        pattern += `${source[i]}${source[i].toUpperCase()}`;\n                    }\n                    continue;\n                }\n            }\n            else if (source[i].match(/[a-z]/)) {\n                pattern += `[${source[i]}${source[i].toUpperCase()}]`;\n                continue;\n            }\n        }\n        if (flags.m) {\n            if (source[i] === \"^\") {\n                pattern += `(^|(?<=[\\r\\n]))`;\n                continue;\n            }\n            else if (source[i] === \"$\") {\n                pattern += `($|(?=[\\r\\n]))`;\n                continue;\n            }\n        }\n        if (flags.s && source[i] === \".\") {\n            pattern += inCharGroup ? `${source[i]}\\r\\n` : `[${source[i]}\\r\\n]`;\n            continue;\n        }\n        pattern += source[i];\n        if (source[i] === \"\\\\\") {\n            isEscaped = true;\n        }\n        else if (inCharGroup && source[i] === \"]\") {\n            inCharGroup = false;\n        }\n        else if (!inCharGroup && source[i] === \"[\") {\n            inCharGroup = true;\n        }\n    }\n    try {\n        new RegExp(pattern);\n    }\n    catch {\n        console.warn(`Could not convert regex pattern at ${refs.currentPath.join(\"/\")} to a flag-independent form! Falling back to the flag-ignorant source`);\n        return regex.source;\n    }\n    return pattern;\n}\n","import { ZodFirstPartyTypeKind, } from \"zod\";\nimport { parseDef } from \"../parseDef.js\";\nimport { parseStringDef } from \"./string.js\";\nimport { parseBrandedDef } from \"./branded.js\";\nexport function parseRecordDef(def, refs) {\n    if (refs.target === \"openAi\") {\n        console.warn(\"Warning: OpenAI may not support records in schemas! Try an array of key-value pairs instead.\");\n    }\n    if (refs.target === \"openApi3\" &&\n        def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            type: \"object\",\n            required: def.keyType._def.values,\n            properties: def.keyType._def.values.reduce((acc, key) => ({\n                ...acc,\n                [key]: parseDef(def.valueType._def, {\n                    ...refs,\n                    currentPath: [...refs.currentPath, \"properties\", key],\n                }) ?? {},\n            }), {}),\n            additionalProperties: false,\n        };\n    }\n    const schema = {\n        type: \"object\",\n        additionalProperties: parseDef(def.valueType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"additionalProperties\"],\n        }) ?? {},\n    };\n    if (refs.target === \"openApi3\") {\n        return schema;\n    }\n    if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.checks?.length) {\n        const { type, ...keyType } = parseStringDef(def.keyType._def, refs);\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            ...schema,\n            propertyNames: {\n                enum: def.keyType._def.values,\n            },\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodBranded &&\n        def.keyType._def.type._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.type._def.checks?.length) {\n        const { type, ...keyType } = parseBrandedDef(def.keyType._def, refs);\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    return schema;\n}\n","import { parseDef } from \"../parseDef.js\";\nimport { parseRecordDef } from \"./record.js\";\nexport function parseMapDef(def, refs) {\n    if (refs.mapStrategy === \"record\") {\n        return parseRecordDef(def, refs);\n    }\n    const keys = parseDef(def.keyType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"0\"],\n    }) || {};\n    const values = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"1\"],\n    }) || {};\n    return {\n        type: \"array\",\n        maxItems: 125,\n        items: {\n            type: \"array\",\n            items: [keys, values],\n            minItems: 2,\n            maxItems: 2,\n        },\n    };\n}\n","export function parseNativeEnumDef(def) {\n    const object = def.values;\n    const actualKeys = Object.keys(def.values).filter((key) => {\n        return typeof object[object[key]] !== \"number\";\n    });\n    const actualValues = actualKeys.map((key) => object[key]);\n    const parsedTypes = Array.from(new Set(actualValues.map((values) => typeof values)));\n    return {\n        type: parsedTypes.length === 1\n            ? parsedTypes[0] === \"string\"\n                ? \"string\"\n                : \"number\"\n            : [\"string\", \"number\"],\n        enum: actualValues,\n    };\n}\n","export function parseNeverDef() {\n    return {\n        not: {},\n    };\n}\n","export function parseNullDef(refs) {\n    return refs.target === \"openApi3\"\n        ? {\n            enum: [\"null\"],\n            nullable: true,\n        }\n        : {\n            type: \"null\",\n        };\n}\n","import { parseDef } from \"../parseDef.js\";\nexport const primitiveMappings = {\n    ZodString: \"string\",\n    ZodNumber: \"number\",\n    ZodBigInt: \"integer\",\n    ZodBoolean: \"boolean\",\n    ZodNull: \"null\",\n};\nexport function parseUnionDef(def, refs) {\n    if (refs.target === \"openApi3\")\n        return asAnyOf(def, refs);\n    const options = def.options instanceof Map ? Array.from(def.options.values()) : def.options;\n    // This blocks tries to look ahead a bit to produce nicer looking schemas with type array instead of anyOf.\n    if (options.every((x) => x._def.typeName in primitiveMappings &&\n        (!x._def.checks || !x._def.checks.length))) {\n        // all types in union are primitive and lack checks, so might as well squash into {type: [...]}\n        const types = options.reduce((types, x) => {\n            const type = primitiveMappings[x._def.typeName]; //Can be safely casted due to row 43\n            return type && !types.includes(type) ? [...types, type] : types;\n        }, []);\n        return {\n            type: types.length > 1 ? types : types[0],\n        };\n    }\n    else if (options.every((x) => x._def.typeName === \"ZodLiteral\" && !x.description)) {\n        // all options literals\n        const types = options.reduce((acc, x) => {\n            const type = typeof x._def.value;\n            switch (type) {\n                case \"string\":\n                case \"number\":\n                case \"boolean\":\n                    return [...acc, type];\n                case \"bigint\":\n                    return [...acc, \"integer\"];\n                case \"object\":\n                    if (x._def.value === null)\n                        return [...acc, \"null\"];\n                case \"symbol\":\n                case \"undefined\":\n                case \"function\":\n                default:\n                    return acc;\n            }\n        }, []);\n        if (types.length === options.length) {\n            // all the literals are primitive, as far as null can be considered primitive\n            const uniqueTypes = types.filter((x, i, a) => a.indexOf(x) === i);\n            return {\n                type: uniqueTypes.length > 1 ? uniqueTypes : uniqueTypes[0],\n                enum: options.reduce((acc, x) => {\n                    return acc.includes(x._def.value) ? acc : [...acc, x._def.value];\n                }, []),\n            };\n        }\n    }\n    else if (options.every((x) => x._def.typeName === \"ZodEnum\")) {\n        return {\n            type: \"string\",\n            enum: options.reduce((acc, x) => [\n                ...acc,\n                ...x._def.values.filter((x) => !acc.includes(x)),\n            ], []),\n        };\n    }\n    return asAnyOf(def, refs);\n}\nconst asAnyOf = (def, refs) => {\n    const anyOf = (def.options instanceof Map\n        ? Array.from(def.options.values())\n        : def.options)\n        .map((x, i) => parseDef(x._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", `${i}`],\n    }))\n        .filter((x) => !!x &&\n        (!refs.strictUnions ||\n            (typeof x === \"object\" && Object.keys(x).length > 0)));\n    return anyOf.length ? { anyOf } : undefined;\n};\n","import { parseDef } from \"../parseDef.js\";\nimport { primitiveMappings } from \"./union.js\";\nexport function parseNullableDef(def, refs) {\n    if ([\"ZodString\", \"ZodNumber\", \"ZodBigInt\", \"ZodBoolean\", \"ZodNull\"].includes(def.innerType._def.typeName) &&\n        (!def.innerType._def.checks || !def.innerType._def.checks.length)) {\n        if (refs.target === \"openApi3\") {\n            return {\n                type: primitiveMappings[def.innerType._def.typeName],\n                nullable: true,\n            };\n        }\n        return {\n            type: [\n                primitiveMappings[def.innerType._def.typeName],\n                \"null\",\n            ],\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        const base = parseDef(def.innerType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath],\n        });\n        if (base && \"$ref\" in base)\n            return { allOf: [base], nullable: true };\n        return base && { ...base, nullable: true };\n    }\n    const base = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"0\"],\n    });\n    return base && { anyOf: [base, { type: \"null\" }] };\n}\n","import { addErrorMessage, setResponseValueAndErrors, } from \"../errorMessages.js\";\nexport function parseNumberDef(def, refs) {\n    const res = {\n        type: \"number\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"int\":\n                res.type = \"integer\";\n                addErrorMessage(res, \"type\", check.message, refs);\n                break;\n            case \"min\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                }\n                break;\n            case \"max\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                }\n                break;\n            case \"multipleOf\":\n                setResponseValueAndErrors(res, \"multipleOf\", check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n","import { ZodOptional } from \"zod\";\nimport { parseDef } from \"../parseDef.js\";\nfunction decideAdditionalProperties(def, refs) {\n    if (refs.removeAdditionalStrategy === \"strict\") {\n        return def.catchall._def.typeName === \"ZodNever\"\n            ? def.unknownKeys !== \"strict\"\n            : parseDef(def.catchall._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalProperties\"],\n            }) ?? true;\n    }\n    else {\n        return def.catchall._def.typeName === \"ZodNever\"\n            ? def.unknownKeys === \"passthrough\"\n            : parseDef(def.catchall._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalProperties\"],\n            }) ?? true;\n    }\n}\nexport function parseObjectDef(def, refs) {\n    const forceOptionalIntoNullable = refs.target === \"openAi\";\n    const result = {\n        type: \"object\",\n        ...Object.entries(def.shape()).reduce((acc, [propName, propDef]) => {\n            if (propDef === undefined || propDef._def === undefined)\n                return acc;\n            let propOptional = propDef.isOptional();\n            if (propOptional && forceOptionalIntoNullable) {\n                if (propDef instanceof ZodOptional) {\n                    propDef = propDef._def.innerType;\n                }\n                if (!propDef.isNullable()) {\n                    propDef = propDef.nullable();\n                }\n                propOptional = false;\n            }\n            const parsedDef = parseDef(propDef._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"properties\", propName],\n                propertyPath: [...refs.currentPath, \"properties\", propName],\n            });\n            if (parsedDef === undefined)\n                return acc;\n            return {\n                properties: { ...acc.properties, [propName]: parsedDef },\n                required: propOptional ? acc.required : [...acc.required, propName],\n            };\n        }, { properties: {}, required: [] }),\n        additionalProperties: decideAdditionalProperties(def, refs),\n    };\n    if (!result.required.length)\n        delete result.required;\n    return result;\n}\n","import { parseDef } from \"../parseDef.js\";\nexport const parseOptionalDef = (def, refs) => {\n    if (refs.currentPath.toString() === refs.propertyPath?.toString()) {\n        return parseDef(def.innerType._def, refs);\n    }\n    const innerSchema = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"1\"],\n    });\n    return innerSchema\n        ? {\n            anyOf: [\n                {\n                    not: {},\n                },\n                innerSchema,\n            ],\n        }\n        : {};\n};\n","import { parseDef } from \"../parseDef.js\";\nexport const parsePipelineDef = (def, refs) => {\n    if (refs.pipeStrategy === \"input\") {\n        return parseDef(def.in._def, refs);\n    }\n    else if (refs.pipeStrategy === \"output\") {\n        return parseDef(def.out._def, refs);\n    }\n    const a = parseDef(def.in._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n    });\n    const b = parseDef(def.out._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", a ? \"1\" : \"0\"],\n    });\n    return {\n        allOf: [a, b].filter((x) => x !== undefined),\n    };\n};\n","import { parseDef } from \"../parseDef.js\";\nexport function parsePromiseDef(def, refs) {\n    return parseDef(def.type._def, refs);\n}\n","import { setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseSetDef(def, refs) {\n    const items = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\"],\n    });\n    const schema = {\n        type: \"array\",\n        uniqueItems: true,\n        items,\n    };\n    if (def.minSize) {\n        setResponseValueAndErrors(schema, \"minItems\", def.minSize.value, def.minSize.message, refs);\n    }\n    if (def.maxSize) {\n        setResponseValueAndErrors(schema, \"maxItems\", def.maxSize.value, def.maxSize.message, refs);\n    }\n    return schema;\n}\n","import { parseDef } from \"../parseDef.js\";\nexport function parseTupleDef(def, refs) {\n    if (def.rest) {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n            additionalItems: parseDef(def.rest._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalItems\"],\n            }),\n        };\n    }\n    else {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            maxItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n        };\n    }\n}\n","export function parseUndefinedDef() {\n    return {\n        not: {},\n    };\n}\n","export function parseUnknownDef() {\n    return {};\n}\n","import { parseDef } from \"../parseDef.js\";\nexport const parseReadonlyDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n","import { ZodFirstPartyTypeKind } from \"zod\";\nimport { parseAnyDef } from \"./parsers/any.js\";\nimport { parseArrayDef } from \"./parsers/array.js\";\nimport { parseBigintDef } from \"./parsers/bigint.js\";\nimport { parseBooleanDef } from \"./parsers/boolean.js\";\nimport { parseBrandedDef } from \"./parsers/branded.js\";\nimport { parseCatchDef } from \"./parsers/catch.js\";\nimport { parseDateDef } from \"./parsers/date.js\";\nimport { parseDefaultDef } from \"./parsers/default.js\";\nimport { parseEffectsDef } from \"./parsers/effects.js\";\nimport { parseEnumDef } from \"./parsers/enum.js\";\nimport { parseIntersectionDef, } from \"./parsers/intersection.js\";\nimport { parseLiteralDef } from \"./parsers/literal.js\";\nimport { parseMapDef } from \"./parsers/map.js\";\nimport { parseNativeEnumDef, } from \"./parsers/nativeEnum.js\";\nimport { parseNeverDef } from \"./parsers/never.js\";\nimport { parseNullDef } from \"./parsers/null.js\";\nimport { parseNullableDef, } from \"./parsers/nullable.js\";\nimport { parseNumberDef } from \"./parsers/number.js\";\nimport { parseObjectDef } from \"./parsers/object.js\";\nimport { parseOptionalDef } from \"./parsers/optional.js\";\nimport { parsePipelineDef } from \"./parsers/pipeline.js\";\nimport { parsePromiseDef } from \"./parsers/promise.js\";\nimport { parseRecordDef } from \"./parsers/record.js\";\nimport { parseSetDef } from \"./parsers/set.js\";\nimport { parseStringDef } from \"./parsers/string.js\";\nimport { parseTupleDef } from \"./parsers/tuple.js\";\nimport { parseUndefinedDef, } from \"./parsers/undefined.js\";\nimport { parseUnionDef } from \"./parsers/union.js\";\nimport { parseUnknownDef } from \"./parsers/unknown.js\";\nimport { parseReadonlyDef } from \"./parsers/readonly.js\";\nimport { ignoreOverride } from \"./Options.js\";\nexport function parseDef(def, refs, forceResolution = false) {\n    const seenItem = refs.seen.get(def);\n    if (refs.override) {\n        const overrideResult = refs.override?.(def, refs, seenItem, forceResolution);\n        if (overrideResult !== ignoreOverride) {\n            return overrideResult;\n        }\n    }\n    if (seenItem && !forceResolution) {\n        const seenSchema = get$ref(seenItem, refs);\n        if (seenSchema !== undefined) {\n            return seenSchema;\n        }\n    }\n    const newItem = { def, path: refs.currentPath, jsonSchema: undefined };\n    refs.seen.set(def, newItem);\n    const jsonSchema = selectParser(def, def.typeName, refs);\n    if (jsonSchema) {\n        addMeta(def, refs, jsonSchema);\n    }\n    newItem.jsonSchema = jsonSchema;\n    return jsonSchema;\n}\nconst get$ref = (item, refs) => {\n    switch (refs.$refStrategy) {\n        case \"root\":\n            return { $ref: item.path.join(\"/\") };\n        case \"relative\":\n            return { $ref: getRelativePath(refs.currentPath, item.path) };\n        case \"none\":\n        case \"seen\": {\n            if (item.path.length < refs.currentPath.length &&\n                item.path.every((value, index) => refs.currentPath[index] === value)) {\n                console.warn(`Recursive reference detected at ${refs.currentPath.join(\"/\")}! Defaulting to any`);\n                return {};\n            }\n            return refs.$refStrategy === \"seen\" ? {} : undefined;\n        }\n    }\n};\nconst getRelativePath = (pathA, pathB) => {\n    let i = 0;\n    for (; i < pathA.length && i < pathB.length; i++) {\n        if (pathA[i] !== pathB[i])\n            break;\n    }\n    return [(pathA.length - i).toString(), ...pathB.slice(i)].join(\"/\");\n};\nconst selectParser = (def, typeName, refs) => {\n    switch (typeName) {\n        case ZodFirstPartyTypeKind.ZodString:\n            return parseStringDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNumber:\n            return parseNumberDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodObject:\n            return parseObjectDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBigInt:\n            return parseBigintDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBoolean:\n            return parseBooleanDef();\n        case ZodFirstPartyTypeKind.ZodDate:\n            return parseDateDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUndefined:\n            return parseUndefinedDef();\n        case ZodFirstPartyTypeKind.ZodNull:\n            return parseNullDef(refs);\n        case ZodFirstPartyTypeKind.ZodArray:\n            return parseArrayDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUnion:\n        case ZodFirstPartyTypeKind.ZodDiscriminatedUnion:\n            return parseUnionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodIntersection:\n            return parseIntersectionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodTuple:\n            return parseTupleDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodRecord:\n            return parseRecordDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLiteral:\n            return parseLiteralDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodEnum:\n            return parseEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNativeEnum:\n            return parseNativeEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNullable:\n            return parseNullableDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodOptional:\n            return parseOptionalDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodMap:\n            return parseMapDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodSet:\n            return parseSetDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLazy:\n            return parseDef(def.getter()._def, refs);\n        case ZodFirstPartyTypeKind.ZodPromise:\n            return parsePromiseDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNaN:\n        case ZodFirstPartyTypeKind.ZodNever:\n            return parseNeverDef();\n        case ZodFirstPartyTypeKind.ZodEffects:\n            return parseEffectsDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodAny:\n            return parseAnyDef();\n        case ZodFirstPartyTypeKind.ZodUnknown:\n            return parseUnknownDef();\n        case ZodFirstPartyTypeKind.ZodDefault:\n            return parseDefaultDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBranded:\n            return parseBrandedDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodReadonly:\n            return parseReadonlyDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodCatch:\n            return parseCatchDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodPipeline:\n            return parsePipelineDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodFunction:\n        case ZodFirstPartyTypeKind.ZodVoid:\n        case ZodFirstPartyTypeKind.ZodSymbol:\n            return undefined;\n        default:\n            /* c8 ignore next */\n            return ((_) => undefined)(typeName);\n    }\n};\nconst addMeta = (def, refs, jsonSchema) => {\n    if (def.description) {\n        jsonSchema.description = def.description;\n        if (refs.markdownDescription) {\n            jsonSchema.markdownDescription = def.description;\n        }\n    }\n    return jsonSchema;\n};\n","import { parseDef } from \"./parseDef.js\";\nimport { getRefs } from \"./Refs.js\";\nconst zodToJsonSchema = (schema, options) => {\n    const refs = getRefs(options);\n    const definitions = typeof options === \"object\" && options.definitions\n        ? Object.entries(options.definitions).reduce((acc, [name, schema]) => ({\n            ...acc,\n            [name]: parseDef(schema._def, {\n                ...refs,\n                currentPath: [...refs.basePath, refs.definitionPath, name],\n            }, true) ?? {},\n        }), {})\n        : undefined;\n    const name = typeof options === \"string\"\n        ? options\n        : options?.nameStrategy === \"title\"\n            ? undefined\n            : options?.name;\n    const main = parseDef(schema._def, name === undefined\n        ? refs\n        : {\n            ...refs,\n            currentPath: [...refs.basePath, refs.definitionPath, name],\n        }, false) ?? {};\n    const title = typeof options === \"object\" &&\n        options.name !== undefined &&\n        options.nameStrategy === \"title\"\n        ? options.name\n        : undefined;\n    if (title !== undefined) {\n        main.title = title;\n    }\n    const combined = name === undefined\n        ? definitions\n            ? {\n                ...main,\n                [refs.definitionPath]: definitions,\n            }\n            : main\n        : {\n            $ref: [\n                ...(refs.$refStrategy === \"relative\" ? [] : refs.basePath),\n                refs.definitionPath,\n                name,\n            ].join(\"/\"),\n            [refs.definitionPath]: {\n                ...definitions,\n                [name]: main,\n            },\n        };\n    if (refs.target === \"jsonSchema7\") {\n        combined.$schema = \"http://json-schema.org/draft-07/schema#\";\n    }\n    else if (refs.target === \"jsonSchema2019-09\" || refs.target === \"openAi\") {\n        combined.$schema = \"https://json-schema.org/draft/2019-09/schema#\";\n    }\n    if (refs.target === \"openAi\" &&\n        (\"anyOf\" in combined ||\n            \"oneOf\" in combined ||\n            \"allOf\" in combined ||\n            (\"type\" in combined && Array.isArray(combined.type)))) {\n        console.warn(\"Warning: OpenAI may not support schemas with unions as roots! Try wrapping it in an object property.\");\n    }\n    return combined;\n};\nexport { zodToJsonSchema };\n","import { ZodTypeAny, ZodTypeDef, ZodType, ParseInput, ParseReturnType, RawCreateParams, ZodErrorMap, ProcessedCreateParams } from 'zod';\n\nexport enum McpZodTypeKind {\n    Completable = 'McpCompletable'\n}\n\nexport type CompleteCallback<T extends ZodTypeAny = ZodTypeAny> = (\n    value: T['_input'],\n    context?: {\n        arguments?: Record<string, string>;\n    }\n) => T['_input'][] | Promise<T['_input'][]>;\n\nexport interface CompletableDef<T extends ZodTypeAny = ZodTypeAny> extends ZodTypeDef {\n    type: T;\n    complete: CompleteCallback<T>;\n    typeName: McpZodTypeKind.Completable;\n}\n\nexport class Completable<T extends ZodTypeAny> extends ZodType<T['_output'], CompletableDef<T>, T['_input']> {\n    _parse(input: ParseInput): ParseReturnType<this['_output']> {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx\n        });\n    }\n\n    unwrap() {\n        return this._def.type;\n    }\n\n    static create = <T extends ZodTypeAny>(\n        type: T,\n        params: RawCreateParams & {\n            complete: CompleteCallback<T>;\n        }\n    ): Completable<T> => {\n        return new Completable({\n            type,\n            typeName: McpZodTypeKind.Completable,\n            complete: params.complete,\n            ...processCreateParams(params)\n        });\n    };\n}\n\n/**\n * Wraps a Zod type to provide autocompletion capabilities. Useful for, e.g., prompt arguments in MCP.\n */\nexport function completable<T extends ZodTypeAny>(schema: T, complete: CompleteCallback<T>): Completable<T> {\n    return Completable.create(schema, { ...schema._def, complete });\n}\n\n// Not sure why this isn't exported from Zod:\n// https://github.com/colinhacks/zod/blob/f7ad26147ba291cb3fb257545972a8e00e767470/src/types.ts#L130\nfunction processCreateParams(params: RawCreateParams): ProcessedCreateParams {\n    if (!params) return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap) return { errorMap: errorMap, description };\n    const customMap: ZodErrorMap = (iss, ctx) => {\n        const { message } = params;\n\n        if (iss.code === 'invalid_enum_value') {\n            return { message: message ?? ctx.defaultError };\n        }\n        if (typeof ctx.data === 'undefined') {\n            return { message: message ?? required_error ?? ctx.defaultError };\n        }\n        if (iss.code !== 'invalid_type') return { message: ctx.defaultError };\n        return { message: message ?? invalid_type_error ?? ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\n","// Claude-authored implementation of RFC 6570 URI Templates\n\nexport type Variables = Record<string, string | string[]>;\n\nconst MAX_TEMPLATE_LENGTH = 1000000; // 1MB\nconst MAX_VARIABLE_LENGTH = 1000000; // 1MB\nconst MAX_TEMPLATE_EXPRESSIONS = 10000;\nconst MAX_REGEX_LENGTH = 1000000; // 1MB\n\nexport class UriTemplate {\n    /**\n     * Returns true if the given string contains any URI template expressions.\n     * A template expression is a sequence of characters enclosed in curly braces,\n     * like {foo} or {?bar}.\n     */\n    static isTemplate(str: string): boolean {\n        // Look for any sequence of characters between curly braces\n        // that isn't just whitespace\n        return /\\{[^}\\s]+\\}/.test(str);\n    }\n\n    private static validateLength(str: string, max: number, context: string): void {\n        if (str.length > max) {\n            throw new Error(`${context} exceeds maximum length of ${max} characters (got ${str.length})`);\n        }\n    }\n    private readonly template: string;\n    private readonly parts: Array<string | { name: string; operator: string; names: string[]; exploded: boolean }>;\n\n    get variableNames(): string[] {\n        return this.parts.flatMap(part => (typeof part === 'string' ? [] : part.names));\n    }\n\n    constructor(template: string) {\n        UriTemplate.validateLength(template, MAX_TEMPLATE_LENGTH, 'Template');\n        this.template = template;\n        this.parts = this.parse(template);\n    }\n\n    toString(): string {\n        return this.template;\n    }\n\n    private parse(template: string): Array<string | { name: string; operator: string; names: string[]; exploded: boolean }> {\n        const parts: Array<string | { name: string; operator: string; names: string[]; exploded: boolean }> = [];\n        let currentText = '';\n        let i = 0;\n        let expressionCount = 0;\n\n        while (i < template.length) {\n            if (template[i] === '{') {\n                if (currentText) {\n                    parts.push(currentText);\n                    currentText = '';\n                }\n                const end = template.indexOf('}', i);\n                if (end === -1) throw new Error('Unclosed template expression');\n\n                expressionCount++;\n                if (expressionCount > MAX_TEMPLATE_EXPRESSIONS) {\n                    throw new Error(`Template contains too many expressions (max ${MAX_TEMPLATE_EXPRESSIONS})`);\n                }\n\n                const expr = template.slice(i + 1, end);\n                const operator = this.getOperator(expr);\n                const exploded = expr.includes('*');\n                const names = this.getNames(expr);\n                const name = names[0];\n\n                // Validate variable name length\n                for (const name of names) {\n                    UriTemplate.validateLength(name, MAX_VARIABLE_LENGTH, 'Variable name');\n                }\n\n                parts.push({ name, operator, names, exploded });\n                i = end + 1;\n            } else {\n                currentText += template[i];\n                i++;\n            }\n        }\n\n        if (currentText) {\n            parts.push(currentText);\n        }\n\n        return parts;\n    }\n\n    private getOperator(expr: string): string {\n        const operators = ['+', '#', '.', '/', '?', '&'];\n        return operators.find(op => expr.startsWith(op)) || '';\n    }\n\n    private getNames(expr: string): string[] {\n        const operator = this.getOperator(expr);\n        return expr\n            .slice(operator.length)\n            .split(',')\n            .map(name => name.replace('*', '').trim())\n            .filter(name => name.length > 0);\n    }\n\n    private encodeValue(value: string, operator: string): string {\n        UriTemplate.validateLength(value, MAX_VARIABLE_LENGTH, 'Variable value');\n        if (operator === '+' || operator === '#') {\n            return encodeURI(value);\n        }\n        return encodeURIComponent(value);\n    }\n\n    private expandPart(\n        part: {\n            name: string;\n            operator: string;\n            names: string[];\n            exploded: boolean;\n        },\n        variables: Variables\n    ): string {\n        if (part.operator === '?' || part.operator === '&') {\n            const pairs = part.names\n                .map(name => {\n                    const value = variables[name];\n                    if (value === undefined) return '';\n                    const encoded = Array.isArray(value)\n                        ? value.map(v => this.encodeValue(v, part.operator)).join(',')\n                        : this.encodeValue(value.toString(), part.operator);\n                    return `${name}=${encoded}`;\n                })\n                .filter(pair => pair.length > 0);\n\n            if (pairs.length === 0) return '';\n            const separator = part.operator === '?' ? '?' : '&';\n            return separator + pairs.join('&');\n        }\n\n        if (part.names.length > 1) {\n            const values = part.names.map(name => variables[name]).filter(v => v !== undefined);\n            if (values.length === 0) return '';\n            return values.map(v => (Array.isArray(v) ? v[0] : v)).join(',');\n        }\n\n        const value = variables[part.name];\n        if (value === undefined) return '';\n\n        const values = Array.isArray(value) ? value : [value];\n        const encoded = values.map(v => this.encodeValue(v, part.operator));\n\n        switch (part.operator) {\n            case '':\n                return encoded.join(',');\n            case '+':\n                return encoded.join(',');\n            case '#':\n                return '#' + encoded.join(',');\n            case '.':\n                return '.' + encoded.join('.');\n            case '/':\n                return '/' + encoded.join('/');\n            default:\n                return encoded.join(',');\n        }\n    }\n\n    expand(variables: Variables): string {\n        let result = '';\n        let hasQueryParam = false;\n\n        for (const part of this.parts) {\n            if (typeof part === 'string') {\n                result += part;\n                continue;\n            }\n\n            const expanded = this.expandPart(part, variables);\n            if (!expanded) continue;\n\n            // Convert ? to & if we already have a query parameter\n            if ((part.operator === '?' || part.operator === '&') && hasQueryParam) {\n                result += expanded.replace('?', '&');\n            } else {\n                result += expanded;\n            }\n\n            if (part.operator === '?' || part.operator === '&') {\n                hasQueryParam = true;\n            }\n        }\n\n        return result;\n    }\n\n    private escapeRegExp(str: string): string {\n        return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n    }\n\n    private partToRegExp(part: {\n        name: string;\n        operator: string;\n        names: string[];\n        exploded: boolean;\n    }): Array<{ pattern: string; name: string }> {\n        const patterns: Array<{ pattern: string; name: string }> = [];\n\n        // Validate variable name length for matching\n        for (const name of part.names) {\n            UriTemplate.validateLength(name, MAX_VARIABLE_LENGTH, 'Variable name');\n        }\n\n        if (part.operator === '?' || part.operator === '&') {\n            for (let i = 0; i < part.names.length; i++) {\n                const name = part.names[i];\n                const prefix = i === 0 ? '\\\\' + part.operator : '&';\n                patterns.push({\n                    pattern: prefix + this.escapeRegExp(name) + '=([^&]+)',\n                    name\n                });\n            }\n            return patterns;\n        }\n\n        let pattern: string;\n        const name = part.name;\n\n        switch (part.operator) {\n            case '':\n                pattern = part.exploded ? '([^/]+(?:,[^/]+)*)' : '([^/,]+)';\n                break;\n            case '+':\n            case '#':\n                pattern = '(.+)';\n                break;\n            case '.':\n                pattern = '\\\\.([^/,]+)';\n                break;\n            case '/':\n                pattern = '/' + (part.exploded ? '([^/]+(?:,[^/]+)*)' : '([^/,]+)');\n                break;\n            default:\n                pattern = '([^/]+)';\n        }\n\n        patterns.push({ pattern, name });\n        return patterns;\n    }\n\n    match(uri: string): Variables | null {\n        UriTemplate.validateLength(uri, MAX_TEMPLATE_LENGTH, 'URI');\n        let pattern = '^';\n        const names: Array<{ name: string; exploded: boolean }> = [];\n\n        for (const part of this.parts) {\n            if (typeof part === 'string') {\n                pattern += this.escapeRegExp(part);\n            } else {\n                const patterns = this.partToRegExp(part);\n                for (const { pattern: partPattern, name } of patterns) {\n                    pattern += partPattern;\n                    names.push({ name, exploded: part.exploded });\n                }\n            }\n        }\n\n        pattern += '$';\n        UriTemplate.validateLength(pattern, MAX_REGEX_LENGTH, 'Generated regex pattern');\n        const regex = new RegExp(pattern);\n        const match = uri.match(regex);\n\n        if (!match) return null;\n\n        const result: Variables = {};\n        for (let i = 0; i < names.length; i++) {\n            const { name, exploded } = names[i];\n            const value = match[i + 1];\n            const cleanName = name.replace('*', '');\n\n            if (exploded && value.includes(',')) {\n                result[cleanName] = value.split(',');\n            } else {\n                result[cleanName] = value;\n            }\n        }\n\n        return result;\n    }\n}\n","import { Server, ServerOptions } from './index.js';\nimport { zodToJsonSchema } from 'zod-to-json-schema';\nimport { z, ZodRawShape, ZodObject, ZodString, AnyZodObject, ZodTypeAny, ZodType, ZodTypeDef, ZodOptional } from 'zod';\nimport {\n    Implementation,\n    Tool,\n    ListToolsResult,\n    CallToolResult,\n    McpError,\n    ErrorCode,\n    CompleteRequest,\n    CompleteResult,\n    PromptReference,\n    ResourceTemplateReference,\n    BaseMetadata,\n    Resource,\n    ListResourcesResult,\n    ListResourceTemplatesRequestSchema,\n    ReadResourceRequestSchema,\n    ListToolsRequestSchema,\n    CallToolRequestSchema,\n    ListResourcesRequestSchema,\n    ListPromptsRequestSchema,\n    GetPromptRequestSchema,\n    CompleteRequestSchema,\n    ListPromptsResult,\n    Prompt,\n    PromptArgument,\n    GetPromptResult,\n    ReadResourceResult,\n    ServerRequest,\n    ServerNotification,\n    ToolAnnotations,\n    LoggingMessageNotification\n} from '../types.js';\nimport { Completable, CompletableDef } from './completable.js';\nimport { UriTemplate, Variables } from '../shared/uriTemplate.js';\nimport { RequestHandlerExtra } from '../shared/protocol.js';\nimport { Transport } from '../shared/transport.js';\n\n/**\n * High-level MCP server that provides a simpler API for working with resources, tools, and prompts.\n * For advanced usage (like sending notifications or setting custom request handlers), use the underlying\n * Server instance available via the `server` property.\n */\nexport class McpServer {\n    /**\n     * The underlying Server instance, useful for advanced operations like sending notifications.\n     */\n    public readonly server: Server;\n\n    private _registeredResources: { [uri: string]: RegisteredResource } = {};\n    private _registeredResourceTemplates: {\n        [name: string]: RegisteredResourceTemplate;\n    } = {};\n    private _registeredTools: { [name: string]: RegisteredTool } = {};\n    private _registeredPrompts: { [name: string]: RegisteredPrompt } = {};\n\n    constructor(serverInfo: Implementation, options?: ServerOptions) {\n        this.server = new Server(serverInfo, options);\n    }\n\n    /**\n     * Attaches to the given transport, starts it, and starts listening for messages.\n     *\n     * The `server` object assumes ownership of the Transport, replacing any callbacks that have already been set, and expects that it is the only user of the Transport instance going forward.\n     */\n    async connect(transport: Transport): Promise<void> {\n        return await this.server.connect(transport);\n    }\n\n    /**\n     * Closes the connection.\n     */\n    async close(): Promise<void> {\n        await this.server.close();\n    }\n\n    private _toolHandlersInitialized = false;\n\n    private setToolRequestHandlers() {\n        if (this._toolHandlersInitialized) {\n            return;\n        }\n\n        this.server.assertCanSetRequestHandler(ListToolsRequestSchema.shape.method.value);\n        this.server.assertCanSetRequestHandler(CallToolRequestSchema.shape.method.value);\n\n        this.server.registerCapabilities({\n            tools: {\n                listChanged: true\n            }\n        });\n\n        this.server.setRequestHandler(\n            ListToolsRequestSchema,\n            (): ListToolsResult => ({\n                tools: Object.entries(this._registeredTools)\n                    .filter(([, tool]) => tool.enabled)\n                    .map(([name, tool]): Tool => {\n                        const toolDefinition: Tool = {\n                            name,\n                            title: tool.title,\n                            description: tool.description,\n                            inputSchema: tool.inputSchema\n                                ? (zodToJsonSchema(tool.inputSchema, {\n                                      strictUnions: true\n                                  }) as Tool['inputSchema'])\n                                : EMPTY_OBJECT_JSON_SCHEMA,\n                            annotations: tool.annotations,\n                            _meta: tool._meta\n                        };\n\n                        if (tool.outputSchema) {\n                            toolDefinition.outputSchema = zodToJsonSchema(tool.outputSchema, {\n                                strictUnions: true\n                            }) as Tool['outputSchema'];\n                        }\n\n                        return toolDefinition;\n                    })\n            })\n        );\n\n        this.server.setRequestHandler(CallToolRequestSchema, async (request, extra): Promise<CallToolResult> => {\n            const tool = this._registeredTools[request.params.name];\n            if (!tool) {\n                throw new McpError(ErrorCode.InvalidParams, `Tool ${request.params.name} not found`);\n            }\n\n            if (!tool.enabled) {\n                throw new McpError(ErrorCode.InvalidParams, `Tool ${request.params.name} disabled`);\n            }\n\n            let result: CallToolResult;\n\n            if (tool.inputSchema) {\n                const parseResult = await tool.inputSchema.safeParseAsync(request.params.arguments);\n                if (!parseResult.success) {\n                    throw new McpError(\n                        ErrorCode.InvalidParams,\n                        `Invalid arguments for tool ${request.params.name}: ${parseResult.error.message}`\n                    );\n                }\n\n                const args = parseResult.data;\n                const cb = tool.callback as ToolCallback<ZodRawShape>;\n                try {\n                    result = await Promise.resolve(cb(args, extra));\n                } catch (error) {\n                    result = {\n                        content: [\n                            {\n                                type: 'text',\n                                text: error instanceof Error ? error.message : String(error)\n                            }\n                        ],\n                        isError: true\n                    };\n                }\n            } else {\n                const cb = tool.callback as ToolCallback<undefined>;\n                try {\n                    result = await Promise.resolve(cb(extra));\n                } catch (error) {\n                    result = {\n                        content: [\n                            {\n                                type: 'text',\n                                text: error instanceof Error ? error.message : String(error)\n                            }\n                        ],\n                        isError: true\n                    };\n                }\n            }\n\n            if (tool.outputSchema && !result.isError) {\n                if (!result.structuredContent) {\n                    throw new McpError(\n                        ErrorCode.InvalidParams,\n                        `Tool ${request.params.name} has an output schema but no structured content was provided`\n                    );\n                }\n\n                // if the tool has an output schema, validate structured content\n                const parseResult = await tool.outputSchema.safeParseAsync(result.structuredContent);\n                if (!parseResult.success) {\n                    throw new McpError(\n                        ErrorCode.InvalidParams,\n                        `Invalid structured content for tool ${request.params.name}: ${parseResult.error.message}`\n                    );\n                }\n            }\n\n            return result;\n        });\n\n        this._toolHandlersInitialized = true;\n    }\n\n    private _completionHandlerInitialized = false;\n\n    private setCompletionRequestHandler() {\n        if (this._completionHandlerInitialized) {\n            return;\n        }\n\n        this.server.assertCanSetRequestHandler(CompleteRequestSchema.shape.method.value);\n\n        this.server.registerCapabilities({\n            completions: {}\n        });\n\n        this.server.setRequestHandler(CompleteRequestSchema, async (request): Promise<CompleteResult> => {\n            switch (request.params.ref.type) {\n                case 'ref/prompt':\n                    return this.handlePromptCompletion(request, request.params.ref);\n\n                case 'ref/resource':\n                    return this.handleResourceCompletion(request, request.params.ref);\n\n                default:\n                    throw new McpError(ErrorCode.InvalidParams, `Invalid completion reference: ${request.params.ref}`);\n            }\n        });\n\n        this._completionHandlerInitialized = true;\n    }\n\n    private async handlePromptCompletion(request: CompleteRequest, ref: PromptReference): Promise<CompleteResult> {\n        const prompt = this._registeredPrompts[ref.name];\n        if (!prompt) {\n            throw new McpError(ErrorCode.InvalidParams, `Prompt ${ref.name} not found`);\n        }\n\n        if (!prompt.enabled) {\n            throw new McpError(ErrorCode.InvalidParams, `Prompt ${ref.name} disabled`);\n        }\n\n        if (!prompt.argsSchema) {\n            return EMPTY_COMPLETION_RESULT;\n        }\n\n        const field = prompt.argsSchema.shape[request.params.argument.name];\n        if (!(field instanceof Completable)) {\n            return EMPTY_COMPLETION_RESULT;\n        }\n\n        const def: CompletableDef<ZodString> = field._def;\n        const suggestions = await def.complete(request.params.argument.value, request.params.context);\n        return createCompletionResult(suggestions);\n    }\n\n    private async handleResourceCompletion(request: CompleteRequest, ref: ResourceTemplateReference): Promise<CompleteResult> {\n        const template = Object.values(this._registeredResourceTemplates).find(t => t.resourceTemplate.uriTemplate.toString() === ref.uri);\n\n        if (!template) {\n            if (this._registeredResources[ref.uri]) {\n                // Attempting to autocomplete a fixed resource URI is not an error in the spec (but probably should be).\n                return EMPTY_COMPLETION_RESULT;\n            }\n\n            throw new McpError(ErrorCode.InvalidParams, `Resource template ${request.params.ref.uri} not found`);\n        }\n\n        const completer = template.resourceTemplate.completeCallback(request.params.argument.name);\n        if (!completer) {\n            return EMPTY_COMPLETION_RESULT;\n        }\n\n        const suggestions = await completer(request.params.argument.value, request.params.context);\n        return createCompletionResult(suggestions);\n    }\n\n    private _resourceHandlersInitialized = false;\n\n    private setResourceRequestHandlers() {\n        if (this._resourceHandlersInitialized) {\n            return;\n        }\n\n        this.server.assertCanSetRequestHandler(ListResourcesRequestSchema.shape.method.value);\n        this.server.assertCanSetRequestHandler(ListResourceTemplatesRequestSchema.shape.method.value);\n        this.server.assertCanSetRequestHandler(ReadResourceRequestSchema.shape.method.value);\n\n        this.server.registerCapabilities({\n            resources: {\n                listChanged: true\n            }\n        });\n\n        this.server.setRequestHandler(ListResourcesRequestSchema, async (request, extra) => {\n            const resources = Object.entries(this._registeredResources)\n                .filter(([_, resource]) => resource.enabled)\n                .map(([uri, resource]) => ({\n                    uri,\n                    name: resource.name,\n                    ...resource.metadata\n                }));\n\n            const templateResources: Resource[] = [];\n            for (const template of Object.values(this._registeredResourceTemplates)) {\n                if (!template.resourceTemplate.listCallback) {\n                    continue;\n                }\n\n                const result = await template.resourceTemplate.listCallback(extra);\n                for (const resource of result.resources) {\n                    templateResources.push({\n                        ...template.metadata,\n                        // the defined resource metadata should override the template metadata if present\n                        ...resource\n                    });\n                }\n            }\n\n            return { resources: [...resources, ...templateResources] };\n        });\n\n        this.server.setRequestHandler(ListResourceTemplatesRequestSchema, async () => {\n            const resourceTemplates = Object.entries(this._registeredResourceTemplates).map(([name, template]) => ({\n                name,\n                uriTemplate: template.resourceTemplate.uriTemplate.toString(),\n                ...template.metadata\n            }));\n\n            return { resourceTemplates };\n        });\n\n        this.server.setRequestHandler(ReadResourceRequestSchema, async (request, extra) => {\n            const uri = new URL(request.params.uri);\n\n            // First check for exact resource match\n            const resource = this._registeredResources[uri.toString()];\n            if (resource) {\n                if (!resource.enabled) {\n                    throw new McpError(ErrorCode.InvalidParams, `Resource ${uri} disabled`);\n                }\n                return resource.readCallback(uri, extra);\n            }\n\n            // Then check templates\n            for (const template of Object.values(this._registeredResourceTemplates)) {\n                const variables = template.resourceTemplate.uriTemplate.match(uri.toString());\n                if (variables) {\n                    return template.readCallback(uri, variables, extra);\n                }\n            }\n\n            throw new McpError(ErrorCode.InvalidParams, `Resource ${uri} not found`);\n        });\n\n        this.setCompletionRequestHandler();\n\n        this._resourceHandlersInitialized = true;\n    }\n\n    private _promptHandlersInitialized = false;\n\n    private setPromptRequestHandlers() {\n        if (this._promptHandlersInitialized) {\n            return;\n        }\n\n        this.server.assertCanSetRequestHandler(ListPromptsRequestSchema.shape.method.value);\n        this.server.assertCanSetRequestHandler(GetPromptRequestSchema.shape.method.value);\n\n        this.server.registerCapabilities({\n            prompts: {\n                listChanged: true\n            }\n        });\n\n        this.server.setRequestHandler(\n            ListPromptsRequestSchema,\n            (): ListPromptsResult => ({\n                prompts: Object.entries(this._registeredPrompts)\n                    .filter(([, prompt]) => prompt.enabled)\n                    .map(([name, prompt]): Prompt => {\n                        return {\n                            name,\n                            title: prompt.title,\n                            description: prompt.description,\n                            arguments: prompt.argsSchema ? promptArgumentsFromSchema(prompt.argsSchema) : undefined\n                        };\n                    })\n            })\n        );\n\n        this.server.setRequestHandler(GetPromptRequestSchema, async (request, extra): Promise<GetPromptResult> => {\n            const prompt = this._registeredPrompts[request.params.name];\n            if (!prompt) {\n                throw new McpError(ErrorCode.InvalidParams, `Prompt ${request.params.name} not found`);\n            }\n\n            if (!prompt.enabled) {\n                throw new McpError(ErrorCode.InvalidParams, `Prompt ${request.params.name} disabled`);\n            }\n\n            if (prompt.argsSchema) {\n                const parseResult = await prompt.argsSchema.safeParseAsync(request.params.arguments);\n                if (!parseResult.success) {\n                    throw new McpError(\n                        ErrorCode.InvalidParams,\n                        `Invalid arguments for prompt ${request.params.name}: ${parseResult.error.message}`\n                    );\n                }\n\n                const args = parseResult.data;\n                const cb = prompt.callback as PromptCallback<PromptArgsRawShape>;\n                return await Promise.resolve(cb(args, extra));\n            } else {\n                const cb = prompt.callback as PromptCallback<undefined>;\n                return await Promise.resolve(cb(extra));\n            }\n        });\n\n        this.setCompletionRequestHandler();\n\n        this._promptHandlersInitialized = true;\n    }\n\n    /**\n     * Registers a resource `name` at a fixed URI, which will use the given callback to respond to read requests.\n     */\n    resource(name: string, uri: string, readCallback: ReadResourceCallback): RegisteredResource;\n\n    /**\n     * Registers a resource `name` at a fixed URI with metadata, which will use the given callback to respond to read requests.\n     */\n    resource(name: string, uri: string, metadata: ResourceMetadata, readCallback: ReadResourceCallback): RegisteredResource;\n\n    /**\n     * Registers a resource `name` with a template pattern, which will use the given callback to respond to read requests.\n     */\n    resource(name: string, template: ResourceTemplate, readCallback: ReadResourceTemplateCallback): RegisteredResourceTemplate;\n\n    /**\n     * Registers a resource `name` with a template pattern and metadata, which will use the given callback to respond to read requests.\n     */\n    resource(\n        name: string,\n        template: ResourceTemplate,\n        metadata: ResourceMetadata,\n        readCallback: ReadResourceTemplateCallback\n    ): RegisteredResourceTemplate;\n\n    resource(name: string, uriOrTemplate: string | ResourceTemplate, ...rest: unknown[]): RegisteredResource | RegisteredResourceTemplate {\n        let metadata: ResourceMetadata | undefined;\n        if (typeof rest[0] === 'object') {\n            metadata = rest.shift() as ResourceMetadata;\n        }\n\n        const readCallback = rest[0] as ReadResourceCallback | ReadResourceTemplateCallback;\n\n        if (typeof uriOrTemplate === 'string') {\n            if (this._registeredResources[uriOrTemplate]) {\n                throw new Error(`Resource ${uriOrTemplate} is already registered`);\n            }\n\n            const registeredResource = this._createRegisteredResource(\n                name,\n                undefined,\n                uriOrTemplate,\n                metadata,\n                readCallback as ReadResourceCallback\n            );\n\n            this.setResourceRequestHandlers();\n            this.sendResourceListChanged();\n            return registeredResource;\n        } else {\n            if (this._registeredResourceTemplates[name]) {\n                throw new Error(`Resource template ${name} is already registered`);\n            }\n\n            const registeredResourceTemplate = this._createRegisteredResourceTemplate(\n                name,\n                undefined,\n                uriOrTemplate,\n                metadata,\n                readCallback as ReadResourceTemplateCallback\n            );\n\n            this.setResourceRequestHandlers();\n            this.sendResourceListChanged();\n            return registeredResourceTemplate;\n        }\n    }\n\n    /**\n     * Registers a resource with a config object and callback.\n     * For static resources, use a URI string. For dynamic resources, use a ResourceTemplate.\n     */\n    registerResource(name: string, uriOrTemplate: string, config: ResourceMetadata, readCallback: ReadResourceCallback): RegisteredResource;\n    registerResource(\n        name: string,\n        uriOrTemplate: ResourceTemplate,\n        config: ResourceMetadata,\n        readCallback: ReadResourceTemplateCallback\n    ): RegisteredResourceTemplate;\n    registerResource(\n        name: string,\n        uriOrTemplate: string | ResourceTemplate,\n        config: ResourceMetadata,\n        readCallback: ReadResourceCallback | ReadResourceTemplateCallback\n    ): RegisteredResource | RegisteredResourceTemplate {\n        if (typeof uriOrTemplate === 'string') {\n            if (this._registeredResources[uriOrTemplate]) {\n                throw new Error(`Resource ${uriOrTemplate} is already registered`);\n            }\n\n            const registeredResource = this._createRegisteredResource(\n                name,\n                (config as BaseMetadata).title,\n                uriOrTemplate,\n                config,\n                readCallback as ReadResourceCallback\n            );\n\n            this.setResourceRequestHandlers();\n            this.sendResourceListChanged();\n            return registeredResource;\n        } else {\n            if (this._registeredResourceTemplates[name]) {\n                throw new Error(`Resource template ${name} is already registered`);\n            }\n\n            const registeredResourceTemplate = this._createRegisteredResourceTemplate(\n                name,\n                (config as BaseMetadata).title,\n                uriOrTemplate,\n                config,\n                readCallback as ReadResourceTemplateCallback\n            );\n\n            this.setResourceRequestHandlers();\n            this.sendResourceListChanged();\n            return registeredResourceTemplate;\n        }\n    }\n\n    private _createRegisteredResource(\n        name: string,\n        title: string | undefined,\n        uri: string,\n        metadata: ResourceMetadata | undefined,\n        readCallback: ReadResourceCallback\n    ): RegisteredResource {\n        const registeredResource: RegisteredResource = {\n            name,\n            title,\n            metadata,\n            readCallback,\n            enabled: true,\n            disable: () => registeredResource.update({ enabled: false }),\n            enable: () => registeredResource.update({ enabled: true }),\n            remove: () => registeredResource.update({ uri: null }),\n            update: updates => {\n                if (typeof updates.uri !== 'undefined' && updates.uri !== uri) {\n                    delete this._registeredResources[uri];\n                    if (updates.uri) this._registeredResources[updates.uri] = registeredResource;\n                }\n                if (typeof updates.name !== 'undefined') registeredResource.name = updates.name;\n                if (typeof updates.title !== 'undefined') registeredResource.title = updates.title;\n                if (typeof updates.metadata !== 'undefined') registeredResource.metadata = updates.metadata;\n                if (typeof updates.callback !== 'undefined') registeredResource.readCallback = updates.callback;\n                if (typeof updates.enabled !== 'undefined') registeredResource.enabled = updates.enabled;\n                this.sendResourceListChanged();\n            }\n        };\n        this._registeredResources[uri] = registeredResource;\n        return registeredResource;\n    }\n\n    private _createRegisteredResourceTemplate(\n        name: string,\n        title: string | undefined,\n        template: ResourceTemplate,\n        metadata: ResourceMetadata | undefined,\n        readCallback: ReadResourceTemplateCallback\n    ): RegisteredResourceTemplate {\n        const registeredResourceTemplate: RegisteredResourceTemplate = {\n            resourceTemplate: template,\n            title,\n            metadata,\n            readCallback,\n            enabled: true,\n            disable: () => registeredResourceTemplate.update({ enabled: false }),\n            enable: () => registeredResourceTemplate.update({ enabled: true }),\n            remove: () => registeredResourceTemplate.update({ name: null }),\n            update: updates => {\n                if (typeof updates.name !== 'undefined' && updates.name !== name) {\n                    delete this._registeredResourceTemplates[name];\n                    if (updates.name) this._registeredResourceTemplates[updates.name] = registeredResourceTemplate;\n                }\n                if (typeof updates.title !== 'undefined') registeredResourceTemplate.title = updates.title;\n                if (typeof updates.template !== 'undefined') registeredResourceTemplate.resourceTemplate = updates.template;\n                if (typeof updates.metadata !== 'undefined') registeredResourceTemplate.metadata = updates.metadata;\n                if (typeof updates.callback !== 'undefined') registeredResourceTemplate.readCallback = updates.callback;\n                if (typeof updates.enabled !== 'undefined') registeredResourceTemplate.enabled = updates.enabled;\n                this.sendResourceListChanged();\n            }\n        };\n        this._registeredResourceTemplates[name] = registeredResourceTemplate;\n        return registeredResourceTemplate;\n    }\n\n    private _createRegisteredPrompt(\n        name: string,\n        title: string | undefined,\n        description: string | undefined,\n        argsSchema: PromptArgsRawShape | undefined,\n        callback: PromptCallback<PromptArgsRawShape | undefined>\n    ): RegisteredPrompt {\n        const registeredPrompt: RegisteredPrompt = {\n            title,\n            description,\n            argsSchema: argsSchema === undefined ? undefined : z.object(argsSchema),\n            callback,\n            enabled: true,\n            disable: () => registeredPrompt.update({ enabled: false }),\n            enable: () => registeredPrompt.update({ enabled: true }),\n            remove: () => registeredPrompt.update({ name: null }),\n            update: updates => {\n                if (typeof updates.name !== 'undefined' && updates.name !== name) {\n                    delete this._registeredPrompts[name];\n                    if (updates.name) this._registeredPrompts[updates.name] = registeredPrompt;\n                }\n                if (typeof updates.title !== 'undefined') registeredPrompt.title = updates.title;\n                if (typeof updates.description !== 'undefined') registeredPrompt.description = updates.description;\n                if (typeof updates.argsSchema !== 'undefined') registeredPrompt.argsSchema = z.object(updates.argsSchema);\n                if (typeof updates.callback !== 'undefined') registeredPrompt.callback = updates.callback;\n                if (typeof updates.enabled !== 'undefined') registeredPrompt.enabled = updates.enabled;\n                this.sendPromptListChanged();\n            }\n        };\n        this._registeredPrompts[name] = registeredPrompt;\n        return registeredPrompt;\n    }\n\n    private _createRegisteredTool(\n        name: string,\n        title: string | undefined,\n        description: string | undefined,\n        inputSchema: ZodRawShape | undefined,\n        outputSchema: ZodRawShape | undefined,\n        annotations: ToolAnnotations | undefined,\n        _meta: Record<string, unknown> | undefined,\n        callback: ToolCallback<ZodRawShape | undefined>\n    ): RegisteredTool {\n        const registeredTool: RegisteredTool = {\n            title,\n            description,\n            inputSchema: inputSchema === undefined ? undefined : z.object(inputSchema),\n            outputSchema: outputSchema === undefined ? undefined : z.object(outputSchema),\n            annotations,\n            _meta,\n            callback,\n            enabled: true,\n            disable: () => registeredTool.update({ enabled: false }),\n            enable: () => registeredTool.update({ enabled: true }),\n            remove: () => registeredTool.update({ name: null }),\n            update: updates => {\n                if (typeof updates.name !== 'undefined' && updates.name !== name) {\n                    delete this._registeredTools[name];\n                    if (updates.name) this._registeredTools[updates.name] = registeredTool;\n                }\n                if (typeof updates.title !== 'undefined') registeredTool.title = updates.title;\n                if (typeof updates.description !== 'undefined') registeredTool.description = updates.description;\n                if (typeof updates.paramsSchema !== 'undefined') registeredTool.inputSchema = z.object(updates.paramsSchema);\n                if (typeof updates.callback !== 'undefined') registeredTool.callback = updates.callback;\n                if (typeof updates.annotations !== 'undefined') registeredTool.annotations = updates.annotations;\n                if (typeof updates._meta !== 'undefined') registeredTool._meta = updates._meta;\n                if (typeof updates.enabled !== 'undefined') registeredTool.enabled = updates.enabled;\n                this.sendToolListChanged();\n            }\n        };\n        this._registeredTools[name] = registeredTool;\n\n        this.setToolRequestHandlers();\n        this.sendToolListChanged();\n\n        return registeredTool;\n    }\n\n    /**\n     * Registers a zero-argument tool `name`, which will run the given function when the client calls it.\n     */\n    tool(name: string, cb: ToolCallback): RegisteredTool;\n\n    /**\n     * Registers a zero-argument tool `name` (with a description) which will run the given function when the client calls it.\n     */\n    tool(name: string, description: string, cb: ToolCallback): RegisteredTool;\n\n    /**\n     * Registers a tool taking either a parameter schema for validation or annotations for additional metadata.\n     * This unified overload handles both `tool(name, paramsSchema, cb)` and `tool(name, annotations, cb)` cases.\n     *\n     * Note: We use a union type for the second parameter because TypeScript cannot reliably disambiguate\n     * between ToolAnnotations and ZodRawShape during overload resolution, as both are plain object types.\n     */\n    tool<Args extends ZodRawShape>(name: string, paramsSchemaOrAnnotations: Args | ToolAnnotations, cb: ToolCallback<Args>): RegisteredTool;\n\n    /**\n     * Registers a tool `name` (with a description) taking either parameter schema or annotations.\n     * This unified overload handles both `tool(name, description, paramsSchema, cb)` and\n     * `tool(name, description, annotations, cb)` cases.\n     *\n     * Note: We use a union type for the third parameter because TypeScript cannot reliably disambiguate\n     * between ToolAnnotations and ZodRawShape during overload resolution, as both are plain object types.\n     */\n    tool<Args extends ZodRawShape>(\n        name: string,\n        description: string,\n        paramsSchemaOrAnnotations: Args | ToolAnnotations,\n        cb: ToolCallback<Args>\n    ): RegisteredTool;\n\n    /**\n     * Registers a tool with both parameter schema and annotations.\n     */\n    tool<Args extends ZodRawShape>(name: string, paramsSchema: Args, annotations: ToolAnnotations, cb: ToolCallback<Args>): RegisteredTool;\n\n    /**\n     * Registers a tool with description, parameter schema, and annotations.\n     */\n    tool<Args extends ZodRawShape>(\n        name: string,\n        description: string,\n        paramsSchema: Args,\n        annotations: ToolAnnotations,\n        cb: ToolCallback<Args>\n    ): RegisteredTool;\n\n    /**\n     * tool() implementation. Parses arguments passed to overrides defined above.\n     */\n    tool(name: string, ...rest: unknown[]): RegisteredTool {\n        if (this._registeredTools[name]) {\n            throw new Error(`Tool ${name} is already registered`);\n        }\n\n        let description: string | undefined;\n        let inputSchema: ZodRawShape | undefined;\n        let outputSchema: ZodRawShape | undefined;\n        let annotations: ToolAnnotations | undefined;\n\n        // Tool properties are passed as separate arguments, with omissions allowed.\n        // Support for this style is frozen as of protocol version 2025-03-26. Future additions\n        // to tool definition should *NOT* be added.\n\n        if (typeof rest[0] === 'string') {\n            description = rest.shift() as string;\n        }\n\n        // Handle the different overload combinations\n        if (rest.length > 1) {\n            // We have at least one more arg before the callback\n            const firstArg = rest[0];\n\n            if (isZodRawShape(firstArg)) {\n                // We have a params schema as the first arg\n                inputSchema = rest.shift() as ZodRawShape;\n\n                // Check if the next arg is potentially annotations\n                if (rest.length > 1 && typeof rest[0] === 'object' && rest[0] !== null && !isZodRawShape(rest[0])) {\n                    // Case: tool(name, paramsSchema, annotations, cb)\n                    // Or: tool(name, description, paramsSchema, annotations, cb)\n                    annotations = rest.shift() as ToolAnnotations;\n                }\n            } else if (typeof firstArg === 'object' && firstArg !== null) {\n                // Not a ZodRawShape, so must be annotations in this position\n                // Case: tool(name, annotations, cb)\n                // Or: tool(name, description, annotations, cb)\n                annotations = rest.shift() as ToolAnnotations;\n            }\n        }\n        const callback = rest[0] as ToolCallback<ZodRawShape | undefined>;\n\n        return this._createRegisteredTool(name, undefined, description, inputSchema, outputSchema, annotations, undefined, callback);\n    }\n\n    /**\n     * Registers a tool with a config object and callback.\n     */\n    registerTool<InputArgs extends ZodRawShape, OutputArgs extends ZodRawShape>(\n        name: string,\n        config: {\n            title?: string;\n            description?: string;\n            inputSchema?: InputArgs;\n            outputSchema?: OutputArgs;\n            annotations?: ToolAnnotations;\n            _meta?: Record<string, unknown>;\n        },\n        cb: ToolCallback<InputArgs>\n    ): RegisteredTool {\n        if (this._registeredTools[name]) {\n            throw new Error(`Tool ${name} is already registered`);\n        }\n\n        const { title, description, inputSchema, outputSchema, annotations, _meta } = config;\n\n        return this._createRegisteredTool(\n            name,\n            title,\n            description,\n            inputSchema,\n            outputSchema,\n            annotations,\n            _meta,\n            cb as ToolCallback<ZodRawShape | undefined>\n        );\n    }\n\n    /**\n     * Registers a zero-argument prompt `name`, which will run the given function when the client calls it.\n     */\n    prompt(name: string, cb: PromptCallback): RegisteredPrompt;\n\n    /**\n     * Registers a zero-argument prompt `name` (with a description) which will run the given function when the client calls it.\n     */\n    prompt(name: string, description: string, cb: PromptCallback): RegisteredPrompt;\n\n    /**\n     * Registers a prompt `name` accepting the given arguments, which must be an object containing named properties associated with Zod schemas. When the client calls it, the function will be run with the parsed and validated arguments.\n     */\n    prompt<Args extends PromptArgsRawShape>(name: string, argsSchema: Args, cb: PromptCallback<Args>): RegisteredPrompt;\n\n    /**\n     * Registers a prompt `name` (with a description) accepting the given arguments, which must be an object containing named properties associated with Zod schemas. When the client calls it, the function will be run with the parsed and validated arguments.\n     */\n    prompt<Args extends PromptArgsRawShape>(\n        name: string,\n        description: string,\n        argsSchema: Args,\n        cb: PromptCallback<Args>\n    ): RegisteredPrompt;\n\n    prompt(name: string, ...rest: unknown[]): RegisteredPrompt {\n        if (this._registeredPrompts[name]) {\n            throw new Error(`Prompt ${name} is already registered`);\n        }\n\n        let description: string | undefined;\n        if (typeof rest[0] === 'string') {\n            description = rest.shift() as string;\n        }\n\n        let argsSchema: PromptArgsRawShape | undefined;\n        if (rest.length > 1) {\n            argsSchema = rest.shift() as PromptArgsRawShape;\n        }\n\n        const cb = rest[0] as PromptCallback<PromptArgsRawShape | undefined>;\n        const registeredPrompt = this._createRegisteredPrompt(name, undefined, description, argsSchema, cb);\n\n        this.setPromptRequestHandlers();\n        this.sendPromptListChanged();\n\n        return registeredPrompt;\n    }\n\n    /**\n     * Registers a prompt with a config object and callback.\n     */\n    registerPrompt<Args extends PromptArgsRawShape>(\n        name: string,\n        config: {\n            title?: string;\n            description?: string;\n            argsSchema?: Args;\n        },\n        cb: PromptCallback<Args>\n    ): RegisteredPrompt {\n        if (this._registeredPrompts[name]) {\n            throw new Error(`Prompt ${name} is already registered`);\n        }\n\n        const { title, description, argsSchema } = config;\n\n        const registeredPrompt = this._createRegisteredPrompt(\n            name,\n            title,\n            description,\n            argsSchema,\n            cb as PromptCallback<PromptArgsRawShape | undefined>\n        );\n\n        this.setPromptRequestHandlers();\n        this.sendPromptListChanged();\n\n        return registeredPrompt;\n    }\n\n    /**\n     * Checks if the server is connected to a transport.\n     * @returns True if the server is connected\n     */\n    isConnected() {\n        return this.server.transport !== undefined;\n    }\n\n    /**\n     * Sends a logging message to the client, if connected.\n     * Note: You only need to send the parameters object, not the entire JSON RPC message\n     * @see LoggingMessageNotification\n     * @param params\n     * @param sessionId optional for stateless and backward compatibility\n     */\n    async sendLoggingMessage(params: LoggingMessageNotification['params'], sessionId?: string) {\n        return this.server.sendLoggingMessage(params, sessionId);\n    }\n    /**\n     * Sends a resource list changed event to the client, if connected.\n     */\n    sendResourceListChanged() {\n        if (this.isConnected()) {\n            this.server.sendResourceListChanged();\n        }\n    }\n\n    /**\n     * Sends a tool list changed event to the client, if connected.\n     */\n    sendToolListChanged() {\n        if (this.isConnected()) {\n            this.server.sendToolListChanged();\n        }\n    }\n\n    /**\n     * Sends a prompt list changed event to the client, if connected.\n     */\n    sendPromptListChanged() {\n        if (this.isConnected()) {\n            this.server.sendPromptListChanged();\n        }\n    }\n}\n\n/**\n * A callback to complete one variable within a resource template's URI template.\n */\nexport type CompleteResourceTemplateCallback = (\n    value: string,\n    context?: {\n        arguments?: Record<string, string>;\n    }\n) => string[] | Promise<string[]>;\n\n/**\n * A resource template combines a URI pattern with optional functionality to enumerate\n * all resources matching that pattern.\n */\nexport class ResourceTemplate {\n    private _uriTemplate: UriTemplate;\n\n    constructor(\n        uriTemplate: string | UriTemplate,\n        private _callbacks: {\n            /**\n             * A callback to list all resources matching this template. This is required to specified, even if `undefined`, to avoid accidentally forgetting resource listing.\n             */\n            list: ListResourcesCallback | undefined;\n\n            /**\n             * An optional callback to autocomplete variables within the URI template. Useful for clients and users to discover possible values.\n             */\n            complete?: {\n                [variable: string]: CompleteResourceTemplateCallback;\n            };\n        }\n    ) {\n        this._uriTemplate = typeof uriTemplate === 'string' ? new UriTemplate(uriTemplate) : uriTemplate;\n    }\n\n    /**\n     * Gets the URI template pattern.\n     */\n    get uriTemplate(): UriTemplate {\n        return this._uriTemplate;\n    }\n\n    /**\n     * Gets the list callback, if one was provided.\n     */\n    get listCallback(): ListResourcesCallback | undefined {\n        return this._callbacks.list;\n    }\n\n    /**\n     * Gets the callback for completing a specific URI template variable, if one was provided.\n     */\n    completeCallback(variable: string): CompleteResourceTemplateCallback | undefined {\n        return this._callbacks.complete?.[variable];\n    }\n}\n\n/**\n * Callback for a tool handler registered with Server.tool().\n *\n * Parameters will include tool arguments, if applicable, as well as other request handler context.\n *\n * The callback should return:\n * - `structuredContent` if the tool has an outputSchema defined\n * - `content` if the tool does not have an outputSchema\n * - Both fields are optional but typically one should be provided\n */\nexport type ToolCallback<Args extends undefined | ZodRawShape = undefined> = Args extends ZodRawShape\n    ? (\n          args: z.objectOutputType<Args, ZodTypeAny>,\n          extra: RequestHandlerExtra<ServerRequest, ServerNotification>\n      ) => CallToolResult | Promise<CallToolResult>\n    : (extra: RequestHandlerExtra<ServerRequest, ServerNotification>) => CallToolResult | Promise<CallToolResult>;\n\nexport type RegisteredTool = {\n    title?: string;\n    description?: string;\n    inputSchema?: AnyZodObject;\n    outputSchema?: AnyZodObject;\n    annotations?: ToolAnnotations;\n    _meta?: Record<string, unknown>;\n    callback: ToolCallback<undefined | ZodRawShape>;\n    enabled: boolean;\n    enable(): void;\n    disable(): void;\n    update<InputArgs extends ZodRawShape, OutputArgs extends ZodRawShape>(updates: {\n        name?: string | null;\n        title?: string;\n        description?: string;\n        paramsSchema?: InputArgs;\n        outputSchema?: OutputArgs;\n        annotations?: ToolAnnotations;\n        _meta?: Record<string, unknown>;\n        callback?: ToolCallback<InputArgs>;\n        enabled?: boolean;\n    }): void;\n    remove(): void;\n};\n\nconst EMPTY_OBJECT_JSON_SCHEMA = {\n    type: 'object' as const,\n    properties: {}\n};\n\n// Helper to check if an object is a Zod schema (ZodRawShape)\nfunction isZodRawShape(obj: unknown): obj is ZodRawShape {\n    if (typeof obj !== 'object' || obj === null) return false;\n\n    const isEmptyObject = Object.keys(obj).length === 0;\n\n    // Check if object is empty or at least one property is a ZodType instance\n    // Note: use heuristic check to avoid instanceof failure across different Zod versions\n    return isEmptyObject || Object.values(obj as object).some(isZodTypeLike);\n}\n\nfunction isZodTypeLike(value: unknown): value is ZodType {\n    return (\n        value !== null &&\n        typeof value === 'object' &&\n        'parse' in value &&\n        typeof value.parse === 'function' &&\n        'safeParse' in value &&\n        typeof value.safeParse === 'function'\n    );\n}\n\n/**\n * Additional, optional information for annotating a resource.\n */\nexport type ResourceMetadata = Omit<Resource, 'uri' | 'name'>;\n\n/**\n * Callback to list all resources matching a given template.\n */\nexport type ListResourcesCallback = (\n    extra: RequestHandlerExtra<ServerRequest, ServerNotification>\n) => ListResourcesResult | Promise<ListResourcesResult>;\n\n/**\n * Callback to read a resource at a given URI.\n */\nexport type ReadResourceCallback = (\n    uri: URL,\n    extra: RequestHandlerExtra<ServerRequest, ServerNotification>\n) => ReadResourceResult | Promise<ReadResourceResult>;\n\nexport type RegisteredResource = {\n    name: string;\n    title?: string;\n    metadata?: ResourceMetadata;\n    readCallback: ReadResourceCallback;\n    enabled: boolean;\n    enable(): void;\n    disable(): void;\n    update(updates: {\n        name?: string;\n        title?: string;\n        uri?: string | null;\n        metadata?: ResourceMetadata;\n        callback?: ReadResourceCallback;\n        enabled?: boolean;\n    }): void;\n    remove(): void;\n};\n\n/**\n * Callback to read a resource at a given URI, following a filled-in URI template.\n */\nexport type ReadResourceTemplateCallback = (\n    uri: URL,\n    variables: Variables,\n    extra: RequestHandlerExtra<ServerRequest, ServerNotification>\n) => ReadResourceResult | Promise<ReadResourceResult>;\n\nexport type RegisteredResourceTemplate = {\n    resourceTemplate: ResourceTemplate;\n    title?: string;\n    metadata?: ResourceMetadata;\n    readCallback: ReadResourceTemplateCallback;\n    enabled: boolean;\n    enable(): void;\n    disable(): void;\n    update(updates: {\n        name?: string | null;\n        title?: string;\n        template?: ResourceTemplate;\n        metadata?: ResourceMetadata;\n        callback?: ReadResourceTemplateCallback;\n        enabled?: boolean;\n    }): void;\n    remove(): void;\n};\n\ntype PromptArgsRawShape = {\n    [k: string]: ZodType<string, ZodTypeDef, string> | ZodOptional<ZodType<string, ZodTypeDef, string>>;\n};\n\nexport type PromptCallback<Args extends undefined | PromptArgsRawShape = undefined> = Args extends PromptArgsRawShape\n    ? (\n          args: z.objectOutputType<Args, ZodTypeAny>,\n          extra: RequestHandlerExtra<ServerRequest, ServerNotification>\n      ) => GetPromptResult | Promise<GetPromptResult>\n    : (extra: RequestHandlerExtra<ServerRequest, ServerNotification>) => GetPromptResult | Promise<GetPromptResult>;\n\nexport type RegisteredPrompt = {\n    title?: string;\n    description?: string;\n    argsSchema?: ZodObject<PromptArgsRawShape>;\n    callback: PromptCallback<undefined | PromptArgsRawShape>;\n    enabled: boolean;\n    enable(): void;\n    disable(): void;\n    update<Args extends PromptArgsRawShape>(updates: {\n        name?: string | null;\n        title?: string;\n        description?: string;\n        argsSchema?: Args;\n        callback?: PromptCallback<Args>;\n        enabled?: boolean;\n    }): void;\n    remove(): void;\n};\n\nfunction promptArgumentsFromSchema(schema: ZodObject<PromptArgsRawShape>): PromptArgument[] {\n    return Object.entries(schema.shape).map(\n        ([name, field]): PromptArgument => ({\n            name,\n            description: field.description,\n            required: !field.isOptional()\n        })\n    );\n}\n\nfunction createCompletionResult(suggestions: string[]): CompleteResult {\n    return {\n        completion: {\n            values: suggestions.slice(0, 100),\n            total: suggestions.length,\n            hasMore: suggestions.length > 100\n        }\n    };\n}\n\nconst EMPTY_COMPLETION_RESULT: CompleteResult = {\n    completion: {\n        values: [],\n        hasMore: false\n    }\n};\n","/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = bytes;\nmodule.exports.format = format;\nmodule.exports.parse = parse;\n\n/**\n * Module variables.\n * @private\n */\n\nvar formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g;\n\nvar formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/;\n\nvar map = {\n  b:  1,\n  kb: 1 << 10,\n  mb: 1 << 20,\n  gb: 1 << 30,\n  tb: Math.pow(1024, 4),\n  pb: Math.pow(1024, 5),\n};\n\nvar parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i;\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: [string],\n *  decimalPlaces: [number]\n *  fixedDecimals: [boolean]\n *  thousandsSeparator: [string]\n *  unitSeparator: [string]\n *  }} [options] bytes options.\n *\n * @returns {string|number|null}\n */\n\nfunction bytes(value, options) {\n  if (typeof value === 'string') {\n    return parse(value);\n  }\n\n  if (typeof value === 'number') {\n    return format(value, options);\n  }\n\n  return null;\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n *\n * @returns {string|null}\n * @public\n */\n\nfunction format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null;\n  }\n\n  var mag = Math.abs(value);\n  var thousandsSeparator = (options && options.thousandsSeparator) || '';\n  var unitSeparator = (options && options.unitSeparator) || '';\n  var decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2;\n  var fixedDecimals = Boolean(options && options.fixedDecimals);\n  var unit = (options && options.unit) || '';\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map.pb) {\n      unit = 'PB';\n    } else if (mag >= map.tb) {\n      unit = 'TB';\n    } else if (mag >= map.gb) {\n      unit = 'GB';\n    } else if (mag >= map.mb) {\n      unit = 'MB';\n    } else if (mag >= map.kb) {\n      unit = 'KB';\n    } else {\n      unit = 'B';\n    }\n  }\n\n  var val = value / map[unit.toLowerCase()];\n  var str = val.toFixed(decimalPlaces);\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1');\n  }\n\n  if (thousandsSeparator) {\n    str = str.split('.').map(function (s, i) {\n      return i === 0\n        ? s.replace(formatThousandsRegExp, thousandsSeparator)\n        : s\n    }).join('.');\n  }\n\n  return str + unitSeparator + unit;\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nfunction parse(val) {\n  if (typeof val === 'number' && !isNaN(val)) {\n    return val;\n  }\n\n  if (typeof val !== 'string') {\n    return null;\n  }\n\n  // Test if the string passed is valid\n  var results = parseRegExp.exec(val);\n  var floatValue;\n  var unit = 'b';\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10);\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1]);\n    unit = results[4].toLowerCase();\n  }\n\n  if (isNaN(floatValue)) {\n    return null;\n  }\n\n  return Math.floor(map[unit] * floatValue);\n}\n","/*!\n * depd\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = depd\n\n/**\n * Create deprecate for namespace in caller.\n */\n\nfunction depd (namespace) {\n  if (!namespace) {\n    throw new TypeError('argument namespace is required')\n  }\n\n  function deprecate (message) {\n    // no-op in browser\n  }\n\n  deprecate._file = undefined\n  deprecate._ignored = true\n  deprecate._namespace = namespace\n  deprecate._traced = false\n  deprecate._warned = Object.create(null)\n\n  deprecate.function = wrapfunction\n  deprecate.property = wrapproperty\n\n  return deprecate\n}\n\n/**\n * Return a wrapped function in a deprecation message.\n *\n * This is a no-op version of the wrapper, which does nothing but call\n * validation.\n */\n\nfunction wrapfunction (fn, message) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('argument fn must be a function')\n  }\n\n  return fn\n}\n\n/**\n * Wrap property in a deprecation message.\n *\n * This is a no-op version of the wrapper, which does nothing but call\n * validation.\n */\n\nfunction wrapproperty (obj, prop, message) {\n  if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    throw new TypeError('argument obj must be object')\n  }\n\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n\n  if (!descriptor) {\n    throw new TypeError('must call property on owner object')\n  }\n\n  if (!descriptor.configurable) {\n    throw new TypeError('property must be configurable')\n  }\n}\n","'use strict'\n/* eslint no-proto: 0 */\nmodule.exports = Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties)\n\nfunction setProtoOf (obj, proto) {\n  obj.__proto__ = proto\n  return obj\n}\n\nfunction mixinProperties (obj, proto) {\n  for (var prop in proto) {\n    if (!Object.prototype.hasOwnProperty.call(obj, prop)) {\n      obj[prop] = proto[prop]\n    }\n  }\n  return obj\n}\n","/*!\n * statuses\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar codes = require('./codes.json')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = status\n\n// status code to message map\nstatus.message = codes\n\n// status message (lower-case) to code map\nstatus.code = createMessageToStatusCodeMap(codes)\n\n// array of status codes\nstatus.codes = createStatusCodeList(codes)\n\n// status codes for redirects\nstatus.redirect = {\n  300: true,\n  301: true,\n  302: true,\n  303: true,\n  305: true,\n  307: true,\n  308: true\n}\n\n// status codes for empty bodies\nstatus.empty = {\n  204: true,\n  205: true,\n  304: true\n}\n\n// status codes for when you should retry the request\nstatus.retry = {\n  502: true,\n  503: true,\n  504: true\n}\n\n/**\n * Create a map of message to status code.\n * @private\n */\n\nfunction createMessageToStatusCodeMap (codes) {\n  var map = {}\n\n  Object.keys(codes).forEach(function forEachCode (code) {\n    var message = codes[code]\n    var status = Number(code)\n\n    // populate map\n    map[message.toLowerCase()] = status\n  })\n\n  return map\n}\n\n/**\n * Create a list of all status codes.\n * @private\n */\n\nfunction createStatusCodeList (codes) {\n  return Object.keys(codes).map(function mapCode (code) {\n    return Number(code)\n  })\n}\n\n/**\n * Get the status code for given message.\n * @private\n */\n\nfunction getStatusCode (message) {\n  var msg = message.toLowerCase()\n\n  if (!Object.prototype.hasOwnProperty.call(status.code, msg)) {\n    throw new Error('invalid status message: \"' + message + '\"')\n  }\n\n  return status.code[msg]\n}\n\n/**\n * Get the status message for given code.\n * @private\n */\n\nfunction getStatusMessage (code) {\n  if (!Object.prototype.hasOwnProperty.call(status.message, code)) {\n    throw new Error('invalid status code: ' + code)\n  }\n\n  return status.message[code]\n}\n\n/**\n * Get the status code.\n *\n * Given a number, this will throw if it is not a known status\n * code, otherwise the code will be returned. Given a string,\n * the string will be parsed for a number and return the code\n * if valid, otherwise will lookup the code assuming this is\n * the status message.\n *\n * @param {string|number} code\n * @returns {number}\n * @public\n */\n\nfunction status (code) {\n  if (typeof code === 'number') {\n    return getStatusMessage(code)\n  }\n\n  if (typeof code !== 'string') {\n    throw new TypeError('code must be a number or string')\n  }\n\n  // '403'\n  var n = parseInt(code, 10)\n  if (!isNaN(n)) {\n    return getStatusMessage(n)\n  }\n\n  return getStatusCode(code)\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","/*!\n * toidentifier\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = toIdentifier\n\n/**\n * Trasform the given string into a JavaScript identifier\n *\n * @param {string} str\n * @returns {string}\n * @public\n */\n\nfunction toIdentifier (str) {\n  return str\n    .split(' ')\n    .map(function (token) {\n      return token.slice(0, 1).toUpperCase() + token.slice(1)\n    })\n    .join('')\n    .replace(/[^ _0-9a-z]/gi, '')\n}\n","/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('http-errors')\nvar setPrototypeOf = require('setprototypeof')\nvar statuses = require('statuses')\nvar inherits = require('inherits')\nvar toIdentifier = require('toidentifier')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = createError\nmodule.exports.HttpError = createHttpErrorConstructor()\nmodule.exports.isHttpError = createIsHttpErrorFunction(module.exports.HttpError)\n\n// Populate exports for all constructors\npopulateConstructorExports(module.exports, statuses.codes, module.exports.HttpError)\n\n/**\n * Get the code class of a status code.\n * @private\n */\n\nfunction codeClass (status) {\n  return Number(String(status).charAt(0) + '00')\n}\n\n/**\n * Create a new HTTP Error.\n *\n * @returns {Error}\n * @public\n */\n\nfunction createError () {\n  // so much arity going on ~_~\n  var err\n  var msg\n  var status = 500\n  var props = {}\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    var type = typeof arg\n    if (type === 'object' && arg instanceof Error) {\n      err = arg\n      status = err.status || err.statusCode || status\n    } else if (type === 'number' && i === 0) {\n      status = arg\n    } else if (type === 'string') {\n      msg = arg\n    } else if (type === 'object') {\n      props = arg\n    } else {\n      throw new TypeError('argument #' + (i + 1) + ' unsupported type ' + type)\n    }\n  }\n\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes')\n  }\n\n  if (typeof status !== 'number' ||\n    (!statuses.message[status] && (status < 400 || status >= 600))) {\n    status = 500\n  }\n\n  // constructor\n  var HttpError = createError[status] || createError[codeClass(status)]\n\n  if (!err) {\n    // create error\n    err = HttpError\n      ? new HttpError(msg)\n      : new Error(msg || statuses.message[status])\n    Error.captureStackTrace(err, createError)\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500\n    err.status = err.statusCode = status\n  }\n\n  for (var key in props) {\n    if (key !== 'status' && key !== 'statusCode') {\n      err[key] = props[key]\n    }\n  }\n\n  return err\n}\n\n/**\n * Create HTTP error abstract base class.\n * @private\n */\n\nfunction createHttpErrorConstructor () {\n  function HttpError () {\n    throw new TypeError('cannot construct abstract class')\n  }\n\n  inherits(HttpError, Error)\n\n  return HttpError\n}\n\n/**\n * Create a constructor for a client error.\n * @private\n */\n\nfunction createClientErrorConstructor (HttpError, name, code) {\n  var className = toClassName(name)\n\n  function ClientError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses.message[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ClientError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ClientError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ClientError, HttpError)\n  nameFunc(ClientError, className)\n\n  ClientError.prototype.status = code\n  ClientError.prototype.statusCode = code\n  ClientError.prototype.expose = true\n\n  return ClientError\n}\n\n/**\n * Create function to test is a value is a HttpError.\n * @private\n */\n\nfunction createIsHttpErrorFunction (HttpError) {\n  return function isHttpError (val) {\n    if (!val || typeof val !== 'object') {\n      return false\n    }\n\n    if (val instanceof HttpError) {\n      return true\n    }\n\n    return val instanceof Error &&\n      typeof val.expose === 'boolean' &&\n      typeof val.statusCode === 'number' && val.status === val.statusCode\n  }\n}\n\n/**\n * Create a constructor for a server error.\n * @private\n */\n\nfunction createServerErrorConstructor (HttpError, name, code) {\n  var className = toClassName(name)\n\n  function ServerError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses.message[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ServerError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ServerError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ServerError, HttpError)\n  nameFunc(ServerError, className)\n\n  ServerError.prototype.status = code\n  ServerError.prototype.statusCode = code\n  ServerError.prototype.expose = false\n\n  return ServerError\n}\n\n/**\n * Set the name of a function, if possible.\n * @private\n */\n\nfunction nameFunc (func, name) {\n  var desc = Object.getOwnPropertyDescriptor(func, 'name')\n\n  if (desc && desc.configurable) {\n    desc.value = name\n    Object.defineProperty(func, 'name', desc)\n  }\n}\n\n/**\n * Populate the exports object with constructors for every error class.\n * @private\n */\n\nfunction populateConstructorExports (exports, codes, HttpError) {\n  codes.forEach(function forEachCode (code) {\n    var CodeError\n    var name = toIdentifier(statuses.message[code])\n\n    switch (codeClass(code)) {\n      case 400:\n        CodeError = createClientErrorConstructor(HttpError, name, code)\n        break\n      case 500:\n        CodeError = createServerErrorConstructor(HttpError, name, code)\n        break\n    }\n\n    if (CodeError) {\n      // export the constructor\n      exports[code] = CodeError\n      exports[name] = CodeError\n    }\n  })\n}\n\n/**\n * Get a class name from a name identifier.\n * @private\n */\n\nfunction toClassName (name) {\n  return name.substr(-5) !== 'Error'\n    ? name + 'Error'\n    : name\n}\n","/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n","\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    this.decoder = new StringDecoder(codec.enc);\n}\n\nInternalDecoder.prototype.write = function(buf) {\n    if (!Buffer.isBuffer(buf)) {\n        buf = Buffer.from(buf);\n    }\n\n    return this.decoder.write(buf);\n}\n\nInternalDecoder.prototype.end = function() {\n    return this.decoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n","'use strict';\n\nvar Buffer = require('safer-buffer').Buffer;\n\n// == UTF32-LE/BE codec. ==========================================================\n\nexports._utf32 = Utf32Codec;\n\nfunction Utf32Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n    this.bomAware = true;\n    this.isLE = codecOptions.isLE;\n}\n\nexports.utf32le = { type: '_utf32', isLE: true };\nexports.utf32be = { type: '_utf32', isLE: false };\n\n// Aliases\nexports.ucs4le = 'utf32le';\nexports.ucs4be = 'utf32be';\n\nUtf32Codec.prototype.encoder = Utf32Encoder;\nUtf32Codec.prototype.decoder = Utf32Decoder;\n\n// -- Encoding\n\nfunction Utf32Encoder(options, codec) {\n    this.isLE = codec.isLE;\n    this.highSurrogate = 0;\n}\n\nUtf32Encoder.prototype.write = function(str) {\n    var src = Buffer.from(str, 'ucs2');\n    var dst = Buffer.alloc(src.length * 2);\n    var write32 = this.isLE ? dst.writeUInt32LE : dst.writeUInt32BE;\n    var offset = 0;\n\n    for (var i = 0; i < src.length; i += 2) {\n        var code = src.readUInt16LE(i);\n        var isHighSurrogate = (0xD800 <= code && code < 0xDC00);\n        var isLowSurrogate = (0xDC00 <= code && code < 0xE000);\n\n        if (this.highSurrogate) {\n            if (isHighSurrogate || !isLowSurrogate) {\n                // There shouldn't be two high surrogates in a row, nor a high surrogate which isn't followed by a low\n                // surrogate. If this happens, keep the pending high surrogate as a stand-alone semi-invalid character\n                // (technically wrong, but expected by some applications, like Windows file names).\n                write32.call(dst, this.highSurrogate, offset);\n                offset += 4;\n            }\n            else {\n                // Create 32-bit value from high and low surrogates;\n                var codepoint = (((this.highSurrogate - 0xD800) << 10) | (code - 0xDC00)) + 0x10000;\n\n                write32.call(dst, codepoint, offset);\n                offset += 4;\n                this.highSurrogate = 0;\n\n                continue;\n            }\n        }\n\n        if (isHighSurrogate)\n            this.highSurrogate = code;\n        else {\n            // Even if the current character is a low surrogate, with no previous high surrogate, we'll\n            // encode it as a semi-invalid stand-alone character for the same reasons expressed above for\n            // unpaired high surrogates.\n            write32.call(dst, code, offset);\n            offset += 4;\n            this.highSurrogate = 0;\n        }\n    }\n\n    if (offset < dst.length)\n        dst = dst.slice(0, offset);\n\n    return dst;\n};\n\nUtf32Encoder.prototype.end = function() {\n    // Treat any leftover high surrogate as a semi-valid independent character.\n    if (!this.highSurrogate)\n        return;\n\n    var buf = Buffer.alloc(4);\n\n    if (this.isLE)\n        buf.writeUInt32LE(this.highSurrogate, 0);\n    else\n        buf.writeUInt32BE(this.highSurrogate, 0);\n\n    this.highSurrogate = 0;\n\n    return buf;\n};\n\n// -- Decoding\n\nfunction Utf32Decoder(options, codec) {\n    this.isLE = codec.isLE;\n    this.badChar = codec.iconv.defaultCharUnicode.charCodeAt(0);\n    this.overflow = [];\n}\n\nUtf32Decoder.prototype.write = function(src) {\n    if (src.length === 0)\n        return '';\n\n    var i = 0;\n    var codepoint = 0;\n    var dst = Buffer.alloc(src.length + 4);\n    var offset = 0;\n    var isLE = this.isLE;\n    var overflow = this.overflow;\n    var badChar = this.badChar;\n\n    if (overflow.length > 0) {\n        for (; i < src.length && overflow.length < 4; i++)\n            overflow.push(src[i]);\n        \n        if (overflow.length === 4) {\n            // NOTE: codepoint is a signed int32 and can be negative.\n            // NOTE: We copied this block from below to help V8 optimize it (it works with array, not buffer).\n            if (isLE) {\n                codepoint = overflow[i] | (overflow[i+1] << 8) | (overflow[i+2] << 16) | (overflow[i+3] << 24);\n            } else {\n                codepoint = overflow[i+3] | (overflow[i+2] << 8) | (overflow[i+1] << 16) | (overflow[i] << 24);\n            }\n            overflow.length = 0;\n\n            offset = _writeCodepoint(dst, offset, codepoint, badChar);\n        }\n    }\n\n    // Main loop. Should be as optimized as possible.\n    for (; i < src.length - 3; i += 4) {\n        // NOTE: codepoint is a signed int32 and can be negative.\n        if (isLE) {\n            codepoint = src[i] | (src[i+1] << 8) | (src[i+2] << 16) | (src[i+3] << 24);\n        } else {\n            codepoint = src[i+3] | (src[i+2] << 8) | (src[i+1] << 16) | (src[i] << 24);\n        }\n        offset = _writeCodepoint(dst, offset, codepoint, badChar);\n    }\n\n    // Keep overflowing bytes.\n    for (; i < src.length; i++) {\n        overflow.push(src[i]);\n    }\n\n    return dst.slice(0, offset).toString('ucs2');\n};\n\nfunction _writeCodepoint(dst, offset, codepoint, badChar) {\n    // NOTE: codepoint is signed int32 and can be negative. We keep it that way to help V8 with optimizations.\n    if (codepoint < 0 || codepoint > 0x10FFFF) {\n        // Not a valid Unicode codepoint\n        codepoint = badChar;\n    } \n\n    // Ephemeral Planes: Write high surrogate.\n    if (codepoint >= 0x10000) {\n        codepoint -= 0x10000;\n\n        var high = 0xD800 | (codepoint >> 10);\n        dst[offset++] = high & 0xff;\n        dst[offset++] = high >> 8;\n\n        // Low surrogate is written below.\n        var codepoint = 0xDC00 | (codepoint & 0x3FF);\n    }\n\n    // Write BMP char or low surrogate.\n    dst[offset++] = codepoint & 0xff;\n    dst[offset++] = codepoint >> 8;\n\n    return offset;\n};\n\nUtf32Decoder.prototype.end = function() {\n    this.overflow.length = 0;\n};\n\n// == UTF-32 Auto codec =============================================================\n// Decoder chooses automatically from UTF-32LE and UTF-32BE using BOM and space-based heuristic.\n// Defaults to UTF-32LE. http://en.wikipedia.org/wiki/UTF-32\n// Encoder/decoder default can be changed: iconv.decode(buf, 'utf32', {defaultEncoding: 'utf-32be'});\n\n// Encoder prepends BOM (which can be overridden with (addBOM: false}).\n\nexports.utf32 = Utf32AutoCodec;\nexports.ucs4 = 'utf32';\n\nfunction Utf32AutoCodec(options, iconv) {\n    this.iconv = iconv;\n}\n\nUtf32AutoCodec.prototype.encoder = Utf32AutoEncoder;\nUtf32AutoCodec.prototype.decoder = Utf32AutoDecoder;\n\n// -- Encoding\n\nfunction Utf32AutoEncoder(options, codec) {\n    options = options || {};\n\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n\n    this.encoder = codec.iconv.getEncoder(options.defaultEncoding || 'utf-32le', options);\n}\n\nUtf32AutoEncoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n};\n\nUtf32AutoEncoder.prototype.end = function() {\n    return this.encoder.end();\n};\n\n// -- Decoding\n\nfunction Utf32AutoDecoder(options, codec) {\n    this.decoder = null;\n    this.initialBufs = [];\n    this.initialBufsLen = 0;\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf32AutoDecoder.prototype.write = function(buf) {\n    if (!this.decoder) { \n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBufs.push(buf);\n        this.initialBufsLen += buf.length;\n\n        if (this.initialBufsLen < 32) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n\n    return this.decoder.write(buf);\n};\n\nUtf32AutoDecoder.prototype.end = function() {\n    if (!this.decoder) {\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        var trail = this.decoder.end();\n        if (trail)\n            resStr += trail;\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n\n    return this.decoder.end();\n};\n\nfunction detectEncoding(bufs, defaultEncoding) {\n    var b = [];\n    var charsProcessed = 0;\n    var invalidLE = 0, invalidBE = 0;   // Number of invalid chars when decoded as LE or BE.\n    var bmpCharsLE = 0, bmpCharsBE = 0; // Number of BMP chars when decoded as LE or BE.\n\n    outer_loop:\n    for (var i = 0; i < bufs.length; i++) {\n        var buf = bufs[i];\n        for (var j = 0; j < buf.length; j++) {\n            b.push(buf[j]);\n            if (b.length === 4) {\n                if (charsProcessed === 0) {\n                    // Check BOM first.\n                    if (b[0] === 0xFF && b[1] === 0xFE && b[2] === 0 && b[3] === 0) {\n                        return 'utf-32le';\n                    }\n                    if (b[0] === 0 && b[1] === 0 && b[2] === 0xFE && b[3] === 0xFF) {\n                        return 'utf-32be';\n                    }\n                }\n\n                if (b[0] !== 0 || b[1] > 0x10) invalidBE++;\n                if (b[3] !== 0 || b[2] > 0x10) invalidLE++;\n\n                if (b[0] === 0 && b[1] === 0 && (b[2] !== 0 || b[3] !== 0)) bmpCharsBE++;\n                if ((b[0] !== 0 || b[1] !== 0) && b[2] === 0 && b[3] === 0) bmpCharsLE++;\n\n                b.length = 0;\n                charsProcessed++;\n\n                if (charsProcessed >= 100) {\n                    break outer_loop;\n                }\n            }\n        }\n    }\n\n    // Make decisions.\n    if (bmpCharsBE - invalidBE > bmpCharsLE - invalidLE)  return 'utf-32be';\n    if (bmpCharsBE - invalidBE < bmpCharsLE - invalidLE)  return 'utf-32le';\n\n    // Couldn't decide (likely all zeros or not enough data).\n    return defaultEncoding || 'utf-32le';\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n    this.overflowByte = -1;\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBufs = [];\n    this.initialBufsLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBufs.push(buf);\n        this.initialBufsLen += buf.length;\n        \n        if (this.initialBufsLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        var trail = this.decoder.end();\n        if (trail)\n            resStr += trail;\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(bufs, defaultEncoding) {\n    var b = [];\n    var charsProcessed = 0;\n    var asciiCharsLE = 0, asciiCharsBE = 0; // Number of ASCII chars when decoded as LE or BE.\n\n    outer_loop:\n    for (var i = 0; i < bufs.length; i++) {\n        var buf = bufs[i];\n        for (var j = 0; j < buf.length; j++) {\n            b.push(buf[j]);\n            if (b.length === 2) {\n                if (charsProcessed === 0) {\n                    // Check BOM first.\n                    if (b[0] === 0xFF && b[1] === 0xFE) return 'utf-16le';\n                    if (b[0] === 0xFE && b[1] === 0xFF) return 'utf-16be';\n                }\n\n                if (b[0] === 0 && b[1] !== 0) asciiCharsBE++;\n                if (b[0] !== 0 && b[1] === 0) asciiCharsLE++;\n\n                b.length = 0;\n                charsProcessed++;\n\n                if (charsProcessed >= 100) {\n                    break outer_loop;\n                }\n            }\n        }\n    }\n\n    // Make decisions.\n    // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n    // So, we count ASCII as if it was LE or BE, and decide from that.\n    if (asciiCharsBE > asciiCharsLE) return 'utf-16be';\n    if (asciiCharsBE < asciiCharsLE) return 'utf-16le';\n\n    // Couldn't decide (likely all zeros or not enough data).\n    return defaultEncoding || 'utf-16le';\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + this.iconv.decode(buf.slice(lastI, i), \"ascii\");\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + this.iconv.decode(buf.slice(lastI), \"ascii\");\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + this.iconv.decode(buf.slice(lastI, i), \"ascii\").replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + this.iconv.decode(buf.slice(lastI), \"ascii\").replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n","\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"\n    },\n\n    \"mik\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n    },\n\n    \"cp720\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"\\x80\\x81éâ\\x84à\\x86çêëèïî\\x8d\\x8e\\x8f\\x90\\u0651\\u0652ô¤ـûùءآأؤ£إئابةتثجحخدذرزسشص«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ضطظعغفµقكلمنهوىي≡\\u064b\\u064c\\u064d\\u064e\\u064f\\u0650≈°∙·√ⁿ²■\\u00a0\"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n","\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000ÚỤ\\u0003ỪỬỮ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010ỨỰỲỶỸÝỴ\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001Ẳ\\u0003\\u0004ẴẪ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013Ỷ\\u0015\\u0016\\u0017\\u0018Ỹ\\u001a\\u001b\\u001c\\u001dỴ\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  }\n}","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 common decode nodes.\n        var commonThirdByteNodeIdx = this.decodeTables.length;\n        this.decodeTables.push(UNASSIGNED_NODE.slice(0));\n\n        var commonFourthByteNodeIdx = this.decodeTables.length;\n        this.decodeTables.push(UNASSIGNED_NODE.slice(0));\n\n        // Fill out the tree\n        var firstByteNode = this.decodeTables[0];\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNode = this.decodeTables[NODE_START - firstByteNode[i]];\n            for (var j = 0x30; j <= 0x39; j++) {\n                if (secondByteNode[j] === UNASSIGNED) {\n                    secondByteNode[j] = NODE_START - commonThirdByteNodeIdx;\n                } else if (secondByteNode[j] > NODE_START) {\n                    throw new Error(\"gb18030 decode tables conflict at byte 2\");\n                }\n\n                var thirdByteNode = this.decodeTables[NODE_START - secondByteNode[j]];\n                for (var k = 0x81; k <= 0xFE; k++) {\n                    if (thirdByteNode[k] === UNASSIGNED) {\n                        thirdByteNode[k] = NODE_START - commonFourthByteNodeIdx;\n                    } else if (thirdByteNode[k] === NODE_START - commonFourthByteNodeIdx) {\n                        continue;\n                    } else if (thirdByteNode[k] > NODE_START) {\n                        throw new Error(\"gb18030 decode tables conflict at byte 3\");\n                    }\n\n                    var fourthByteNode = this.decodeTables[NODE_START - thirdByteNode[k]];\n                    for (var l = 0x30; l <= 0x39; l++) {\n                        if (fourthByteNode[l] === UNASSIGNED)\n                            fourthByteNode[l] = GB18030_CODE;\n                    }\n                }\n            }\n        }\n    }\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    var hasValues = false;\n    var subNodeEmpty = {};\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0) {\n            this._setEncodeChar(uCode, mbCode);\n            hasValues = true;\n        } else if (uCode <= NODE_START) {\n            var subNodeIdx = NODE_START - uCode;\n            if (!subNodeEmpty[subNodeIdx]) {  // Skip empty subtrees (they are too large in gb18030).\n                var newPrefix = (mbCode << 8) >>> 0;  // NOTE: '>>> 0' keeps 32-bit num positive.\n                if (this._fillEncodeTable(subNodeIdx, newPrefix, skipEncodeChars))\n                    hasValues = true;\n                else\n                    subNodeEmpty[subNodeIdx] = true;\n            }\n        } else if (uCode <= SEQ_START) {\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n            hasValues = true;\n        }\n    }\n    return hasValues;\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else if (dbcsCode < 0x1000000) {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        } else {\n            newBuf[j++] = dbcsCode >>> 24;\n            newBuf[j++] = (dbcsCode >>> 16) & 0xFF;\n            newBuf[j++] = (dbcsCode >>> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBytes = [];\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBytes = this.prevBytes, prevOffset = this.prevBytes.length,\n        seqStart = -this.prevBytes.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBytes[i + prevOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n            i = seqStart; // Skip one byte ('i' will be incremented by the for loop) and try to parse again.\n        }\n        else if (uCode === GB18030_CODE) {\n            if (i >= 3) {\n                var ptr = (buf[i-3]-0x81)*12600 + (buf[i-2]-0x30)*1260 + (buf[i-1]-0x81)*10 + (curByte-0x30);\n            } else {\n                var ptr = (prevBytes[i-3+prevOffset]-0x81)*12600 + \n                          (((i-2 >= 0) ? buf[i-2] : prevBytes[i-2+prevOffset])-0x30)*1260 + \n                          (((i-1 >= 0) ? buf[i-1] : prevBytes[i-1+prevOffset])-0x81)*10 + \n                          (curByte-0x30);\n            }\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode >= 0x10000) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 | (uCode >> 10);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 | (uCode & 0x3FF);\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBytes = (seqStart >= 0)\n        ? Array.prototype.slice.call(buf, seqStart)\n        : prevBytes.slice(seqStart + prevOffset).concat(Array.prototype.slice.call(buf));\n\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBytes.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var bytesArr = this.prevBytes.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBytes = [];\n        this.nodeIdx = 0;\n        if (bytesArr.length > 0)\n            ret += this.write(bytesArr);\n    }\n\n    this.prevBytes = [];\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + ((r-l+1) >> 1);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n","\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'€': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [\n            // Although Encoding Standard says we should avoid encoding to HKSCS area (See Step 1 of\n            // https://encoding.spec.whatwg.org/#index-big5-pointer), we still do it to increase compatibility with ICU.\n            // But if a single unicode point can be encoded both as HKSCS and regular Big5, we prefer the latter.\n            0x8e69, 0x8e6f, 0x8e7e, 0x8eab, 0x8eb4, 0x8ecd, 0x8ed0, 0x8f57, 0x8f69, 0x8f6e, 0x8fcb, 0x8ffe,\n            0x906d, 0x907a, 0x90c4, 0x90dc, 0x90f1, 0x91bf, 0x92af, 0x92b0, 0x92b1, 0x92b2, 0x92d1, 0x9447, 0x94ca,\n            0x95d9, 0x96fc, 0x9975, 0x9b76, 0x9b78, 0x9b7b, 0x9bc6, 0x9bde, 0x9bec, 0x9bf6, 0x9c42, 0x9c53, 0x9c62,\n            0x9c68, 0x9c6b, 0x9c77, 0x9cbc, 0x9cbd, 0x9cd0, 0x9d57, 0x9d5a, 0x9dc4, 0x9def, 0x9dfb, 0x9ea9, 0x9eef,\n            0x9efd, 0x9f60, 0x9fcb, 0xa077, 0xa0dc, 0xa0df, 0x8fcc, 0x92c8, 0x9644, 0x96ed,\n\n            // Step 2 of https://encoding.spec.whatwg.org/#index-big5-pointer: Use last pointer for U+2550, U+255E, U+2561, U+256A, U+5341, or U+5345\n            0xa2a4, 0xa2a5, 0xa2a7, 0xa2a6, 0xa2cc, 0xa2ce,\n        ],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n","\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf32\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it.\nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n","\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// NOTE: Due to 'stream' module being pretty large (~100Kb, significant in browser environments), \n// we opt to dependency-inject it instead of creating a hard dependency.\nmodule.exports = function(stream_module) {\n    var Transform = stream_module.Transform;\n\n    // == Encoder stream =======================================================\n\n    function IconvLiteEncoderStream(conv, options) {\n        this.conv = conv;\n        options = options || {};\n        options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n        Transform.call(this, options);\n    }\n\n    IconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n        constructor: { value: IconvLiteEncoderStream }\n    });\n\n    IconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n        if (typeof chunk != 'string')\n            return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n        try {\n            var res = this.conv.write(chunk);\n            if (res && res.length) this.push(res);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteEncoderStream.prototype._flush = function(done) {\n        try {\n            var res = this.conv.end();\n            if (res && res.length) this.push(res);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteEncoderStream.prototype.collect = function(cb) {\n        var chunks = [];\n        this.on('error', cb);\n        this.on('data', function(chunk) { chunks.push(chunk); });\n        this.on('end', function() {\n            cb(null, Buffer.concat(chunks));\n        });\n        return this;\n    }\n\n\n    // == Decoder stream =======================================================\n\n    function IconvLiteDecoderStream(conv, options) {\n        this.conv = conv;\n        options = options || {};\n        options.encoding = this.encoding = 'utf8'; // We output strings.\n        Transform.call(this, options);\n    }\n\n    IconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n        constructor: { value: IconvLiteDecoderStream }\n    });\n\n    IconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n        if (!Buffer.isBuffer(chunk) && !(chunk instanceof Uint8Array))\n            return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n        try {\n            var res = this.conv.write(chunk);\n            if (res && res.length) this.push(res, this.encoding);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteDecoderStream.prototype._flush = function(done) {\n        try {\n            var res = this.conv.end();\n            if (res && res.length) this.push(res, this.encoding);                \n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteDecoderStream.prototype.collect = function(cb) {\n        var res = '';\n        this.on('error', cb);\n        this.on('data', function(chunk) { res += chunk; });\n        this.on('end', function() {\n            cb(null, res);\n        });\n        return this;\n    }\n\n    return {\n        IconvLiteEncoderStream: IconvLiteEncoderStream,\n        IconvLiteDecoderStream: IconvLiteDecoderStream,\n    };\n};\n","\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n// Streaming API\n// NOTE: Streaming API naturally depends on 'stream' module from Node.js. Unfortunately in browser environments this module can add\n// up to 100Kb to the output bundle. To avoid unnecessary code bloat, we don't enable Streaming API in browser by default.\n// If you would like to enable it explicitly, please add the following code to your app:\n// > iconv.enableStreamingAPI(require('stream'));\niconv.enableStreamingAPI = function enableStreamingAPI(stream_module) {\n    if (iconv.supportsStreams)\n        return;\n\n    // Dependency-inject stream module to create IconvLite stream classes.\n    var streams = require(\"./streams\")(stream_module);\n\n    // Not public API yet, but expose the stream classes.\n    iconv.IconvLiteEncoderStream = streams.IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = streams.IconvLiteDecoderStream;\n\n    // Streaming API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new iconv.IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new iconv.IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n}\n\n// Enable Streaming API automatically if 'stream' module is available and non-empty (the majority of environments).\nvar stream_module;\ntry {\n    stream_module = require(\"stream\");\n} catch (e) {}\n\nif (stream_module && stream_module.Transform) {\n    iconv.enableStreamingAPI(stream_module);\n\n} else {\n    // In rare cases where 'stream' module is not available by default, throw a helpful exception.\n    iconv.encodeStream = iconv.decodeStream = function() {\n        throw new Error(\"iconv-lite Streaming API is not enabled. Use iconv.enableStreamingAPI(require('stream')); to enable it.\");\n    };\n}\n\nif (\"Ā\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: js files use non-utf8 encoding. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n","/*!\n * unpipe\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = unpipe\n\n/**\n * Determine if there are Node.js pipe-like data listeners.\n * @private\n */\n\nfunction hasPipeDataListeners(stream) {\n  var listeners = stream.listeners('data')\n\n  for (var i = 0; i < listeners.length; i++) {\n    if (listeners[i].name === 'ondata') {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Unpipe a stream from all destinations.\n *\n * @param {object} stream\n * @public\n */\n\nfunction unpipe(stream) {\n  if (!stream) {\n    throw new TypeError('argument stream is required')\n  }\n\n  if (typeof stream.unpipe === 'function') {\n    // new-style\n    stream.unpipe()\n    return\n  }\n\n  // Node.js 0.8 hack\n  if (!hasPipeDataListeners(stream)) {\n    return\n  }\n\n  var listener\n  var listeners = stream.listeners('close')\n\n  for (var i = 0; i < listeners.length; i++) {\n    listener = listeners[i]\n\n    if (listener.name !== 'cleanup' && listener.name !== 'onclose') {\n      continue\n    }\n\n    // invoke the listener\n    listener.call(stream)\n  }\n}\n","/*!\n * raw-body\n * Copyright(c) 2013-2014 Jonathan Ong\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar asyncHooks = tryRequireAsyncHooks()\nvar bytes = require('bytes')\nvar createError = require('http-errors')\nvar iconv = require('iconv-lite')\nvar unpipe = require('unpipe')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = getRawBody\n\n/**\n * Module variables.\n * @private\n */\n\nvar ICONV_ENCODING_MESSAGE_REGEXP = /^Encoding not recognized: /\n\n/**\n * Get the decoder for a given encoding.\n *\n * @param {string} encoding\n * @private\n */\n\nfunction getDecoder (encoding) {\n  if (!encoding) return null\n\n  try {\n    return iconv.getDecoder(encoding)\n  } catch (e) {\n    // error getting decoder\n    if (!ICONV_ENCODING_MESSAGE_REGEXP.test(e.message)) throw e\n\n    // the encoding was not found\n    throw createError(415, 'specified encoding unsupported', {\n      encoding: encoding,\n      type: 'encoding.unsupported'\n    })\n  }\n}\n\n/**\n * Get the raw body of a stream (typically HTTP).\n *\n * @param {object} stream\n * @param {object|string|function} [options]\n * @param {function} [callback]\n * @public\n */\n\nfunction getRawBody (stream, options, callback) {\n  var done = callback\n  var opts = options || {}\n\n  // light validation\n  if (stream === undefined) {\n    throw new TypeError('argument stream is required')\n  } else if (typeof stream !== 'object' || stream === null || typeof stream.on !== 'function') {\n    throw new TypeError('argument stream must be a stream')\n  }\n\n  if (options === true || typeof options === 'string') {\n    // short cut for encoding\n    opts = {\n      encoding: options\n    }\n  }\n\n  if (typeof options === 'function') {\n    done = options\n    opts = {}\n  }\n\n  // validate callback is a function, if provided\n  if (done !== undefined && typeof done !== 'function') {\n    throw new TypeError('argument callback must be a function')\n  }\n\n  // require the callback without promises\n  if (!done && !global.Promise) {\n    throw new TypeError('argument callback is required')\n  }\n\n  // get encoding\n  var encoding = opts.encoding !== true\n    ? opts.encoding\n    : 'utf-8'\n\n  // convert the limit to an integer\n  var limit = bytes.parse(opts.limit)\n\n  // convert the expected length to an integer\n  var length = opts.length != null && !isNaN(opts.length)\n    ? parseInt(opts.length, 10)\n    : null\n\n  if (done) {\n    // classic callback style\n    return readStream(stream, encoding, length, limit, wrap(done))\n  }\n\n  return new Promise(function executor (resolve, reject) {\n    readStream(stream, encoding, length, limit, function onRead (err, buf) {\n      if (err) return reject(err)\n      resolve(buf)\n    })\n  })\n}\n\n/**\n * Halt a stream.\n *\n * @param {Object} stream\n * @private\n */\n\nfunction halt (stream) {\n  // unpipe everything from the stream\n  unpipe(stream)\n\n  // pause stream\n  if (typeof stream.pause === 'function') {\n    stream.pause()\n  }\n}\n\n/**\n * Read the data from the stream.\n *\n * @param {object} stream\n * @param {string} encoding\n * @param {number} length\n * @param {number} limit\n * @param {function} callback\n * @public\n */\n\nfunction readStream (stream, encoding, length, limit, callback) {\n  var complete = false\n  var sync = true\n\n  // check the length and limit options.\n  // note: we intentionally leave the stream paused,\n  // so users should handle the stream themselves.\n  if (limit !== null && length !== null && length > limit) {\n    return done(createError(413, 'request entity too large', {\n      expected: length,\n      length: length,\n      limit: limit,\n      type: 'entity.too.large'\n    }))\n  }\n\n  // streams1: assert request encoding is buffer.\n  // streams2+: assert the stream encoding is buffer.\n  //   stream._decoder: streams1\n  //   state.encoding: streams2\n  //   state.decoder: streams2, specifically < 0.10.6\n  var state = stream._readableState\n  if (stream._decoder || (state && (state.encoding || state.decoder))) {\n    // developer error\n    return done(createError(500, 'stream encoding should not be set', {\n      type: 'stream.encoding.set'\n    }))\n  }\n\n  if (typeof stream.readable !== 'undefined' && !stream.readable) {\n    return done(createError(500, 'stream is not readable', {\n      type: 'stream.not.readable'\n    }))\n  }\n\n  var received = 0\n  var decoder\n\n  try {\n    decoder = getDecoder(encoding)\n  } catch (err) {\n    return done(err)\n  }\n\n  var buffer = decoder\n    ? ''\n    : []\n\n  // attach listeners\n  stream.on('aborted', onAborted)\n  stream.on('close', cleanup)\n  stream.on('data', onData)\n  stream.on('end', onEnd)\n  stream.on('error', onEnd)\n\n  // mark sync section complete\n  sync = false\n\n  function done () {\n    var args = new Array(arguments.length)\n\n    // copy arguments\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    // mark complete\n    complete = true\n\n    if (sync) {\n      process.nextTick(invokeCallback)\n    } else {\n      invokeCallback()\n    }\n\n    function invokeCallback () {\n      cleanup()\n\n      if (args[0]) {\n        // halt the stream on error\n        halt(stream)\n      }\n\n      callback.apply(null, args)\n    }\n  }\n\n  function onAborted () {\n    if (complete) return\n\n    done(createError(400, 'request aborted', {\n      code: 'ECONNABORTED',\n      expected: length,\n      length: length,\n      received: received,\n      type: 'request.aborted'\n    }))\n  }\n\n  function onData (chunk) {\n    if (complete) return\n\n    received += chunk.length\n\n    if (limit !== null && received > limit) {\n      done(createError(413, 'request entity too large', {\n        limit: limit,\n        received: received,\n        type: 'entity.too.large'\n      }))\n    } else if (decoder) {\n      buffer += decoder.write(chunk)\n    } else {\n      buffer.push(chunk)\n    }\n  }\n\n  function onEnd (err) {\n    if (complete) return\n    if (err) return done(err)\n\n    if (length !== null && received !== length) {\n      done(createError(400, 'request size did not match content length', {\n        expected: length,\n        length: length,\n        received: received,\n        type: 'request.size.invalid'\n      }))\n    } else {\n      var string = decoder\n        ? buffer + (decoder.end() || '')\n        : Buffer.concat(buffer)\n      done(null, string)\n    }\n  }\n\n  function cleanup () {\n    buffer = null\n\n    stream.removeListener('aborted', onAborted)\n    stream.removeListener('data', onData)\n    stream.removeListener('end', onEnd)\n    stream.removeListener('error', onEnd)\n    stream.removeListener('close', cleanup)\n  }\n}\n\n/**\n * Try to require async_hooks\n * @private\n */\n\nfunction tryRequireAsyncHooks () {\n  try {\n    return require('async_hooks')\n  } catch (e) {\n    return {}\n  }\n}\n\n/**\n * Wrap function with async resource, if possible.\n * AsyncResource.bind static method backported.\n * @private\n */\n\nfunction wrap (fn) {\n  var res\n\n  // create anonymous resource\n  if (asyncHooks.AsyncResource) {\n    res = new asyncHooks.AsyncResource(fn.name || 'bound-anonymous-fn')\n  }\n\n  // incompatible node.js\n  if (!res || !res.runInAsyncScope) {\n    return fn\n  }\n\n  // return bound function\n  return res.runInAsyncScope.bind(res, fn, null)\n}\n","/*!\n * content-type\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1\n *\n * parameter     = token \"=\" ( token / quoted-string )\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\n * obs-text      = %x80-FF\n * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n */\nvar PARAM_REGEXP = /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *(\"(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*\"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g // eslint-disable-line no-control-regex\nvar TEXT_REGEXP = /^[\\u000b\\u0020-\\u007e\\u0080-\\u00ff]+$/ // eslint-disable-line no-control-regex\nvar TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\n *\n * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n * obs-text    = %x80-FF\n */\nvar QESC_REGEXP = /\\\\([\\u000b\\u0020-\\u00ff])/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6\n */\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp to match type in RFC 7231 sec 3.1.1.1\n *\n * media-type = type \"/\" subtype\n * type       = token\n * subtype    = token\n */\nvar TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * Module exports.\n * @public\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @public\n */\n\nfunction format (obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || !TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  var string = type\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!TOKEN_REGEXP.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  var header = typeof string === 'object'\n    ? getcontenttype(string)\n    : string\n\n  if (typeof header !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = header.indexOf(';')\n  var type = index !== -1\n    ? header.slice(0, index).trim()\n    : header.trim()\n\n  if (!TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid media type')\n  }\n\n  var obj = new ContentType(type.toLowerCase())\n\n  // parse parameters\n  if (index !== -1) {\n    var key\n    var match\n    var value\n\n    PARAM_REGEXP.lastIndex = index\n\n    while ((match = PARAM_REGEXP.exec(header))) {\n      if (match.index !== index) {\n        throw new TypeError('invalid parameter format')\n      }\n\n      index += match[0].length\n      key = match[1].toLowerCase()\n      value = match[2]\n\n      if (value.charCodeAt(0) === 0x22 /* \" */) {\n        // remove quotes\n        value = value.slice(1, -1)\n\n        // remove escapes\n        if (value.indexOf('\\\\') !== -1) {\n          value = value.replace(QESC_REGEXP, '$1')\n        }\n      }\n\n      obj.parameters[key] = value\n    }\n\n    if (index !== header.length) {\n      throw new TypeError('invalid parameter format')\n    }\n  }\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @private\n */\n\nfunction getcontenttype (obj) {\n  var header\n\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    header = obj.getHeader('content-type')\n  } else if (typeof obj.headers === 'object') {\n    // req-like\n    header = obj.headers && obj.headers['content-type']\n  }\n\n  if (typeof header !== 'string') {\n    throw new TypeError('content-type header is missing from object')\n  }\n\n  return header\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (TOKEN_REGEXP.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !TEXT_REGEXP.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Class to represent a content type.\n * @private\n */\nfunction ContentType (type) {\n  this.parameters = Object.create(null)\n  this.type = type\n}\n","import { IncomingMessage, ServerResponse } from 'node:http';\nimport { Transport } from '../shared/transport.js';\nimport {\n    MessageExtraInfo,\n    RequestInfo,\n    isInitializeRequest,\n    isJSONRPCError,\n    isJSONRPCRequest,\n    isJSONRPCResponse,\n    JSONRPCMessage,\n    JSONRPCMessageSchema,\n    RequestId,\n    SUPPORTED_PROTOCOL_VERSIONS,\n    DEFAULT_NEGOTIATED_PROTOCOL_VERSION\n} from '../types.js';\nimport getRawBody from 'raw-body';\nimport contentType from 'content-type';\nimport { randomUUID } from 'node:crypto';\nimport { AuthInfo } from './auth/types.js';\n\nconst MAXIMUM_MESSAGE_SIZE = '4mb';\n\nexport type StreamId = string;\nexport type EventId = string;\n\n/**\n * Interface for resumability support via event storage\n */\nexport interface EventStore {\n    /**\n     * Stores an event for later retrieval\n     * @param streamId ID of the stream the event belongs to\n     * @param message The JSON-RPC message to store\n     * @returns The generated event ID for the stored event\n     */\n    storeEvent(streamId: StreamId, message: JSONRPCMessage): Promise<EventId>;\n\n    replayEventsAfter(\n        lastEventId: EventId,\n        {\n            send\n        }: {\n            send: (eventId: EventId, message: JSONRPCMessage) => Promise<void>;\n        }\n    ): Promise<StreamId>;\n}\n\n/**\n * Configuration options for StreamableHTTPServerTransport\n */\nexport interface StreamableHTTPServerTransportOptions {\n    /**\n     * Function that generates a session ID for the transport.\n     * The session ID SHOULD be globally unique and cryptographically secure (e.g., a securely generated UUID, a JWT, or a cryptographic hash)\n     *\n     * Return undefined to disable session management.\n     */\n    sessionIdGenerator: (() => string) | undefined;\n\n    /**\n     * A callback for session initialization events\n     * This is called when the server initializes a new session.\n     * Useful in cases when you need to register multiple mcp sessions\n     * and need to keep track of them.\n     * @param sessionId The generated session ID\n     */\n    onsessioninitialized?: (sessionId: string) => void | Promise<void>;\n\n    /**\n     * A callback for session close events\n     * This is called when the server closes a session due to a DELETE request.\n     * Useful in cases when you need to clean up resources associated with the session.\n     * Note that this is different from the transport closing, if you are handling\n     * HTTP requests from multiple nodes you might want to close each\n     * StreamableHTTPServerTransport after a request is completed while still keeping the\n     * session open/running.\n     * @param sessionId The session ID that was closed\n     */\n    onsessionclosed?: (sessionId: string) => void | Promise<void>;\n\n    /**\n     * If true, the server will return JSON responses instead of starting an SSE stream.\n     * This can be useful for simple request/response scenarios without streaming.\n     * Default is false (SSE streams are preferred).\n     */\n    enableJsonResponse?: boolean;\n\n    /**\n     * Event store for resumability support\n     * If provided, resumability will be enabled, allowing clients to reconnect and resume messages\n     */\n    eventStore?: EventStore;\n\n    /**\n     * List of allowed host header values for DNS rebinding protection.\n     * If not specified, host validation is disabled.\n     */\n    allowedHosts?: string[];\n\n    /**\n     * List of allowed origin header values for DNS rebinding protection.\n     * If not specified, origin validation is disabled.\n     */\n    allowedOrigins?: string[];\n\n    /**\n     * Enable DNS rebinding protection (requires allowedHosts and/or allowedOrigins to be configured).\n     * Default is false for backwards compatibility.\n     */\n    enableDnsRebindingProtection?: boolean;\n}\n\n/**\n * Server transport for Streamable HTTP: this implements the MCP Streamable HTTP transport specification.\n * It supports both SSE streaming and direct HTTP responses.\n *\n * Usage example:\n *\n * ```typescript\n * // Stateful mode - server sets the session ID\n * const statefulTransport = new StreamableHTTPServerTransport({\n *   sessionIdGenerator: () => randomUUID(),\n * });\n *\n * // Stateless mode - explicitly set session ID to undefined\n * const statelessTransport = new StreamableHTTPServerTransport({\n *   sessionIdGenerator: undefined,\n * });\n *\n * // Using with pre-parsed request body\n * app.post('/mcp', (req, res) => {\n *   transport.handleRequest(req, res, req.body);\n * });\n * ```\n *\n * In stateful mode:\n * - Session ID is generated and included in response headers\n * - Session ID is always included in initialization responses\n * - Requests with invalid session IDs are rejected with 404 Not Found\n * - Non-initialization requests without a session ID are rejected with 400 Bad Request\n * - State is maintained in-memory (connections, message history)\n *\n * In stateless mode:\n * - No Session ID is included in any responses\n * - No session validation is performed\n */\nexport class StreamableHTTPServerTransport implements Transport {\n    // when sessionId is not set (undefined), it means the transport is in stateless mode\n    private sessionIdGenerator: (() => string) | undefined;\n    private _started: boolean = false;\n    private _streamMapping: Map<string, ServerResponse> = new Map();\n    private _requestToStreamMapping: Map<RequestId, string> = new Map();\n    private _requestResponseMap: Map<RequestId, JSONRPCMessage> = new Map();\n    private _initialized: boolean = false;\n    private _enableJsonResponse: boolean = false;\n    private _standaloneSseStreamId: string = '_GET_stream';\n    private _eventStore?: EventStore;\n    private _onsessioninitialized?: (sessionId: string) => void | Promise<void>;\n    private _onsessionclosed?: (sessionId: string) => void | Promise<void>;\n    private _allowedHosts?: string[];\n    private _allowedOrigins?: string[];\n    private _enableDnsRebindingProtection: boolean;\n\n    sessionId?: string;\n    onclose?: () => void;\n    onerror?: (error: Error) => void;\n    onmessage?: (message: JSONRPCMessage, extra?: MessageExtraInfo) => void;\n\n    constructor(options: StreamableHTTPServerTransportOptions) {\n        this.sessionIdGenerator = options.sessionIdGenerator;\n        this._enableJsonResponse = options.enableJsonResponse ?? false;\n        this._eventStore = options.eventStore;\n        this._onsessioninitialized = options.onsessioninitialized;\n        this._onsessionclosed = options.onsessionclosed;\n        this._allowedHosts = options.allowedHosts;\n        this._allowedOrigins = options.allowedOrigins;\n        this._enableDnsRebindingProtection = options.enableDnsRebindingProtection ?? false;\n    }\n\n    /**\n     * Starts the transport. This is required by the Transport interface but is a no-op\n     * for the Streamable HTTP transport as connections are managed per-request.\n     */\n    async start(): Promise<void> {\n        if (this._started) {\n            throw new Error('Transport already started');\n        }\n        this._started = true;\n    }\n\n    /**\n     * Validates request headers for DNS rebinding protection.\n     * @returns Error message if validation fails, undefined if validation passes.\n     */\n    private validateRequestHeaders(req: IncomingMessage): string | undefined {\n        // Skip validation if protection is not enabled\n        if (!this._enableDnsRebindingProtection) {\n            return undefined;\n        }\n\n        // Validate Host header if allowedHosts is configured\n        if (this._allowedHosts && this._allowedHosts.length > 0) {\n            const hostHeader = req.headers.host;\n            if (!hostHeader || !this._allowedHosts.includes(hostHeader)) {\n                return `Invalid Host header: ${hostHeader}`;\n            }\n        }\n\n        // Validate Origin header if allowedOrigins is configured\n        if (this._allowedOrigins && this._allowedOrigins.length > 0) {\n            const originHeader = req.headers.origin;\n            if (!originHeader || !this._allowedOrigins.includes(originHeader)) {\n                return `Invalid Origin header: ${originHeader}`;\n            }\n        }\n\n        return undefined;\n    }\n\n    /**\n     * Handles an incoming HTTP request, whether GET or POST\n     */\n    async handleRequest(req: IncomingMessage & { auth?: AuthInfo }, res: ServerResponse, parsedBody?: unknown): Promise<void> {\n        // Validate request headers for DNS rebinding protection\n        const validationError = this.validateRequestHeaders(req);\n        if (validationError) {\n            res.writeHead(403).end(\n                JSON.stringify({\n                    jsonrpc: '2.0',\n                    error: {\n                        code: -32000,\n                        message: validationError\n                    },\n                    id: null\n                })\n            );\n            this.onerror?.(new Error(validationError));\n            return;\n        }\n\n        if (req.method === 'POST') {\n            await this.handlePostRequest(req, res, parsedBody);\n        } else if (req.method === 'GET') {\n            await this.handleGetRequest(req, res);\n        } else if (req.method === 'DELETE') {\n            await this.handleDeleteRequest(req, res);\n        } else {\n            await this.handleUnsupportedRequest(res);\n        }\n    }\n\n    /**\n     * Handles GET requests for SSE stream\n     */\n    private async handleGetRequest(req: IncomingMessage, res: ServerResponse): Promise<void> {\n        // The client MUST include an Accept header, listing text/event-stream as a supported content type.\n        const acceptHeader = req.headers.accept;\n        if (!acceptHeader?.includes('text/event-stream')) {\n            res.writeHead(406).end(\n                JSON.stringify({\n                    jsonrpc: '2.0',\n                    error: {\n                        code: -32000,\n                        message: 'Not Acceptable: Client must accept text/event-stream'\n                    },\n                    id: null\n                })\n            );\n            return;\n        }\n\n        // If an Mcp-Session-Id is returned by the server during initialization,\n        // clients using the Streamable HTTP transport MUST include it\n        // in the Mcp-Session-Id header on all of their subsequent HTTP requests.\n        if (!this.validateSession(req, res)) {\n            return;\n        }\n        if (!this.validateProtocolVersion(req, res)) {\n            return;\n        }\n        // Handle resumability: check for Last-Event-ID header\n        if (this._eventStore) {\n            const lastEventId = req.headers['last-event-id'] as string | undefined;\n            if (lastEventId) {\n                await this.replayEvents(lastEventId, res);\n                return;\n            }\n        }\n\n        // The server MUST either return Content-Type: text/event-stream in response to this HTTP GET,\n        // or else return HTTP 405 Method Not Allowed\n        const headers: Record<string, string> = {\n            'Content-Type': 'text/event-stream',\n            'Cache-Control': 'no-cache, no-transform',\n            Connection: 'keep-alive'\n        };\n\n        // After initialization, always include the session ID if we have one\n        if (this.sessionId !== undefined) {\n            headers['mcp-session-id'] = this.sessionId;\n        }\n\n        // Check if there's already an active standalone SSE stream for this session\n        if (this._streamMapping.get(this._standaloneSseStreamId) !== undefined) {\n            // Only one GET SSE stream is allowed per session\n            res.writeHead(409).end(\n                JSON.stringify({\n                    jsonrpc: '2.0',\n                    error: {\n                        code: -32000,\n                        message: 'Conflict: Only one SSE stream is allowed per session'\n                    },\n                    id: null\n                })\n            );\n            return;\n        }\n\n        // We need to send headers immediately as messages will arrive much later,\n        // otherwise the client will just wait for the first message\n        res.writeHead(200, headers).flushHeaders();\n\n        // Assign the response to the standalone SSE stream\n        this._streamMapping.set(this._standaloneSseStreamId, res);\n        // Set up close handler for client disconnects\n        res.on('close', () => {\n            this._streamMapping.delete(this._standaloneSseStreamId);\n        });\n\n        // Add error handler for standalone SSE stream\n        res.on('error', error => {\n            this.onerror?.(error as Error);\n        });\n    }\n\n    /**\n     * Replays events that would have been sent after the specified event ID\n     * Only used when resumability is enabled\n     */\n    private async replayEvents(lastEventId: string, res: ServerResponse): Promise<void> {\n        if (!this._eventStore) {\n            return;\n        }\n        try {\n            const headers: Record<string, string> = {\n                'Content-Type': 'text/event-stream',\n                'Cache-Control': 'no-cache, no-transform',\n                Connection: 'keep-alive'\n            };\n\n            if (this.sessionId !== undefined) {\n                headers['mcp-session-id'] = this.sessionId;\n            }\n            res.writeHead(200, headers).flushHeaders();\n\n            const streamId = await this._eventStore?.replayEventsAfter(lastEventId, {\n                send: async (eventId: string, message: JSONRPCMessage) => {\n                    if (!this.writeSSEEvent(res, message, eventId)) {\n                        this.onerror?.(new Error('Failed replay events'));\n                        res.end();\n                    }\n                }\n            });\n            this._streamMapping.set(streamId, res);\n\n            // Add error handler for replay stream\n            res.on('error', error => {\n                this.onerror?.(error as Error);\n            });\n        } catch (error) {\n            this.onerror?.(error as Error);\n        }\n    }\n\n    /**\n     * Writes an event to the SSE stream with proper formatting\n     */\n    private writeSSEEvent(res: ServerResponse, message: JSONRPCMessage, eventId?: string): boolean {\n        let eventData = `event: message\\n`;\n        // Include event ID if provided - this is important for resumability\n        if (eventId) {\n            eventData += `id: ${eventId}\\n`;\n        }\n        eventData += `data: ${JSON.stringify(message)}\\n\\n`;\n\n        return res.write(eventData);\n    }\n\n    /**\n     * Handles unsupported requests (PUT, PATCH, etc.)\n     */\n    private async handleUnsupportedRequest(res: ServerResponse): Promise<void> {\n        res.writeHead(405, {\n            Allow: 'GET, POST, DELETE'\n        }).end(\n            JSON.stringify({\n                jsonrpc: '2.0',\n                error: {\n                    code: -32000,\n                    message: 'Method not allowed.'\n                },\n                id: null\n            })\n        );\n    }\n\n    /**\n     * Handles POST requests containing JSON-RPC messages\n     */\n    private async handlePostRequest(req: IncomingMessage & { auth?: AuthInfo }, res: ServerResponse, parsedBody?: unknown): Promise<void> {\n        try {\n            // Validate the Accept header\n            const acceptHeader = req.headers.accept;\n            // The client MUST include an Accept header, listing both application/json and text/event-stream as supported content types.\n            if (!acceptHeader?.includes('application/json') || !acceptHeader.includes('text/event-stream')) {\n                res.writeHead(406).end(\n                    JSON.stringify({\n                        jsonrpc: '2.0',\n                        error: {\n                            code: -32000,\n                            message: 'Not Acceptable: Client must accept both application/json and text/event-stream'\n                        },\n                        id: null\n                    })\n                );\n                return;\n            }\n\n            const ct = req.headers['content-type'];\n            if (!ct || !ct.includes('application/json')) {\n                res.writeHead(415).end(\n                    JSON.stringify({\n                        jsonrpc: '2.0',\n                        error: {\n                            code: -32000,\n                            message: 'Unsupported Media Type: Content-Type must be application/json'\n                        },\n                        id: null\n                    })\n                );\n                return;\n            }\n\n            const authInfo: AuthInfo | undefined = req.auth;\n            const requestInfo: RequestInfo = { headers: req.headers };\n\n            let rawMessage;\n            if (parsedBody !== undefined) {\n                rawMessage = parsedBody;\n            } else {\n                const parsedCt = contentType.parse(ct);\n                const body = await getRawBody(req, {\n                    limit: MAXIMUM_MESSAGE_SIZE,\n                    encoding: parsedCt.parameters.charset ?? 'utf-8'\n                });\n                rawMessage = JSON.parse(body.toString());\n            }\n\n            let messages: JSONRPCMessage[];\n\n            // handle batch and single messages\n            if (Array.isArray(rawMessage)) {\n                messages = rawMessage.map(msg => JSONRPCMessageSchema.parse(msg));\n            } else {\n                messages = [JSONRPCMessageSchema.parse(rawMessage)];\n            }\n\n            // Check if this is an initialization request\n            // https://spec.modelcontextprotocol.io/specification/2025-03-26/basic/lifecycle/\n            const isInitializationRequest = messages.some(isInitializeRequest);\n            if (isInitializationRequest) {\n                // If it's a server with session management and the session ID is already set we should reject the request\n                // to avoid re-initialization.\n                if (this._initialized && this.sessionId !== undefined) {\n                    res.writeHead(400).end(\n                        JSON.stringify({\n                            jsonrpc: '2.0',\n                            error: {\n                                code: -32600,\n                                message: 'Invalid Request: Server already initialized'\n                            },\n                            id: null\n                        })\n                    );\n                    return;\n                }\n                if (messages.length > 1) {\n                    res.writeHead(400).end(\n                        JSON.stringify({\n                            jsonrpc: '2.0',\n                            error: {\n                                code: -32600,\n                                message: 'Invalid Request: Only one initialization request is allowed'\n                            },\n                            id: null\n                        })\n                    );\n                    return;\n                }\n                this.sessionId = this.sessionIdGenerator?.();\n                this._initialized = true;\n\n                // If we have a session ID and an onsessioninitialized handler, call it immediately\n                // This is needed in cases where the server needs to keep track of multiple sessions\n                if (this.sessionId && this._onsessioninitialized) {\n                    await Promise.resolve(this._onsessioninitialized(this.sessionId));\n                }\n            }\n            if (!isInitializationRequest) {\n                // If an Mcp-Session-Id is returned by the server during initialization,\n                // clients using the Streamable HTTP transport MUST include it\n                // in the Mcp-Session-Id header on all of their subsequent HTTP requests.\n                if (!this.validateSession(req, res)) {\n                    return;\n                }\n                // Mcp-Protocol-Version header is required for all requests after initialization.\n                if (!this.validateProtocolVersion(req, res)) {\n                    return;\n                }\n            }\n\n            // check if it contains requests\n            const hasRequests = messages.some(isJSONRPCRequest);\n\n            if (!hasRequests) {\n                // if it only contains notifications or responses, return 202\n                res.writeHead(202).end();\n\n                // handle each message\n                for (const message of messages) {\n                    this.onmessage?.(message, { authInfo, requestInfo });\n                }\n            } else if (hasRequests) {\n                // The default behavior is to use SSE streaming\n                // but in some cases server will return JSON responses\n                const streamId = randomUUID();\n                if (!this._enableJsonResponse) {\n                    const headers: Record<string, string> = {\n                        'Content-Type': 'text/event-stream',\n                        'Cache-Control': 'no-cache',\n                        Connection: 'keep-alive'\n                    };\n\n                    // After initialization, always include the session ID if we have one\n                    if (this.sessionId !== undefined) {\n                        headers['mcp-session-id'] = this.sessionId;\n                    }\n\n                    res.writeHead(200, headers);\n                }\n                // Store the response for this request to send messages back through this connection\n                // We need to track by request ID to maintain the connection\n                for (const message of messages) {\n                    if (isJSONRPCRequest(message)) {\n                        this._streamMapping.set(streamId, res);\n                        this._requestToStreamMapping.set(message.id, streamId);\n                    }\n                }\n                // Set up close handler for client disconnects\n                res.on('close', () => {\n                    this._streamMapping.delete(streamId);\n                });\n\n                // Add error handler for stream write errors\n                res.on('error', error => {\n                    this.onerror?.(error as Error);\n                });\n\n                // handle each message\n                for (const message of messages) {\n                    this.onmessage?.(message, { authInfo, requestInfo });\n                }\n                // The server SHOULD NOT close the SSE stream before sending all JSON-RPC responses\n                // This will be handled by the send() method when responses are ready\n            }\n        } catch (error) {\n            // return JSON-RPC formatted error\n            res.writeHead(400).end(\n                JSON.stringify({\n                    jsonrpc: '2.0',\n                    error: {\n                        code: -32700,\n                        message: 'Parse error',\n                        data: String(error)\n                    },\n                    id: null\n                })\n            );\n            this.onerror?.(error as Error);\n        }\n    }\n\n    /**\n     * Handles DELETE requests to terminate sessions\n     */\n    private async handleDeleteRequest(req: IncomingMessage, res: ServerResponse): Promise<void> {\n        if (!this.validateSession(req, res)) {\n            return;\n        }\n        if (!this.validateProtocolVersion(req, res)) {\n            return;\n        }\n        await Promise.resolve(this._onsessionclosed?.(this.sessionId!));\n        await this.close();\n        res.writeHead(200).end();\n    }\n\n    /**\n     * Validates session ID for non-initialization requests\n     * Returns true if the session is valid, false otherwise\n     */\n    private validateSession(req: IncomingMessage, res: ServerResponse): boolean {\n        if (this.sessionIdGenerator === undefined) {\n            // If the sessionIdGenerator ID is not set, the session management is disabled\n            // and we don't need to validate the session ID\n            return true;\n        }\n        if (!this._initialized) {\n            // If the server has not been initialized yet, reject all requests\n            res.writeHead(400).end(\n                JSON.stringify({\n                    jsonrpc: '2.0',\n                    error: {\n                        code: -32000,\n                        message: 'Bad Request: Server not initialized'\n                    },\n                    id: null\n                })\n            );\n            return false;\n        }\n\n        const sessionId = req.headers['mcp-session-id'];\n\n        if (!sessionId) {\n            // Non-initialization requests without a session ID should return 400 Bad Request\n            res.writeHead(400).end(\n                JSON.stringify({\n                    jsonrpc: '2.0',\n                    error: {\n                        code: -32000,\n                        message: 'Bad Request: Mcp-Session-Id header is required'\n                    },\n                    id: null\n                })\n            );\n            return false;\n        } else if (Array.isArray(sessionId)) {\n            res.writeHead(400).end(\n                JSON.stringify({\n                    jsonrpc: '2.0',\n                    error: {\n                        code: -32000,\n                        message: 'Bad Request: Mcp-Session-Id header must be a single value'\n                    },\n                    id: null\n                })\n            );\n            return false;\n        } else if (sessionId !== this.sessionId) {\n            // Reject requests with invalid session ID with 404 Not Found\n            res.writeHead(404).end(\n                JSON.stringify({\n                    jsonrpc: '2.0',\n                    error: {\n                        code: -32001,\n                        message: 'Session not found'\n                    },\n                    id: null\n                })\n            );\n            return false;\n        }\n\n        return true;\n    }\n\n    private validateProtocolVersion(req: IncomingMessage, res: ServerResponse): boolean {\n        let protocolVersion = req.headers['mcp-protocol-version'] ?? DEFAULT_NEGOTIATED_PROTOCOL_VERSION;\n        if (Array.isArray(protocolVersion)) {\n            protocolVersion = protocolVersion[protocolVersion.length - 1];\n        }\n\n        if (!SUPPORTED_PROTOCOL_VERSIONS.includes(protocolVersion)) {\n            res.writeHead(400).end(\n                JSON.stringify({\n                    jsonrpc: '2.0',\n                    error: {\n                        code: -32000,\n                        message: `Bad Request: Unsupported protocol version (supported versions: ${SUPPORTED_PROTOCOL_VERSIONS.join(', ')})`\n                    },\n                    id: null\n                })\n            );\n            return false;\n        }\n        return true;\n    }\n\n    async close(): Promise<void> {\n        // Close all SSE connections\n        this._streamMapping.forEach(response => {\n            response.end();\n        });\n        this._streamMapping.clear();\n\n        // Clear any pending responses\n        this._requestResponseMap.clear();\n        this.onclose?.();\n    }\n\n    async send(message: JSONRPCMessage, options?: { relatedRequestId?: RequestId }): Promise<void> {\n        let requestId = options?.relatedRequestId;\n        if (isJSONRPCResponse(message) || isJSONRPCError(message)) {\n            // If the message is a response, use the request ID from the message\n            requestId = message.id;\n        }\n\n        // Check if this message should be sent on the standalone SSE stream (no request ID)\n        // Ignore notifications from tools (which have relatedRequestId set)\n        // Those will be sent via dedicated response SSE streams\n        if (requestId === undefined) {\n            // For standalone SSE streams, we can only send requests and notifications\n            if (isJSONRPCResponse(message) || isJSONRPCError(message)) {\n                throw new Error('Cannot send a response on a standalone SSE stream unless resuming a previous client request');\n            }\n            const standaloneSse = this._streamMapping.get(this._standaloneSseStreamId);\n            if (standaloneSse === undefined) {\n                // The spec says the server MAY send messages on the stream, so it's ok to discard if no stream\n                return;\n            }\n\n            // Generate and store event ID if event store is provided\n            let eventId: string | undefined;\n            if (this._eventStore) {\n                // Stores the event and gets the generated event ID\n                eventId = await this._eventStore.storeEvent(this._standaloneSseStreamId, message);\n            }\n\n            // Send the message to the standalone SSE stream\n            this.writeSSEEvent(standaloneSse, message, eventId);\n            return;\n        }\n\n        // Get the response for this request\n        const streamId = this._requestToStreamMapping.get(requestId);\n        const response = this._streamMapping.get(streamId!);\n        if (!streamId) {\n            throw new Error(`No connection established for request ID: ${String(requestId)}`);\n        }\n\n        if (!this._enableJsonResponse) {\n            // For SSE responses, generate event ID if event store is provided\n            let eventId: string | undefined;\n\n            if (this._eventStore) {\n                eventId = await this._eventStore.storeEvent(streamId, message);\n            }\n            if (response) {\n                // Write the event to the response stream\n                this.writeSSEEvent(response, message, eventId);\n            }\n        }\n\n        if (isJSONRPCResponse(message) || isJSONRPCError(message)) {\n            this._requestResponseMap.set(requestId, message);\n            const relatedIds = Array.from(this._requestToStreamMapping.entries())\n                .filter(([_, streamId]) => this._streamMapping.get(streamId) === response)\n                .map(([id]) => id);\n\n            // Check if we have responses for all requests using this connection\n            const allResponsesReady = relatedIds.every(id => this._requestResponseMap.has(id));\n\n            if (allResponsesReady) {\n                if (!response) {\n                    throw new Error(`No connection established for request ID: ${String(requestId)}`);\n                }\n                if (this._enableJsonResponse) {\n                    // All responses ready, send as JSON\n                    const headers: Record<string, string> = {\n                        'Content-Type': 'application/json'\n                    };\n                    if (this.sessionId !== undefined) {\n                        headers['mcp-session-id'] = this.sessionId;\n                    }\n\n                    const responses = relatedIds.map(id => this._requestResponseMap.get(id)!);\n\n                    response.writeHead(200, headers);\n                    if (responses.length === 1) {\n                        response.end(JSON.stringify(responses[0]));\n                    } else {\n                        response.end(JSON.stringify(responses));\n                    }\n                } else {\n                    // End the SSE stream\n                    response.end();\n                }\n                // Clean up\n                for (const id of relatedIds) {\n                    this._requestResponseMap.delete(id);\n                    this._requestToStreamMapping.delete(id);\n                }\n            }\n        }\n    }\n}\n"],"names":["util","items","key","objectUtil","data","map","status","errorUtil","processCreateParams","errorMap","description","emojiRegex","regex","ctx","result","index","issues","types","type","elements","processed","custom","ZodFirstPartyTypeKind","ErrorCode","resolve","jsonrpcNotification","global","define","this","exports","isIRI","HEXDIG$$","PCT_ENCODED$","UNRESERVED$$","ucs2encode","basicToDigit","digitToBasic","adapt","decode","encode","toUnicode","toASCII","decodeUnreserved","parse","base","uri","equal","serialize","UUID","ucs2length","toHash","require$$0","require$$1","OK","IDENTIFIER","rules","JSON_POINTER","RELATIVE_JSON_POINTER","SchemaObject","traverse","jsonSchemaTraverseModule","URI","require$$2","require$$3","require$$4","compile","ref","self","ValidationError","MissingRefError","validate","$id","$schema","$rulesGroup","$rule","errorClasses","stableStringify","require$$5","formats","localRefs","baseId","customRuleCode","v","refVal","schema","keyword","validateSchema","Cache","cacheModule","URL","$sch","format","properties","required","require$$7","require$$8","require$$9","require$$11","require$$12","require$$13","require$$14","require$$19","require$$21","require$$23","KEYWORDS","metaSchema","dataType","definition","i","require$$6","addFormat","require$$10","noop","Ajv","isValid","buffer","codeVerifier","tokens","error","contentType","ajv","allOf","additionalProperties","pattern","x","anyOf","definitions","name","title","McpZodTypeKind","value","encoded","values","bytesModule","bytes","format_1","parse_1","codes","inherits_browserModule","statuses","toIdentifier","createError","ServerError","Buffer","iconv","base64Regex","bomHandling","getDecoder","stream_module","streams","unpipe","getRawBody","streamId"],"mappings":"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","x_google_ignoreList":[0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,53,54,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119]}