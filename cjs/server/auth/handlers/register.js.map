{"version":3,"file":"register.js","sources":["../../../../../src/server/auth/handlers/register.ts"],"sourcesContent":["import express, { RequestHandler } from 'express';\nimport { OAuthClientInformationFull, OAuthClientMetadataSchema } from '../../../shared/auth.js';\nimport crypto from 'node:crypto';\nimport cors from 'cors';\nimport { OAuthRegisteredClientsStore } from '../clients.js';\nimport { rateLimit, Options as RateLimitOptions } from 'express-rate-limit';\nimport { allowedMethods } from '../middleware/allowedMethods.js';\nimport { InvalidClientMetadataError, ServerError, TooManyRequestsError, OAuthError } from '../errors.js';\n\nexport type ClientRegistrationHandlerOptions = {\n    /**\n     * A store used to save information about dynamically registered OAuth clients.\n     */\n    clientsStore: OAuthRegisteredClientsStore;\n\n    /**\n     * The number of seconds after which to expire issued client secrets, or 0 to prevent expiration of client secrets (not recommended).\n     *\n     * If not set, defaults to 30 days.\n     */\n    clientSecretExpirySeconds?: number;\n\n    /**\n     * Rate limiting configuration for the client registration endpoint.\n     * Set to false to disable rate limiting for this endpoint.\n     * Registration endpoints are particularly sensitive to abuse and should be rate limited.\n     */\n    rateLimit?: Partial<RateLimitOptions> | false;\n\n    /**\n     * Whether to generate a client ID before calling the client registration endpoint.\n     *\n     * If not set, defaults to true.\n     */\n    clientIdGeneration?: boolean;\n};\n\nconst DEFAULT_CLIENT_SECRET_EXPIRY_SECONDS = 30 * 24 * 60 * 60; // 30 days\n\nexport function clientRegistrationHandler({\n    clientsStore,\n    clientSecretExpirySeconds = DEFAULT_CLIENT_SECRET_EXPIRY_SECONDS,\n    rateLimit: rateLimitConfig,\n    clientIdGeneration = true\n}: ClientRegistrationHandlerOptions): RequestHandler {\n    if (!clientsStore.registerClient) {\n        throw new Error('Client registration store does not support registering clients');\n    }\n\n    // Nested router so we can configure middleware and restrict HTTP method\n    const router = express.Router();\n\n    // Configure CORS to allow any origin, to make accessible to web-based MCP clients\n    router.use(cors());\n\n    router.use(allowedMethods(['POST']));\n    router.use(express.json());\n\n    // Apply rate limiting unless explicitly disabled - stricter limits for registration\n    if (rateLimitConfig !== false) {\n        router.use(\n            rateLimit({\n                windowMs: 60 * 60 * 1000, // 1 hour\n                max: 20, // 20 requests per hour - stricter as registration is sensitive\n                standardHeaders: true,\n                legacyHeaders: false,\n                message: new TooManyRequestsError('You have exceeded the rate limit for client registration requests').toResponseObject(),\n                ...rateLimitConfig\n            })\n        );\n    }\n\n    router.post('/', async (req, res) => {\n        res.setHeader('Cache-Control', 'no-store');\n\n        try {\n            const parseResult = OAuthClientMetadataSchema.safeParse(req.body);\n            if (!parseResult.success) {\n                throw new InvalidClientMetadataError(parseResult.error.message);\n            }\n\n            const clientMetadata = parseResult.data;\n            const isPublicClient = clientMetadata.token_endpoint_auth_method === 'none';\n\n            // Generate client credentials\n            const clientSecret = isPublicClient ? undefined : crypto.randomBytes(32).toString('hex');\n            const clientIdIssuedAt = Math.floor(Date.now() / 1000);\n\n            // Calculate client secret expiry time\n            const clientsDoExpire = clientSecretExpirySeconds > 0;\n            const secretExpiryTime = clientsDoExpire ? clientIdIssuedAt + clientSecretExpirySeconds : 0;\n            const clientSecretExpiresAt = isPublicClient ? undefined : secretExpiryTime;\n\n            let clientInfo: Omit<OAuthClientInformationFull, 'client_id'> & { client_id?: string } = {\n                ...clientMetadata,\n                client_secret: clientSecret,\n                client_secret_expires_at: clientSecretExpiresAt\n            };\n\n            if (clientIdGeneration) {\n                clientInfo.client_id = crypto.randomUUID();\n                clientInfo.client_id_issued_at = clientIdIssuedAt;\n            }\n\n            clientInfo = await clientsStore.registerClient!(clientInfo);\n            res.status(201).json(clientInfo);\n        } catch (error) {\n            if (error instanceof OAuthError) {\n                const status = error instanceof ServerError ? 500 : 400;\n                res.status(status).json(error.toResponseObject());\n            } else {\n                const serverError = new ServerError('Internal Server Error');\n                res.status(500).json(serverError.toResponseObject());\n            }\n        }\n    });\n\n    return router;\n}\n"],"names":["allowedMethods","rateLimit","TooManyRequestsError","OAuthClientMetadataSchema","InvalidClientMetadataError","OAuthError","ServerError"],"mappings":";;;;;;;;;AAqCA,MAAM,uCAAuC,KAAK,KAAK,KAAK;AAErD,SAAS,0BAA0B;AAAA,EACtC;AAAA,EACA,4BAA4B;AAAA,EAC5B,WAAW;AAAA,EACX,qBAAqB;AACzB,GAAqD;AACjD,MAAI,CAAC,aAAa,gBAAgB;AAC9B,UAAM,IAAI,MAAM,gEAAgE;AAAA,EACpF;AAGA,QAAM,SAAS,QAAQ,OAAA;AAGvB,SAAO,IAAI,MAAM;AAEjB,SAAO,IAAIA,eAAAA,eAAe,CAAC,MAAM,CAAC,CAAC;AACnC,SAAO,IAAI,QAAQ,MAAM;AAGzB,MAAI,oBAAoB,OAAO;AAC3B,WAAO;AAAA,MACHC,2BAAU;AAAA,QACN,UAAU,KAAK,KAAK;AAAA;AAAA,QACpB,KAAK;AAAA;AAAA,QACL,iBAAiB;AAAA,QACjB,eAAe;AAAA,QACf,SAAS,IAAIC,OAAAA,qBAAqB,mEAAmE,EAAE,iBAAA;AAAA,QACvG,GAAG;AAAA,MAAA,CACN;AAAA,IAAA;AAAA,EAET;AAEA,SAAO,KAAK,KAAK,OAAO,KAAK,QAAQ;AACjC,QAAI,UAAU,iBAAiB,UAAU;AAEzC,QAAI;AACA,YAAM,cAAcC,KAAAA,0BAA0B,UAAU,IAAI,IAAI;AAChE,UAAI,CAAC,YAAY,SAAS;AACtB,cAAM,IAAIC,OAAAA,2BAA2B,YAAY,MAAM,OAAO;AAAA,MAClE;AAEA,YAAM,iBAAiB,YAAY;AACnC,YAAM,iBAAiB,eAAe,+BAA+B;AAGrE,YAAM,eAAe,iBAAiB,SAAY,OAAO,YAAY,EAAE,EAAE,SAAS,KAAK;AACvF,YAAM,mBAAmB,KAAK,MAAM,KAAK,IAAA,IAAQ,GAAI;AAGrD,YAAM,kBAAkB,4BAA4B;AACpD,YAAM,mBAAmB,kBAAkB,mBAAmB,4BAA4B;AAC1F,YAAM,wBAAwB,iBAAiB,SAAY;AAE3D,UAAI,aAAqF;AAAA,QACrF,GAAG;AAAA,QACH,eAAe;AAAA,QACf,0BAA0B;AAAA,MAAA;AAG9B,UAAI,oBAAoB;AACpB,mBAAW,YAAY,OAAO,WAAA;AAC9B,mBAAW,sBAAsB;AAAA,MACrC;AAEA,mBAAa,MAAM,aAAa,eAAgB,UAAU;AAC1D,UAAI,OAAO,GAAG,EAAE,KAAK,UAAU;AAAA,IACnC,SAAS,OAAO;AACZ,UAAI,iBAAiBC,OAAAA,YAAY;AAC7B,cAAM,SAAS,iBAAiBC,OAAAA,cAAc,MAAM;AACpD,YAAI,OAAO,MAAM,EAAE,KAAK,MAAM,kBAAkB;AAAA,MACpD,OAAO;AACH,cAAM,cAAc,IAAIA,OAAAA,YAAY,uBAAuB;AAC3D,YAAI,OAAO,GAAG,EAAE,KAAK,YAAY,kBAAkB;AAAA,MACvD;AAAA,IACJ;AAAA,EACJ,CAAC;AAED,SAAO;AACX;;"}