{"version":3,"file":"metadata.js","sources":["../../../../../src/server/auth/handlers/metadata.ts"],"sourcesContent":["import express, { RequestHandler } from 'express';\nimport { OAuthMetadata, OAuthProtectedResourceMetadata } from '../../../shared/auth.js';\nimport cors from 'cors';\nimport { allowedMethods } from '../middleware/allowedMethods.js';\n\nexport function metadataHandler(metadata: OAuthMetadata | OAuthProtectedResourceMetadata): RequestHandler {\n    // Nested router so we can configure middleware and restrict HTTP method\n    const router = express.Router();\n\n    // Configure CORS to allow any origin, to make accessible to web-based MCP clients\n    router.use(cors());\n\n    router.use(allowedMethods(['GET']));\n    router.get('/', (req, res) => {\n        res.status(200).json(metadata);\n    });\n\n    return router;\n}\n"],"names":["allowedMethods"],"mappings":";;;;;AAKO,SAAS,gBAAgB,UAA0E;AAEtG,QAAM,SAAS,QAAQ,OAAA;AAGvB,SAAO,IAAI,MAAM;AAEjB,SAAO,IAAIA,eAAAA,eAAe,CAAC,KAAK,CAAC,CAAC;AAClC,SAAO,IAAI,KAAK,CAAC,KAAK,QAAQ;AAC1B,QAAI,OAAO,GAAG,EAAE,KAAK,QAAQ;AAAA,EACjC,CAAC;AAED,SAAO;AACX;;"}